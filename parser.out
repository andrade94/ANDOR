Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TRUE
    AND
    FALSE
    NOT
    OR

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     FINAL -> <empty>
Rule 2     PROGRAMA -> PROGRAMAZ PROGRAMAB PRINCIPAL
Rule 3     PROGRAMAB -> PROGRAMAS
Rule 4     PROGRAMAB -> FINAL
Rule 5     PROGRAMAS -> FUNCION
Rule 6     PROGRAMAS -> PROGRAMAB
Rule 7     PROGRAMAZ -> FINAL
Rule 8     PROGRAMAZ -> GLOBALES
Rule 9     GLOBALES -> GLOBAL VART
Rule 10    VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR
Rule 11    VART -> DATA_TIPOS ID VARZ
Rule 12    VART -> ARR ID
Rule 13    VARZ -> FINAL
Rule 14    VARZ -> EQUAL EXP
Rule 15    ESTATUTO -> ASIGNACION
Rule 16    ESTATUTO -> CONDICION
Rule 17    ESTATUTO -> CICLO
Rule 18    ESTATUTO -> ACCION
Rule 19    ESTATUTO -> VART
Rule 20    ESTATUTO -> LLAMADA_FUNCION
Rule 21    ESTATUTO -> IMPRIMIR
Rule 22    BLOQUE -> ESTATUTO BLOQUEP
Rule 23    BLOQUEP -> BLOQUE
Rule 24    BLOQUEP -> FINAL
Rule 25    DATA_TIPOS -> INT
Rule 26    DATA_TIPOS -> BOOLEAN
Rule 27    DATA_TIPOS -> CHAR
Rule 28    DATA_TIPOS -> STRING
Rule 29    DATA_TIPOS -> FLOAT
Rule 30    ASOP -> PLUS
Rule 31    ASOP -> MINUS
Rule 32    MDOP -> MULT
Rule 33    MDOP -> DIVI
Rule 34    ASIGNACION -> ID ASIGNACIONP
Rule 35    ASIGNACIONP -> EQUAL EXPRE
Rule 36    ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA
Rule 37    ASIGNACIONZ -> COMMA ICTE
Rule 38    ASIGNACIONZ -> FINAL
Rule 39    ARR -> DATA_TIPOS LBRA ICTE ARRZ RBRA
Rule 40    ARRZ -> COMMA ICTE
Rule 41    ARRZ -> FINAL
Rule 42    LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR
Rule 43    LLAMADA_FUNCIONP -> EXPRE LLAMADA_FUNCIONZ
Rule 44    LLAMADA_FUNCIONP -> FINAL
Rule 45    LLAMADA_FUNCIONZ -> COMMA LLAMADA_FUNCIONP
Rule 46    LLAMADA_FUNCIONZ -> FINAL
Rule 47    PRINCIPAL -> DEFINE VOID MAIN LPAR RPAR BLOQUE END
Rule 48    CICLO -> WHILEF
Rule 49    CICLO -> FORZ
Rule 50    WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END
Rule 51    FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
Rule 52    CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
Rule 53    CONDICIONP -> ELSE CONDICIONZ
Rule 54    CONDICIONP -> FINAL
Rule 55    CONDICIONZ -> BLOQUE FINAL
Rule 56    CONDICIONZ -> CONDICION
Rule 57    RELOP -> LESSTH
Rule 58    RELOP -> GREATERTH
Rule 59    RELOP -> SEQUAL
Rule 60    RELOP -> NOTEQ
Rule 61    RELOP -> LESSEQTH
Rule 62    RELOP -> GREATEREQTH
Rule 63    EXPRE -> EXP EXPREZ
Rule 64    EXPREZ -> RELOP EXP
Rule 65    EXPREZ -> FINAL
Rule 66    EXP -> TERMINO EXP_W_SIGN
Rule 67    EXP_W_SIGN -> ASOP EXP
Rule 68    EXP_W_SIGN -> FINAL
Rule 69    TERMINO -> FAC TERMINO_W_SIGN
Rule 70    TERMINO_W_SIGN -> MDOP TERMINO
Rule 71    TERMINO_W_SIGN -> FINAL
Rule 72    VAR_CTE -> ICTE
Rule 73    VAR_CTE -> FCTE
Rule 74    VAR_CTE -> LLAMADA_FUNCION
Rule 75    IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA
Rule 76    IMPRIMIRZ -> EXPRE
Rule 77    IMPRIMIRZ -> SCTE
Rule 78    FAC -> LPAR EXPRE RPAR
Rule 79    FAC -> FACS VAR_CTE
Rule 80    FAC -> ID FACT
Rule 81    FACT -> LBRA EXP FACZ RBRA
Rule 82    FACT -> FINAL
Rule 83    FACS -> ASOP
Rule 84    FACS -> FINAL
Rule 85    FACZ -> COMMA EXP
Rule 86    FACZ -> FINAL
Rule 87    FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN BLOQUE RETURN EXP END
Rule 88    ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR
Rule 89    VAR_FUN -> LPAR VAR_FUNP RPAR
Rule 90    VAR_FUNP -> DATA_TIPOS ID VAR_FUNZ
Rule 91    VAR_FUNZ -> COMMA VAR_FUNP
Rule 92    VAR_FUNZ -> FINAL
Rule 93    DIBUJA -> DEFINIRPOSICION
Rule 94    DIBUJA -> DEFINIRCOLOR
Rule 95    DIBUJA -> DERECHO
Rule 96    DIBUJA -> REVERSA
Rule 97    DIBUJA -> IZQUIERDA
Rule 98    DIBUJA -> DERECHA
Rule 99    DIBUJA -> VELOCIDAD
Rule 100   DIBUJA -> BORRAR
Rule 101   DIBUJA -> MOSTRAR
Rule 102   DIBUJA -> OCULTAR
Rule 103   DIBUJA -> CIRCULO
Rule 104   DIBUJA -> DEFINIRX
Rule 105   DIBUJA -> DEFINIRY
Rule 106   DIBUJA -> ARCO
Rule 107   DIBUJA -> GROSOR

Terminals, with rules where they appear

AND                  : 
ARCO                 : 106
BOOLEAN              : 26
BORRAR               : 100
CHAR                 : 27
CIRCULO              : 103
COMMA                : 37 40 45 51 51 85 91
DEFINE               : 47 87
DEFINIRCOLOR         : 94
DEFINIRPOSICION      : 93
DEFINIRX             : 104
DEFINIRY             : 105
DERECHA              : 98
DERECHO              : 95
DIVI                 : 33
DRAW                 : 10
DRAWI                : 10
ELSE                 : 53
END                  : 47 50 51 52 87
EQUAL                : 10 14 35
FALSE                : 
FCTE                 : 73
FLOAT                : 29
FOR                  : 51
GLOBAL               : 9
GREATEREQTH          : 62
GREATERTH            : 58
GROSOR               : 107
ICTE                 : 36 37 39 40 51 51 51 72
ID                   : 10 11 12 34 42 80 87 88 90
IF                   : 52
INT                  : 25
IZQUIERDA            : 97
LBRA                 : 36 39 75 81
LESSEQTH             : 61
LESSTH               : 57
LPAR                 : 10 42 47 50 51 52 78 88 89
MAIN                 : 47
MINUS                : 31
MOSTRAR              : 101
MULT                 : 32
NEW                  : 10
NOT                  : 
NOTEQ                : 60
OCULTAR              : 102
OR                   : 
PLUS                 : 30
POINT                : 88
PRINT                : 75
RBRA                 : 36 39 75 81
RETURN               : 87
REVERSA              : 96
RPAR                 : 10 42 47 50 51 52 78 88 89
SCTE                 : 77
SEQUAL               : 59
STRING               : 28
TRUE                 : 
VELOCIDAD            : 99
VOID                 : 47
WHILE                : 50
error                : 

Nonterminals, with rules where they appear

ACCION               : 18
ARR                  : 12
ARRZ                 : 39
ASIGNACION           : 15
ASIGNACIONP          : 34
ASIGNACIONZ          : 36
ASOP                 : 67 83
BLOQUE               : 23 47 50 51 52 55 87
BLOQUEP              : 22
CICLO                : 17
CONDICION            : 16 56
CONDICIONP           : 52
CONDICIONZ           : 53
DATA_TIPOS           : 11 39 87 90
DIBUJA               : 88
ESTATUTO             : 22
EXP                  : 14 63 64 67 81 85 87
EXPRE                : 35 43 50 52 76 78
EXPREZ               : 63
EXP_W_SIGN           : 66
FAC                  : 69
FACS                 : 79
FACT                 : 80
FACZ                 : 81
FINAL                : 4 7 13 24 38 41 44 46 54 55 65 68 71 82 84 86 92
FORZ                 : 49
FUNCION              : 5
GLOBALES             : 8
IMPRIMIR             : 21
IMPRIMIRZ            : 75
LLAMADA_FUNCION      : 20 74
LLAMADA_FUNCIONP     : 42 45
LLAMADA_FUNCIONZ     : 43
MDOP                 : 70
PRINCIPAL            : 2
PROGRAMA             : 0
PROGRAMAB            : 2 6
PROGRAMAS            : 3
PROGRAMAZ            : 2
RELOP                : 64
TERMINO              : 66 70
TERMINO_W_SIGN       : 69
VART                 : 9 19
VARZ                 : 11
VAR_CTE              : 79 88
VAR_FUN              : 87
VAR_FUNP             : 89 91
VAR_FUNZ             : 90
WHILEF               : 48

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (2) PROGRAMA -> . PROGRAMAZ PROGRAMAB PRINCIPAL
    (7) PROGRAMAZ -> . FINAL
    (8) PROGRAMAZ -> . GLOBALES
    (1) FINAL -> .
    (9) GLOBALES -> . GLOBAL VART

    DEFINE          reduce using rule 1 (FINAL -> .)
    GLOBAL          shift and go to state 2

    PROGRAMAZ                      shift and go to state 1
    GLOBALES                       shift and go to state 3
    PROGRAMA                       shift and go to state 4
    FINAL                          shift and go to state 5

state 1

    (2) PROGRAMA -> PROGRAMAZ . PROGRAMAB PRINCIPAL
    (3) PROGRAMAB -> . PROGRAMAS
    (4) PROGRAMAB -> . FINAL
    (5) PROGRAMAS -> . FUNCION
    (6) PROGRAMAS -> . PROGRAMAB
    (1) FINAL -> .
    (87) FUNCION -> . DEFINE DATA_TIPOS ID VAR_FUN BLOQUE RETURN EXP END

  ! shift/reduce conflict for DEFINE resolved as shift
    DEFINE          shift and go to state 6

  ! DEFINE          [ reduce using rule 1 (FINAL -> .) ]

    PROGRAMAS                      shift and go to state 7
    PROGRAMAB                      shift and go to state 8
    FINAL                          shift and go to state 9
    FUNCION                        shift and go to state 10

state 2

    (9) GLOBALES -> GLOBAL . VART
    (10) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (11) VART -> . DATA_TIPOS ID VARZ
    (12) VART -> . ARR ID
    (25) DATA_TIPOS -> . INT
    (26) DATA_TIPOS -> . BOOLEAN
    (27) DATA_TIPOS -> . CHAR
    (28) DATA_TIPOS -> . STRING
    (29) DATA_TIPOS -> . FLOAT
    (39) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    DRAW            shift and go to state 12
    INT             shift and go to state 16
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    FLOAT           shift and go to state 13

    VART                           shift and go to state 11
    ARR                            shift and go to state 18
    DATA_TIPOS                     shift and go to state 15

state 3

    (8) PROGRAMAZ -> GLOBALES .

    DEFINE          reduce using rule 8 (PROGRAMAZ -> GLOBALES .)


state 4

    (0) S' -> PROGRAMA .



state 5

    (7) PROGRAMAZ -> FINAL .

    DEFINE          reduce using rule 7 (PROGRAMAZ -> FINAL .)


state 6

    (87) FUNCION -> DEFINE . DATA_TIPOS ID VAR_FUN BLOQUE RETURN EXP END
    (25) DATA_TIPOS -> . INT
    (26) DATA_TIPOS -> . BOOLEAN
    (27) DATA_TIPOS -> . CHAR
    (28) DATA_TIPOS -> . STRING
    (29) DATA_TIPOS -> . FLOAT

    INT             shift and go to state 16
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    FLOAT           shift and go to state 13

    DATA_TIPOS                     shift and go to state 20

state 7

    (3) PROGRAMAB -> PROGRAMAS .

    DEFINE          reduce using rule 3 (PROGRAMAB -> PROGRAMAS .)


state 8

    (2) PROGRAMA -> PROGRAMAZ PROGRAMAB . PRINCIPAL
    (6) PROGRAMAS -> PROGRAMAB .
    (47) PRINCIPAL -> . DEFINE VOID MAIN LPAR RPAR BLOQUE END

  ! shift/reduce conflict for DEFINE resolved as shift
    DEFINE          shift and go to state 22

  ! DEFINE          [ reduce using rule 6 (PROGRAMAS -> PROGRAMAB .) ]

    PRINCIPAL                      shift and go to state 21

state 9

    (4) PROGRAMAB -> FINAL .

    DEFINE          reduce using rule 4 (PROGRAMAB -> FINAL .)


state 10

    (5) PROGRAMAS -> FUNCION .

    DEFINE          reduce using rule 5 (PROGRAMAS -> FUNCION .)


state 11

    (9) GLOBALES -> GLOBAL VART .

    DEFINE          reduce using rule 9 (GLOBALES -> GLOBAL VART .)


state 12

    (10) VART -> DRAW . ID EQUAL NEW DRAWI LPAR RPAR

    ID              shift and go to state 23


state 13

    (29) DATA_TIPOS -> FLOAT .

    ID              reduce using rule 29 (DATA_TIPOS -> FLOAT .)
    LBRA            reduce using rule 29 (DATA_TIPOS -> FLOAT .)


state 14

    (28) DATA_TIPOS -> STRING .

    ID              reduce using rule 28 (DATA_TIPOS -> STRING .)
    LBRA            reduce using rule 28 (DATA_TIPOS -> STRING .)


state 15

    (11) VART -> DATA_TIPOS . ID VARZ
    (39) ARR -> DATA_TIPOS . LBRA ICTE ARRZ RBRA

    ID              shift and go to state 25
    LBRA            shift and go to state 24


state 16

    (25) DATA_TIPOS -> INT .

    ID              reduce using rule 25 (DATA_TIPOS -> INT .)
    LBRA            reduce using rule 25 (DATA_TIPOS -> INT .)


state 17

    (27) DATA_TIPOS -> CHAR .

    ID              reduce using rule 27 (DATA_TIPOS -> CHAR .)
    LBRA            reduce using rule 27 (DATA_TIPOS -> CHAR .)


state 18

    (12) VART -> ARR . ID

    ID              shift and go to state 26


state 19

    (26) DATA_TIPOS -> BOOLEAN .

    ID              reduce using rule 26 (DATA_TIPOS -> BOOLEAN .)
    LBRA            reduce using rule 26 (DATA_TIPOS -> BOOLEAN .)


state 20

    (87) FUNCION -> DEFINE DATA_TIPOS . ID VAR_FUN BLOQUE RETURN EXP END

    ID              shift and go to state 27


state 21

    (2) PROGRAMA -> PROGRAMAZ PROGRAMAB PRINCIPAL .

    $end            reduce using rule 2 (PROGRAMA -> PROGRAMAZ PROGRAMAB PRINCIPAL .)


state 22

    (47) PRINCIPAL -> DEFINE . VOID MAIN LPAR RPAR BLOQUE END

    VOID            shift and go to state 28


state 23

    (10) VART -> DRAW ID . EQUAL NEW DRAWI LPAR RPAR

    EQUAL           shift and go to state 29


state 24

    (39) ARR -> DATA_TIPOS LBRA . ICTE ARRZ RBRA

    ICTE            shift and go to state 30


state 25

    (11) VART -> DATA_TIPOS ID . VARZ
    (13) VARZ -> . FINAL
    (14) VARZ -> . EQUAL EXP
    (1) FINAL -> .

    EQUAL           shift and go to state 31
    DEFINE          reduce using rule 1 (FINAL -> .)
    ID              reduce using rule 1 (FINAL -> .)
    IF              reduce using rule 1 (FINAL -> .)
    DRAW            reduce using rule 1 (FINAL -> .)
    PRINT           reduce using rule 1 (FINAL -> .)
    WHILE           reduce using rule 1 (FINAL -> .)
    FOR             reduce using rule 1 (FINAL -> .)
    INT             reduce using rule 1 (FINAL -> .)
    BOOLEAN         reduce using rule 1 (FINAL -> .)
    CHAR            reduce using rule 1 (FINAL -> .)
    STRING          reduce using rule 1 (FINAL -> .)
    FLOAT           reduce using rule 1 (FINAL -> .)
    RETURN          reduce using rule 1 (FINAL -> .)
    END             reduce using rule 1 (FINAL -> .)
    ELSE            reduce using rule 1 (FINAL -> .)

    FINAL                          shift and go to state 33
    VARZ                           shift and go to state 32

state 26

    (12) VART -> ARR ID .

    ID              reduce using rule 12 (VART -> ARR ID .)
    IF              reduce using rule 12 (VART -> ARR ID .)
    DRAW            reduce using rule 12 (VART -> ARR ID .)
    PRINT           reduce using rule 12 (VART -> ARR ID .)
    WHILE           reduce using rule 12 (VART -> ARR ID .)
    FOR             reduce using rule 12 (VART -> ARR ID .)
    INT             reduce using rule 12 (VART -> ARR ID .)
    BOOLEAN         reduce using rule 12 (VART -> ARR ID .)
    CHAR            reduce using rule 12 (VART -> ARR ID .)
    STRING          reduce using rule 12 (VART -> ARR ID .)
    FLOAT           reduce using rule 12 (VART -> ARR ID .)
    RETURN          reduce using rule 12 (VART -> ARR ID .)
    END             reduce using rule 12 (VART -> ARR ID .)
    ELSE            reduce using rule 12 (VART -> ARR ID .)
    DEFINE          reduce using rule 12 (VART -> ARR ID .)


state 27

    (87) FUNCION -> DEFINE DATA_TIPOS ID . VAR_FUN BLOQUE RETURN EXP END
    (89) VAR_FUN -> . LPAR VAR_FUNP RPAR

    LPAR            shift and go to state 34

    VAR_FUN                        shift and go to state 35

state 28

    (47) PRINCIPAL -> DEFINE VOID . MAIN LPAR RPAR BLOQUE END

    MAIN            shift and go to state 36


state 29

    (10) VART -> DRAW ID EQUAL . NEW DRAWI LPAR RPAR

    NEW             shift and go to state 37


state 30

    (39) ARR -> DATA_TIPOS LBRA ICTE . ARRZ RBRA
    (40) ARRZ -> . COMMA ICTE
    (41) ARRZ -> . FINAL
    (1) FINAL -> .

    COMMA           shift and go to state 39
    RBRA            reduce using rule 1 (FINAL -> .)

    ARRZ                           shift and go to state 40
    FINAL                          shift and go to state 38

state 31

    (14) VARZ -> EQUAL . EXP
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 46
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48
    FINAL                          shift and go to state 41

state 32

    (11) VART -> DATA_TIPOS ID VARZ .

    ID              reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    IF              reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    DRAW            reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    PRINT           reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    WHILE           reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    FOR             reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    INT             reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    BOOLEAN         reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    CHAR            reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    STRING          reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    FLOAT           reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    RETURN          reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    END             reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    ELSE            reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)
    DEFINE          reduce using rule 11 (VART -> DATA_TIPOS ID VARZ .)


state 33

    (13) VARZ -> FINAL .

    DEFINE          reduce using rule 13 (VARZ -> FINAL .)
    ID              reduce using rule 13 (VARZ -> FINAL .)
    IF              reduce using rule 13 (VARZ -> FINAL .)
    DRAW            reduce using rule 13 (VARZ -> FINAL .)
    PRINT           reduce using rule 13 (VARZ -> FINAL .)
    WHILE           reduce using rule 13 (VARZ -> FINAL .)
    FOR             reduce using rule 13 (VARZ -> FINAL .)
    INT             reduce using rule 13 (VARZ -> FINAL .)
    BOOLEAN         reduce using rule 13 (VARZ -> FINAL .)
    CHAR            reduce using rule 13 (VARZ -> FINAL .)
    STRING          reduce using rule 13 (VARZ -> FINAL .)
    FLOAT           reduce using rule 13 (VARZ -> FINAL .)
    RETURN          reduce using rule 13 (VARZ -> FINAL .)
    END             reduce using rule 13 (VARZ -> FINAL .)
    ELSE            reduce using rule 13 (VARZ -> FINAL .)


state 34

    (89) VAR_FUN -> LPAR . VAR_FUNP RPAR
    (90) VAR_FUNP -> . DATA_TIPOS ID VAR_FUNZ
    (25) DATA_TIPOS -> . INT
    (26) DATA_TIPOS -> . BOOLEAN
    (27) DATA_TIPOS -> . CHAR
    (28) DATA_TIPOS -> . STRING
    (29) DATA_TIPOS -> . FLOAT

    INT             shift and go to state 16
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    FLOAT           shift and go to state 13

    DATA_TIPOS                     shift and go to state 51
    VAR_FUNP                       shift and go to state 52

state 35

    (87) FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN . BLOQUE RETURN EXP END
    (22) BLOQUE -> . ESTATUTO BLOQUEP
    (15) ESTATUTO -> . ASIGNACION
    (16) ESTATUTO -> . CONDICION
    (17) ESTATUTO -> . CICLO
    (18) ESTATUTO -> . ACCION
    (19) ESTATUTO -> . VART
    (20) ESTATUTO -> . LLAMADA_FUNCION
    (21) ESTATUTO -> . IMPRIMIR
    (34) ASIGNACION -> . ID ASIGNACIONP
    (52) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (48) CICLO -> . WHILEF
    (49) CICLO -> . FORZ
    (88) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (10) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (11) VART -> . DATA_TIPOS ID VARZ
    (12) VART -> . ARR ID
    (42) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (75) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (50) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (51) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (25) DATA_TIPOS -> . INT
    (26) DATA_TIPOS -> . BOOLEAN
    (27) DATA_TIPOS -> . CHAR
    (28) DATA_TIPOS -> . STRING
    (29) DATA_TIPOS -> . FLOAT
    (39) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    ID              shift and go to state 66
    IF              shift and go to state 67
    DRAW            shift and go to state 12
    PRINT           shift and go to state 57
    WHILE           shift and go to state 56
    FOR             shift and go to state 60
    INT             shift and go to state 16
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    FLOAT           shift and go to state 13

    VART                           shift and go to state 53
    CICLO                          shift and go to state 55
    LLAMADA_FUNCION                shift and go to state 58
    ASIGNACION                     shift and go to state 59
    ESTATUTO                       shift and go to state 54
    WHILEF                         shift and go to state 61
    DATA_TIPOS                     shift and go to state 15
    FORZ                           shift and go to state 62
    IMPRIMIR                       shift and go to state 64
    BLOQUE                         shift and go to state 65
    ARR                            shift and go to state 18
    ACCION                         shift and go to state 68
    CONDICION                      shift and go to state 63

state 36

    (47) PRINCIPAL -> DEFINE VOID MAIN . LPAR RPAR BLOQUE END

    LPAR            shift and go to state 69


state 37

    (10) VART -> DRAW ID EQUAL NEW . DRAWI LPAR RPAR

    DRAWI           shift and go to state 70


state 38

    (41) ARRZ -> FINAL .

    RBRA            reduce using rule 41 (ARRZ -> FINAL .)


state 39

    (40) ARRZ -> COMMA . ICTE

    ICTE            shift and go to state 71


state 40

    (39) ARR -> DATA_TIPOS LBRA ICTE ARRZ . RBRA

    RBRA            shift and go to state 72


state 41

    (84) FACS -> FINAL .

    ICTE            reduce using rule 84 (FACS -> FINAL .)
    FCTE            reduce using rule 84 (FACS -> FINAL .)
    ID              reduce using rule 84 (FACS -> FINAL .)


state 42

    (78) FAC -> LPAR . EXPRE RPAR
    (63) EXPRE -> . EXP EXPREZ
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    EXPRE                          shift and go to state 73
    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 74
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48
    FINAL                          shift and go to state 41

state 43

    (83) FACS -> ASOP .

    ICTE            reduce using rule 83 (FACS -> ASOP .)
    FCTE            reduce using rule 83 (FACS -> ASOP .)
    ID              reduce using rule 83 (FACS -> ASOP .)


state 44

    (30) ASOP -> PLUS .

    ICTE            reduce using rule 30 (ASOP -> PLUS .)
    FCTE            reduce using rule 30 (ASOP -> PLUS .)
    ID              reduce using rule 30 (ASOP -> PLUS .)
    LPAR            reduce using rule 30 (ASOP -> PLUS .)
    PLUS            reduce using rule 30 (ASOP -> PLUS .)
    MINUS           reduce using rule 30 (ASOP -> PLUS .)


state 45

    (66) EXP -> TERMINO . EXP_W_SIGN
    (67) EXP_W_SIGN -> . ASOP EXP
    (68) EXP_W_SIGN -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    DEFINE          reduce using rule 1 (FINAL -> .)
    ID              reduce using rule 1 (FINAL -> .)
    IF              reduce using rule 1 (FINAL -> .)
    DRAW            reduce using rule 1 (FINAL -> .)
    PRINT           reduce using rule 1 (FINAL -> .)
    WHILE           reduce using rule 1 (FINAL -> .)
    FOR             reduce using rule 1 (FINAL -> .)
    INT             reduce using rule 1 (FINAL -> .)
    BOOLEAN         reduce using rule 1 (FINAL -> .)
    CHAR            reduce using rule 1 (FINAL -> .)
    STRING          reduce using rule 1 (FINAL -> .)
    FLOAT           reduce using rule 1 (FINAL -> .)
    RETURN          reduce using rule 1 (FINAL -> .)
    END             reduce using rule 1 (FINAL -> .)
    ELSE            reduce using rule 1 (FINAL -> .)
    LESSTH          reduce using rule 1 (FINAL -> .)
    GREATERTH       reduce using rule 1 (FINAL -> .)
    SEQUAL          reduce using rule 1 (FINAL -> .)
    NOTEQ           reduce using rule 1 (FINAL -> .)
    LESSEQTH        reduce using rule 1 (FINAL -> .)
    GREATEREQTH     reduce using rule 1 (FINAL -> .)
    RPAR            reduce using rule 1 (FINAL -> .)
    COMMA           reduce using rule 1 (FINAL -> .)
    RBRA            reduce using rule 1 (FINAL -> .)

    ASOP                           shift and go to state 75
    EXP_W_SIGN                     shift and go to state 76
    FINAL                          shift and go to state 77

state 46

    (14) VARZ -> EQUAL EXP .

    DEFINE          reduce using rule 14 (VARZ -> EQUAL EXP .)
    ID              reduce using rule 14 (VARZ -> EQUAL EXP .)
    IF              reduce using rule 14 (VARZ -> EQUAL EXP .)
    DRAW            reduce using rule 14 (VARZ -> EQUAL EXP .)
    PRINT           reduce using rule 14 (VARZ -> EQUAL EXP .)
    WHILE           reduce using rule 14 (VARZ -> EQUAL EXP .)
    FOR             reduce using rule 14 (VARZ -> EQUAL EXP .)
    INT             reduce using rule 14 (VARZ -> EQUAL EXP .)
    BOOLEAN         reduce using rule 14 (VARZ -> EQUAL EXP .)
    CHAR            reduce using rule 14 (VARZ -> EQUAL EXP .)
    STRING          reduce using rule 14 (VARZ -> EQUAL EXP .)
    FLOAT           reduce using rule 14 (VARZ -> EQUAL EXP .)
    RETURN          reduce using rule 14 (VARZ -> EQUAL EXP .)
    END             reduce using rule 14 (VARZ -> EQUAL EXP .)
    ELSE            reduce using rule 14 (VARZ -> EQUAL EXP .)


state 47

    (79) FAC -> FACS . VAR_CTE
    (72) VAR_CTE -> . ICTE
    (73) VAR_CTE -> . FCTE
    (74) VAR_CTE -> . LLAMADA_FUNCION
    (42) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR

    ICTE            shift and go to state 81
    FCTE            shift and go to state 80
    ID              shift and go to state 82

    LLAMADA_FUNCION                shift and go to state 78
    VAR_CTE                        shift and go to state 79

state 48

    (69) TERMINO -> FAC . TERMINO_W_SIGN
    (70) TERMINO_W_SIGN -> . MDOP TERMINO
    (71) TERMINO_W_SIGN -> . FINAL
    (32) MDOP -> . MULT
    (33) MDOP -> . DIVI
    (1) FINAL -> .

    MULT            shift and go to state 87
    DIVI            shift and go to state 83
    PLUS            reduce using rule 1 (FINAL -> .)
    MINUS           reduce using rule 1 (FINAL -> .)
    DEFINE          reduce using rule 1 (FINAL -> .)
    ID              reduce using rule 1 (FINAL -> .)
    IF              reduce using rule 1 (FINAL -> .)
    DRAW            reduce using rule 1 (FINAL -> .)
    PRINT           reduce using rule 1 (FINAL -> .)
    WHILE           reduce using rule 1 (FINAL -> .)
    FOR             reduce using rule 1 (FINAL -> .)
    INT             reduce using rule 1 (FINAL -> .)
    BOOLEAN         reduce using rule 1 (FINAL -> .)
    CHAR            reduce using rule 1 (FINAL -> .)
    STRING          reduce using rule 1 (FINAL -> .)
    FLOAT           reduce using rule 1 (FINAL -> .)
    RETURN          reduce using rule 1 (FINAL -> .)
    END             reduce using rule 1 (FINAL -> .)
    ELSE            reduce using rule 1 (FINAL -> .)
    LESSTH          reduce using rule 1 (FINAL -> .)
    GREATERTH       reduce using rule 1 (FINAL -> .)
    SEQUAL          reduce using rule 1 (FINAL -> .)
    NOTEQ           reduce using rule 1 (FINAL -> .)
    LESSEQTH        reduce using rule 1 (FINAL -> .)
    GREATEREQTH     reduce using rule 1 (FINAL -> .)
    RPAR            reduce using rule 1 (FINAL -> .)
    COMMA           reduce using rule 1 (FINAL -> .)
    RBRA            reduce using rule 1 (FINAL -> .)

    FINAL                          shift and go to state 86
    MDOP                           shift and go to state 84
    TERMINO_W_SIGN                 shift and go to state 85

state 49

    (31) ASOP -> MINUS .

    ICTE            reduce using rule 31 (ASOP -> MINUS .)
    FCTE            reduce using rule 31 (ASOP -> MINUS .)
    ID              reduce using rule 31 (ASOP -> MINUS .)
    LPAR            reduce using rule 31 (ASOP -> MINUS .)
    PLUS            reduce using rule 31 (ASOP -> MINUS .)
    MINUS           reduce using rule 31 (ASOP -> MINUS .)


state 50

    (80) FAC -> ID . FACT
    (81) FACT -> . LBRA EXP FACZ RBRA
    (82) FACT -> . FINAL
    (1) FINAL -> .

    LBRA            shift and go to state 89
    MULT            reduce using rule 1 (FINAL -> .)
    DIVI            reduce using rule 1 (FINAL -> .)
    PLUS            reduce using rule 1 (FINAL -> .)
    MINUS           reduce using rule 1 (FINAL -> .)
    DEFINE          reduce using rule 1 (FINAL -> .)
    ID              reduce using rule 1 (FINAL -> .)
    IF              reduce using rule 1 (FINAL -> .)
    DRAW            reduce using rule 1 (FINAL -> .)
    PRINT           reduce using rule 1 (FINAL -> .)
    WHILE           reduce using rule 1 (FINAL -> .)
    FOR             reduce using rule 1 (FINAL -> .)
    INT             reduce using rule 1 (FINAL -> .)
    BOOLEAN         reduce using rule 1 (FINAL -> .)
    CHAR            reduce using rule 1 (FINAL -> .)
    STRING          reduce using rule 1 (FINAL -> .)
    FLOAT           reduce using rule 1 (FINAL -> .)
    RETURN          reduce using rule 1 (FINAL -> .)
    END             reduce using rule 1 (FINAL -> .)
    ELSE            reduce using rule 1 (FINAL -> .)
    LESSTH          reduce using rule 1 (FINAL -> .)
    GREATERTH       reduce using rule 1 (FINAL -> .)
    SEQUAL          reduce using rule 1 (FINAL -> .)
    NOTEQ           reduce using rule 1 (FINAL -> .)
    LESSEQTH        reduce using rule 1 (FINAL -> .)
    GREATEREQTH     reduce using rule 1 (FINAL -> .)
    RPAR            reduce using rule 1 (FINAL -> .)
    COMMA           reduce using rule 1 (FINAL -> .)
    RBRA            reduce using rule 1 (FINAL -> .)

    FACT                           shift and go to state 90
    FINAL                          shift and go to state 88

state 51

    (90) VAR_FUNP -> DATA_TIPOS . ID VAR_FUNZ

    ID              shift and go to state 91


state 52

    (89) VAR_FUN -> LPAR VAR_FUNP . RPAR

    RPAR            shift and go to state 92


state 53

    (19) ESTATUTO -> VART .

    ID              reduce using rule 19 (ESTATUTO -> VART .)
    IF              reduce using rule 19 (ESTATUTO -> VART .)
    DRAW            reduce using rule 19 (ESTATUTO -> VART .)
    PRINT           reduce using rule 19 (ESTATUTO -> VART .)
    WHILE           reduce using rule 19 (ESTATUTO -> VART .)
    FOR             reduce using rule 19 (ESTATUTO -> VART .)
    INT             reduce using rule 19 (ESTATUTO -> VART .)
    BOOLEAN         reduce using rule 19 (ESTATUTO -> VART .)
    CHAR            reduce using rule 19 (ESTATUTO -> VART .)
    STRING          reduce using rule 19 (ESTATUTO -> VART .)
    FLOAT           reduce using rule 19 (ESTATUTO -> VART .)
    END             reduce using rule 19 (ESTATUTO -> VART .)
    RETURN          reduce using rule 19 (ESTATUTO -> VART .)
    ELSE            reduce using rule 19 (ESTATUTO -> VART .)


state 54

    (22) BLOQUE -> ESTATUTO . BLOQUEP
    (23) BLOQUEP -> . BLOQUE
    (24) BLOQUEP -> . FINAL
    (22) BLOQUE -> . ESTATUTO BLOQUEP
    (1) FINAL -> .
    (15) ESTATUTO -> . ASIGNACION
    (16) ESTATUTO -> . CONDICION
    (17) ESTATUTO -> . CICLO
    (18) ESTATUTO -> . ACCION
    (19) ESTATUTO -> . VART
    (20) ESTATUTO -> . LLAMADA_FUNCION
    (21) ESTATUTO -> . IMPRIMIR
    (34) ASIGNACION -> . ID ASIGNACIONP
    (52) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (48) CICLO -> . WHILEF
    (49) CICLO -> . FORZ
    (88) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (10) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (11) VART -> . DATA_TIPOS ID VARZ
    (12) VART -> . ARR ID
    (42) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (75) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (50) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (51) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (25) DATA_TIPOS -> . INT
    (26) DATA_TIPOS -> . BOOLEAN
    (27) DATA_TIPOS -> . CHAR
    (28) DATA_TIPOS -> . STRING
    (29) DATA_TIPOS -> . FLOAT
    (39) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    RETURN          reduce using rule 1 (FINAL -> .)
    END             reduce using rule 1 (FINAL -> .)
    ELSE            reduce using rule 1 (FINAL -> .)
    ID              shift and go to state 66
    IF              shift and go to state 67
    DRAW            shift and go to state 12
    PRINT           shift and go to state 57
    WHILE           shift and go to state 56
    FOR             shift and go to state 60
    INT             shift and go to state 16
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    FLOAT           shift and go to state 13

    VART                           shift and go to state 53
    CICLO                          shift and go to state 55
    FINAL                          shift and go to state 93
    LLAMADA_FUNCION                shift and go to state 58
    ASIGNACION                     shift and go to state 59
    ESTATUTO                       shift and go to state 54
    BLOQUEP                        shift and go to state 94
    WHILEF                         shift and go to state 61
    DATA_TIPOS                     shift and go to state 15
    FORZ                           shift and go to state 62
    IMPRIMIR                       shift and go to state 64
    BLOQUE                         shift and go to state 95
    ARR                            shift and go to state 18
    ACCION                         shift and go to state 68
    CONDICION                      shift and go to state 63

state 55

    (17) ESTATUTO -> CICLO .

    ID              reduce using rule 17 (ESTATUTO -> CICLO .)
    IF              reduce using rule 17 (ESTATUTO -> CICLO .)
    DRAW            reduce using rule 17 (ESTATUTO -> CICLO .)
    PRINT           reduce using rule 17 (ESTATUTO -> CICLO .)
    WHILE           reduce using rule 17 (ESTATUTO -> CICLO .)
    FOR             reduce using rule 17 (ESTATUTO -> CICLO .)
    INT             reduce using rule 17 (ESTATUTO -> CICLO .)
    BOOLEAN         reduce using rule 17 (ESTATUTO -> CICLO .)
    CHAR            reduce using rule 17 (ESTATUTO -> CICLO .)
    STRING          reduce using rule 17 (ESTATUTO -> CICLO .)
    FLOAT           reduce using rule 17 (ESTATUTO -> CICLO .)
    END             reduce using rule 17 (ESTATUTO -> CICLO .)
    RETURN          reduce using rule 17 (ESTATUTO -> CICLO .)
    ELSE            reduce using rule 17 (ESTATUTO -> CICLO .)


state 56

    (50) WHILEF -> WHILE . LPAR EXPRE RPAR BLOQUE END

    LPAR            shift and go to state 96


state 57

    (75) IMPRIMIR -> PRINT . LBRA IMPRIMIRZ RBRA

    LBRA            shift and go to state 97


state 58

    (20) ESTATUTO -> LLAMADA_FUNCION .

    ID              reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    IF              reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    DRAW            reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    PRINT           reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    WHILE           reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    FOR             reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    INT             reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    BOOLEAN         reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    CHAR            reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    STRING          reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    FLOAT           reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    END             reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    RETURN          reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)
    ELSE            reduce using rule 20 (ESTATUTO -> LLAMADA_FUNCION .)


state 59

    (15) ESTATUTO -> ASIGNACION .

    ID              reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    DRAW            reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    PRINT           reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    WHILE           reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    FOR             reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    INT             reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    BOOLEAN         reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    CHAR            reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    STRING          reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    FLOAT           reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    END             reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 15 (ESTATUTO -> ASIGNACION .)
    ELSE            reduce using rule 15 (ESTATUTO -> ASIGNACION .)


state 60

    (51) FORZ -> FOR . LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END

    LPAR            shift and go to state 98


state 61

    (48) CICLO -> WHILEF .

    ID              reduce using rule 48 (CICLO -> WHILEF .)
    IF              reduce using rule 48 (CICLO -> WHILEF .)
    DRAW            reduce using rule 48 (CICLO -> WHILEF .)
    PRINT           reduce using rule 48 (CICLO -> WHILEF .)
    WHILE           reduce using rule 48 (CICLO -> WHILEF .)
    FOR             reduce using rule 48 (CICLO -> WHILEF .)
    INT             reduce using rule 48 (CICLO -> WHILEF .)
    BOOLEAN         reduce using rule 48 (CICLO -> WHILEF .)
    CHAR            reduce using rule 48 (CICLO -> WHILEF .)
    STRING          reduce using rule 48 (CICLO -> WHILEF .)
    FLOAT           reduce using rule 48 (CICLO -> WHILEF .)
    RETURN          reduce using rule 48 (CICLO -> WHILEF .)
    END             reduce using rule 48 (CICLO -> WHILEF .)
    ELSE            reduce using rule 48 (CICLO -> WHILEF .)


state 62

    (49) CICLO -> FORZ .

    ID              reduce using rule 49 (CICLO -> FORZ .)
    IF              reduce using rule 49 (CICLO -> FORZ .)
    DRAW            reduce using rule 49 (CICLO -> FORZ .)
    PRINT           reduce using rule 49 (CICLO -> FORZ .)
    WHILE           reduce using rule 49 (CICLO -> FORZ .)
    FOR             reduce using rule 49 (CICLO -> FORZ .)
    INT             reduce using rule 49 (CICLO -> FORZ .)
    BOOLEAN         reduce using rule 49 (CICLO -> FORZ .)
    CHAR            reduce using rule 49 (CICLO -> FORZ .)
    STRING          reduce using rule 49 (CICLO -> FORZ .)
    FLOAT           reduce using rule 49 (CICLO -> FORZ .)
    RETURN          reduce using rule 49 (CICLO -> FORZ .)
    END             reduce using rule 49 (CICLO -> FORZ .)
    ELSE            reduce using rule 49 (CICLO -> FORZ .)


state 63

    (16) ESTATUTO -> CONDICION .

    ID              reduce using rule 16 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 16 (ESTATUTO -> CONDICION .)
    DRAW            reduce using rule 16 (ESTATUTO -> CONDICION .)
    PRINT           reduce using rule 16 (ESTATUTO -> CONDICION .)
    WHILE           reduce using rule 16 (ESTATUTO -> CONDICION .)
    FOR             reduce using rule 16 (ESTATUTO -> CONDICION .)
    INT             reduce using rule 16 (ESTATUTO -> CONDICION .)
    BOOLEAN         reduce using rule 16 (ESTATUTO -> CONDICION .)
    CHAR            reduce using rule 16 (ESTATUTO -> CONDICION .)
    STRING          reduce using rule 16 (ESTATUTO -> CONDICION .)
    FLOAT           reduce using rule 16 (ESTATUTO -> CONDICION .)
    END             reduce using rule 16 (ESTATUTO -> CONDICION .)
    RETURN          reduce using rule 16 (ESTATUTO -> CONDICION .)
    ELSE            reduce using rule 16 (ESTATUTO -> CONDICION .)


state 64

    (21) ESTATUTO -> IMPRIMIR .

    ID              reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    IF              reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    DRAW            reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    PRINT           reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    WHILE           reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    FOR             reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    INT             reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    BOOLEAN         reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    CHAR            reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    STRING          reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    FLOAT           reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    END             reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    RETURN          reduce using rule 21 (ESTATUTO -> IMPRIMIR .)
    ELSE            reduce using rule 21 (ESTATUTO -> IMPRIMIR .)


state 65

    (87) FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN BLOQUE . RETURN EXP END

    RETURN          shift and go to state 99


state 66

    (34) ASIGNACION -> ID . ASIGNACIONP
    (88) ACCION -> ID . POINT DIBUJA LPAR VAR_CTE RPAR
    (42) LLAMADA_FUNCION -> ID . LPAR LLAMADA_FUNCIONP RPAR
    (35) ASIGNACIONP -> . EQUAL EXPRE
    (36) ASIGNACIONP -> . LBRA ICTE ASIGNACIONZ RBRA

    POINT           shift and go to state 102
    LPAR            shift and go to state 100
    EQUAL           shift and go to state 103
    LBRA            shift and go to state 101

    ASIGNACIONP                    shift and go to state 104

state 67

    (52) CONDICION -> IF . LPAR EXPRE RPAR BLOQUE CONDICIONP END

    LPAR            shift and go to state 105


state 68

    (18) ESTATUTO -> ACCION .

    ID              reduce using rule 18 (ESTATUTO -> ACCION .)
    IF              reduce using rule 18 (ESTATUTO -> ACCION .)
    DRAW            reduce using rule 18 (ESTATUTO -> ACCION .)
    PRINT           reduce using rule 18 (ESTATUTO -> ACCION .)
    WHILE           reduce using rule 18 (ESTATUTO -> ACCION .)
    FOR             reduce using rule 18 (ESTATUTO -> ACCION .)
    INT             reduce using rule 18 (ESTATUTO -> ACCION .)
    BOOLEAN         reduce using rule 18 (ESTATUTO -> ACCION .)
    CHAR            reduce using rule 18 (ESTATUTO -> ACCION .)
    STRING          reduce using rule 18 (ESTATUTO -> ACCION .)
    FLOAT           reduce using rule 18 (ESTATUTO -> ACCION .)
    END             reduce using rule 18 (ESTATUTO -> ACCION .)
    RETURN          reduce using rule 18 (ESTATUTO -> ACCION .)
    ELSE            reduce using rule 18 (ESTATUTO -> ACCION .)


state 69

    (47) PRINCIPAL -> DEFINE VOID MAIN LPAR . RPAR BLOQUE END

    RPAR            shift and go to state 106


state 70

    (10) VART -> DRAW ID EQUAL NEW DRAWI . LPAR RPAR

    LPAR            shift and go to state 107


state 71

    (40) ARRZ -> COMMA ICTE .

    RBRA            reduce using rule 40 (ARRZ -> COMMA ICTE .)


state 72

    (39) ARR -> DATA_TIPOS LBRA ICTE ARRZ RBRA .

    ID              reduce using rule 39 (ARR -> DATA_TIPOS LBRA ICTE ARRZ RBRA .)


state 73

    (78) FAC -> LPAR EXPRE . RPAR

    RPAR            shift and go to state 108


state 74

    (63) EXPRE -> EXP . EXPREZ
    (64) EXPREZ -> . RELOP EXP
    (65) EXPREZ -> . FINAL
    (57) RELOP -> . LESSTH
    (58) RELOP -> . GREATERTH
    (59) RELOP -> . SEQUAL
    (60) RELOP -> . NOTEQ
    (61) RELOP -> . LESSEQTH
    (62) RELOP -> . GREATEREQTH
    (1) FINAL -> .

    LESSTH          shift and go to state 115
    GREATERTH       shift and go to state 114
    SEQUAL          shift and go to state 111
    NOTEQ           shift and go to state 112
    LESSEQTH        shift and go to state 109
    GREATEREQTH     shift and go to state 113
    RPAR            reduce using rule 1 (FINAL -> .)
    RBRA            reduce using rule 1 (FINAL -> .)
    COMMA           reduce using rule 1 (FINAL -> .)
    ID              reduce using rule 1 (FINAL -> .)
    IF              reduce using rule 1 (FINAL -> .)
    DRAW            reduce using rule 1 (FINAL -> .)
    PRINT           reduce using rule 1 (FINAL -> .)
    WHILE           reduce using rule 1 (FINAL -> .)
    FOR             reduce using rule 1 (FINAL -> .)
    INT             reduce using rule 1 (FINAL -> .)
    BOOLEAN         reduce using rule 1 (FINAL -> .)
    CHAR            reduce using rule 1 (FINAL -> .)
    STRING          reduce using rule 1 (FINAL -> .)
    FLOAT           reduce using rule 1 (FINAL -> .)
    RETURN          reduce using rule 1 (FINAL -> .)
    END             reduce using rule 1 (FINAL -> .)
    ELSE            reduce using rule 1 (FINAL -> .)

    EXPREZ                         shift and go to state 116
    RELOP                          shift and go to state 110
    FINAL                          shift and go to state 117

state 75

    (67) EXP_W_SIGN -> ASOP . EXP
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 118
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48
    FINAL                          shift and go to state 41

state 76

    (66) EXP -> TERMINO EXP_W_SIGN .

    RBRA            reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    LESSTH          reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    GREATERTH       reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    SEQUAL          reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    NOTEQ           reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    LESSEQTH        reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    GREATEREQTH     reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    COMMA           reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    RPAR            reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    DEFINE          reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    ID              reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    IF              reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    DRAW            reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    PRINT           reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    WHILE           reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    FOR             reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    INT             reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    BOOLEAN         reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    CHAR            reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    STRING          reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    FLOAT           reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    RETURN          reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    END             reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)
    ELSE            reduce using rule 66 (EXP -> TERMINO EXP_W_SIGN .)


state 77

    (68) EXP_W_SIGN -> FINAL .

    DEFINE          reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    ID              reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    IF              reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    DRAW            reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    PRINT           reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    WHILE           reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    FOR             reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    INT             reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    BOOLEAN         reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    CHAR            reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    STRING          reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    FLOAT           reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    RETURN          reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    END             reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    ELSE            reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    LESSTH          reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    GREATERTH       reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    SEQUAL          reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    NOTEQ           reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    LESSEQTH        reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    GREATEREQTH     reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    RPAR            reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    COMMA           reduce using rule 68 (EXP_W_SIGN -> FINAL .)
    RBRA            reduce using rule 68 (EXP_W_SIGN -> FINAL .)


state 78

    (74) VAR_CTE -> LLAMADA_FUNCION .

    RPAR            reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    MULT            reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    DIVI            reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    PLUS            reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    MINUS           reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    DEFINE          reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    ID              reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    IF              reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    DRAW            reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    PRINT           reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    WHILE           reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    FOR             reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    INT             reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    BOOLEAN         reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    CHAR            reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    STRING          reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    FLOAT           reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    RETURN          reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    END             reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    ELSE            reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    LESSTH          reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    GREATERTH       reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    SEQUAL          reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    NOTEQ           reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    LESSEQTH        reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    GREATEREQTH     reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    COMMA           reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)
    RBRA            reduce using rule 74 (VAR_CTE -> LLAMADA_FUNCION .)


state 79

    (79) FAC -> FACS VAR_CTE .

    MULT            reduce using rule 79 (FAC -> FACS VAR_CTE .)
    DIVI            reduce using rule 79 (FAC -> FACS VAR_CTE .)
    PLUS            reduce using rule 79 (FAC -> FACS VAR_CTE .)
    MINUS           reduce using rule 79 (FAC -> FACS VAR_CTE .)
    END             reduce using rule 79 (FAC -> FACS VAR_CTE .)
    LESSTH          reduce using rule 79 (FAC -> FACS VAR_CTE .)
    GREATERTH       reduce using rule 79 (FAC -> FACS VAR_CTE .)
    SEQUAL          reduce using rule 79 (FAC -> FACS VAR_CTE .)
    NOTEQ           reduce using rule 79 (FAC -> FACS VAR_CTE .)
    LESSEQTH        reduce using rule 79 (FAC -> FACS VAR_CTE .)
    GREATEREQTH     reduce using rule 79 (FAC -> FACS VAR_CTE .)
    COMMA           reduce using rule 79 (FAC -> FACS VAR_CTE .)
    RPAR            reduce using rule 79 (FAC -> FACS VAR_CTE .)
    DEFINE          reduce using rule 79 (FAC -> FACS VAR_CTE .)
    ID              reduce using rule 79 (FAC -> FACS VAR_CTE .)
    IF              reduce using rule 79 (FAC -> FACS VAR_CTE .)
    DRAW            reduce using rule 79 (FAC -> FACS VAR_CTE .)
    PRINT           reduce using rule 79 (FAC -> FACS VAR_CTE .)
    WHILE           reduce using rule 79 (FAC -> FACS VAR_CTE .)
    FOR             reduce using rule 79 (FAC -> FACS VAR_CTE .)
    INT             reduce using rule 79 (FAC -> FACS VAR_CTE .)
    BOOLEAN         reduce using rule 79 (FAC -> FACS VAR_CTE .)
    CHAR            reduce using rule 79 (FAC -> FACS VAR_CTE .)
    STRING          reduce using rule 79 (FAC -> FACS VAR_CTE .)
    FLOAT           reduce using rule 79 (FAC -> FACS VAR_CTE .)
    RETURN          reduce using rule 79 (FAC -> FACS VAR_CTE .)
    ELSE            reduce using rule 79 (FAC -> FACS VAR_CTE .)
    RBRA            reduce using rule 79 (FAC -> FACS VAR_CTE .)


state 80

    (73) VAR_CTE -> FCTE .

    RPAR            reduce using rule 73 (VAR_CTE -> FCTE .)
    MULT            reduce using rule 73 (VAR_CTE -> FCTE .)
    DIVI            reduce using rule 73 (VAR_CTE -> FCTE .)
    PLUS            reduce using rule 73 (VAR_CTE -> FCTE .)
    MINUS           reduce using rule 73 (VAR_CTE -> FCTE .)
    DEFINE          reduce using rule 73 (VAR_CTE -> FCTE .)
    ID              reduce using rule 73 (VAR_CTE -> FCTE .)
    IF              reduce using rule 73 (VAR_CTE -> FCTE .)
    DRAW            reduce using rule 73 (VAR_CTE -> FCTE .)
    PRINT           reduce using rule 73 (VAR_CTE -> FCTE .)
    WHILE           reduce using rule 73 (VAR_CTE -> FCTE .)
    FOR             reduce using rule 73 (VAR_CTE -> FCTE .)
    INT             reduce using rule 73 (VAR_CTE -> FCTE .)
    BOOLEAN         reduce using rule 73 (VAR_CTE -> FCTE .)
    CHAR            reduce using rule 73 (VAR_CTE -> FCTE .)
    STRING          reduce using rule 73 (VAR_CTE -> FCTE .)
    FLOAT           reduce using rule 73 (VAR_CTE -> FCTE .)
    RETURN          reduce using rule 73 (VAR_CTE -> FCTE .)
    END             reduce using rule 73 (VAR_CTE -> FCTE .)
    ELSE            reduce using rule 73 (VAR_CTE -> FCTE .)
    LESSTH          reduce using rule 73 (VAR_CTE -> FCTE .)
    GREATERTH       reduce using rule 73 (VAR_CTE -> FCTE .)
    SEQUAL          reduce using rule 73 (VAR_CTE -> FCTE .)
    NOTEQ           reduce using rule 73 (VAR_CTE -> FCTE .)
    LESSEQTH        reduce using rule 73 (VAR_CTE -> FCTE .)
    GREATEREQTH     reduce using rule 73 (VAR_CTE -> FCTE .)
    COMMA           reduce using rule 73 (VAR_CTE -> FCTE .)
    RBRA            reduce using rule 73 (VAR_CTE -> FCTE .)


state 81

    (72) VAR_CTE -> ICTE .

    RPAR            reduce using rule 72 (VAR_CTE -> ICTE .)
    MULT            reduce using rule 72 (VAR_CTE -> ICTE .)
    DIVI            reduce using rule 72 (VAR_CTE -> ICTE .)
    PLUS            reduce using rule 72 (VAR_CTE -> ICTE .)
    MINUS           reduce using rule 72 (VAR_CTE -> ICTE .)
    DEFINE          reduce using rule 72 (VAR_CTE -> ICTE .)
    ID              reduce using rule 72 (VAR_CTE -> ICTE .)
    IF              reduce using rule 72 (VAR_CTE -> ICTE .)
    DRAW            reduce using rule 72 (VAR_CTE -> ICTE .)
    PRINT           reduce using rule 72 (VAR_CTE -> ICTE .)
    WHILE           reduce using rule 72 (VAR_CTE -> ICTE .)
    FOR             reduce using rule 72 (VAR_CTE -> ICTE .)
    INT             reduce using rule 72 (VAR_CTE -> ICTE .)
    BOOLEAN         reduce using rule 72 (VAR_CTE -> ICTE .)
    CHAR            reduce using rule 72 (VAR_CTE -> ICTE .)
    STRING          reduce using rule 72 (VAR_CTE -> ICTE .)
    FLOAT           reduce using rule 72 (VAR_CTE -> ICTE .)
    RETURN          reduce using rule 72 (VAR_CTE -> ICTE .)
    END             reduce using rule 72 (VAR_CTE -> ICTE .)
    ELSE            reduce using rule 72 (VAR_CTE -> ICTE .)
    LESSTH          reduce using rule 72 (VAR_CTE -> ICTE .)
    GREATERTH       reduce using rule 72 (VAR_CTE -> ICTE .)
    SEQUAL          reduce using rule 72 (VAR_CTE -> ICTE .)
    NOTEQ           reduce using rule 72 (VAR_CTE -> ICTE .)
    LESSEQTH        reduce using rule 72 (VAR_CTE -> ICTE .)
    GREATEREQTH     reduce using rule 72 (VAR_CTE -> ICTE .)
    COMMA           reduce using rule 72 (VAR_CTE -> ICTE .)
    RBRA            reduce using rule 72 (VAR_CTE -> ICTE .)


state 82

    (42) LLAMADA_FUNCION -> ID . LPAR LLAMADA_FUNCIONP RPAR

    LPAR            shift and go to state 100


state 83

    (33) MDOP -> DIVI .

    LPAR            reduce using rule 33 (MDOP -> DIVI .)
    ID              reduce using rule 33 (MDOP -> DIVI .)
    PLUS            reduce using rule 33 (MDOP -> DIVI .)
    MINUS           reduce using rule 33 (MDOP -> DIVI .)
    ICTE            reduce using rule 33 (MDOP -> DIVI .)
    FCTE            reduce using rule 33 (MDOP -> DIVI .)


state 84

    (70) TERMINO_W_SIGN -> MDOP . TERMINO
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 119
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48
    FINAL                          shift and go to state 41

state 85

    (69) TERMINO -> FAC TERMINO_W_SIGN .

    PLUS            reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    MINUS           reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    LESSTH          reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    GREATERTH       reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    SEQUAL          reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    NOTEQ           reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    LESSEQTH        reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    GREATEREQTH     reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    RPAR            reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    COMMA           reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    RBRA            reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    ID              reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    IF              reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    DRAW            reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    PRINT           reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    WHILE           reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    FOR             reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    INT             reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    BOOLEAN         reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    CHAR            reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    STRING          reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    FLOAT           reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    RETURN          reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    END             reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    ELSE            reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)
    DEFINE          reduce using rule 69 (TERMINO -> FAC TERMINO_W_SIGN .)


state 86

    (71) TERMINO_W_SIGN -> FINAL .

    PLUS            reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    MINUS           reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    DEFINE          reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    ID              reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    IF              reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    DRAW            reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    PRINT           reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    WHILE           reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    FOR             reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    INT             reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    BOOLEAN         reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    CHAR            reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    STRING          reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    FLOAT           reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    RETURN          reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    END             reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    ELSE            reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    LESSTH          reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    GREATERTH       reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    SEQUAL          reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    NOTEQ           reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    LESSEQTH        reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    GREATEREQTH     reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    RPAR            reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    COMMA           reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)
    RBRA            reduce using rule 71 (TERMINO_W_SIGN -> FINAL .)


state 87

    (32) MDOP -> MULT .

    LPAR            reduce using rule 32 (MDOP -> MULT .)
    ID              reduce using rule 32 (MDOP -> MULT .)
    PLUS            reduce using rule 32 (MDOP -> MULT .)
    MINUS           reduce using rule 32 (MDOP -> MULT .)
    ICTE            reduce using rule 32 (MDOP -> MULT .)
    FCTE            reduce using rule 32 (MDOP -> MULT .)


state 88

    (82) FACT -> FINAL .

    MULT            reduce using rule 82 (FACT -> FINAL .)
    DIVI            reduce using rule 82 (FACT -> FINAL .)
    PLUS            reduce using rule 82 (FACT -> FINAL .)
    MINUS           reduce using rule 82 (FACT -> FINAL .)
    DEFINE          reduce using rule 82 (FACT -> FINAL .)
    ID              reduce using rule 82 (FACT -> FINAL .)
    IF              reduce using rule 82 (FACT -> FINAL .)
    DRAW            reduce using rule 82 (FACT -> FINAL .)
    PRINT           reduce using rule 82 (FACT -> FINAL .)
    WHILE           reduce using rule 82 (FACT -> FINAL .)
    FOR             reduce using rule 82 (FACT -> FINAL .)
    INT             reduce using rule 82 (FACT -> FINAL .)
    BOOLEAN         reduce using rule 82 (FACT -> FINAL .)
    CHAR            reduce using rule 82 (FACT -> FINAL .)
    STRING          reduce using rule 82 (FACT -> FINAL .)
    FLOAT           reduce using rule 82 (FACT -> FINAL .)
    RETURN          reduce using rule 82 (FACT -> FINAL .)
    END             reduce using rule 82 (FACT -> FINAL .)
    ELSE            reduce using rule 82 (FACT -> FINAL .)
    LESSTH          reduce using rule 82 (FACT -> FINAL .)
    GREATERTH       reduce using rule 82 (FACT -> FINAL .)
    SEQUAL          reduce using rule 82 (FACT -> FINAL .)
    NOTEQ           reduce using rule 82 (FACT -> FINAL .)
    LESSEQTH        reduce using rule 82 (FACT -> FINAL .)
    GREATEREQTH     reduce using rule 82 (FACT -> FINAL .)
    RPAR            reduce using rule 82 (FACT -> FINAL .)
    COMMA           reduce using rule 82 (FACT -> FINAL .)
    RBRA            reduce using rule 82 (FACT -> FINAL .)


state 89

    (81) FACT -> LBRA . EXP FACZ RBRA
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 120
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48
    FINAL                          shift and go to state 41

state 90

    (80) FAC -> ID FACT .

    MULT            reduce using rule 80 (FAC -> ID FACT .)
    DIVI            reduce using rule 80 (FAC -> ID FACT .)
    PLUS            reduce using rule 80 (FAC -> ID FACT .)
    MINUS           reduce using rule 80 (FAC -> ID FACT .)
    END             reduce using rule 80 (FAC -> ID FACT .)
    LESSTH          reduce using rule 80 (FAC -> ID FACT .)
    GREATERTH       reduce using rule 80 (FAC -> ID FACT .)
    SEQUAL          reduce using rule 80 (FAC -> ID FACT .)
    NOTEQ           reduce using rule 80 (FAC -> ID FACT .)
    LESSEQTH        reduce using rule 80 (FAC -> ID FACT .)
    GREATEREQTH     reduce using rule 80 (FAC -> ID FACT .)
    COMMA           reduce using rule 80 (FAC -> ID FACT .)
    RPAR            reduce using rule 80 (FAC -> ID FACT .)
    DEFINE          reduce using rule 80 (FAC -> ID FACT .)
    ID              reduce using rule 80 (FAC -> ID FACT .)
    IF              reduce using rule 80 (FAC -> ID FACT .)
    DRAW            reduce using rule 80 (FAC -> ID FACT .)
    PRINT           reduce using rule 80 (FAC -> ID FACT .)
    WHILE           reduce using rule 80 (FAC -> ID FACT .)
    FOR             reduce using rule 80 (FAC -> ID FACT .)
    INT             reduce using rule 80 (FAC -> ID FACT .)
    BOOLEAN         reduce using rule 80 (FAC -> ID FACT .)
    CHAR            reduce using rule 80 (FAC -> ID FACT .)
    STRING          reduce using rule 80 (FAC -> ID FACT .)
    FLOAT           reduce using rule 80 (FAC -> ID FACT .)
    RETURN          reduce using rule 80 (FAC -> ID FACT .)
    ELSE            reduce using rule 80 (FAC -> ID FACT .)
    RBRA            reduce using rule 80 (FAC -> ID FACT .)


state 91

    (90) VAR_FUNP -> DATA_TIPOS ID . VAR_FUNZ
    (91) VAR_FUNZ -> . COMMA VAR_FUNP
    (92) VAR_FUNZ -> . FINAL
    (1) FINAL -> .

    COMMA           shift and go to state 122
    RPAR            reduce using rule 1 (FINAL -> .)

    FINAL                          shift and go to state 123
    VAR_FUNZ                       shift and go to state 121

state 92

    (89) VAR_FUN -> LPAR VAR_FUNP RPAR .

    ID              reduce using rule 89 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    IF              reduce using rule 89 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    DRAW            reduce using rule 89 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    PRINT           reduce using rule 89 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    WHILE           reduce using rule 89 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    FOR             reduce using rule 89 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    INT             reduce using rule 89 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    BOOLEAN         reduce using rule 89 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    CHAR            reduce using rule 89 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    STRING          reduce using rule 89 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    FLOAT           reduce using rule 89 (VAR_FUN -> LPAR VAR_FUNP RPAR .)


state 93

    (24) BLOQUEP -> FINAL .

    RETURN          reduce using rule 24 (BLOQUEP -> FINAL .)
    END             reduce using rule 24 (BLOQUEP -> FINAL .)
    ELSE            reduce using rule 24 (BLOQUEP -> FINAL .)


state 94

    (22) BLOQUE -> ESTATUTO BLOQUEP .

    END             reduce using rule 22 (BLOQUE -> ESTATUTO BLOQUEP .)
    RETURN          reduce using rule 22 (BLOQUE -> ESTATUTO BLOQUEP .)
    ELSE            reduce using rule 22 (BLOQUE -> ESTATUTO BLOQUEP .)


state 95

    (23) BLOQUEP -> BLOQUE .

    RETURN          reduce using rule 23 (BLOQUEP -> BLOQUE .)
    END             reduce using rule 23 (BLOQUEP -> BLOQUE .)
    ELSE            reduce using rule 23 (BLOQUEP -> BLOQUE .)


state 96

    (50) WHILEF -> WHILE LPAR . EXPRE RPAR BLOQUE END
    (63) EXPRE -> . EXP EXPREZ
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    FINAL                          shift and go to state 41
    EXPRE                          shift and go to state 124
    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 74
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48

state 97

    (75) IMPRIMIR -> PRINT LBRA . IMPRIMIRZ RBRA
    (76) IMPRIMIRZ -> . EXPRE
    (77) IMPRIMIRZ -> . SCTE
    (63) EXPRE -> . EXP EXPREZ
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    SCTE            shift and go to state 127
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    EXPRE                          shift and go to state 125
    ASOP                           shift and go to state 43
    IMPRIMIRZ                      shift and go to state 126
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 74
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48
    FINAL                          shift and go to state 41

state 98

    (51) FORZ -> FOR LPAR . ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END

    ICTE            shift and go to state 128


state 99

    (87) FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN BLOQUE RETURN . EXP END
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    FINAL                          shift and go to state 41
    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 129
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48

state 100

    (42) LLAMADA_FUNCION -> ID LPAR . LLAMADA_FUNCIONP RPAR
    (43) LLAMADA_FUNCIONP -> . EXPRE LLAMADA_FUNCIONZ
    (44) LLAMADA_FUNCIONP -> . FINAL
    (63) EXPRE -> . EXP EXPREZ
    (1) FINAL -> .
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS

  ! shift/reduce conflict for ID resolved as shift
    RPAR            reduce using rule 1 (FINAL -> .)
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    EXPRE                          shift and go to state 131
    LLAMADA_FUNCIONP               shift and go to state 132
    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 74
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48
    FINAL                          shift and go to state 130

state 101

    (36) ASIGNACIONP -> LBRA . ICTE ASIGNACIONZ RBRA

    ICTE            shift and go to state 133


state 102

    (88) ACCION -> ID POINT . DIBUJA LPAR VAR_CTE RPAR
    (93) DIBUJA -> . DEFINIRPOSICION
    (94) DIBUJA -> . DEFINIRCOLOR
    (95) DIBUJA -> . DERECHO
    (96) DIBUJA -> . REVERSA
    (97) DIBUJA -> . IZQUIERDA
    (98) DIBUJA -> . DERECHA
    (99) DIBUJA -> . VELOCIDAD
    (100) DIBUJA -> . BORRAR
    (101) DIBUJA -> . MOSTRAR
    (102) DIBUJA -> . OCULTAR
    (103) DIBUJA -> . CIRCULO
    (104) DIBUJA -> . DEFINIRX
    (105) DIBUJA -> . DEFINIRY
    (106) DIBUJA -> . ARCO
    (107) DIBUJA -> . GROSOR

    DEFINIRPOSICION shift and go to state 140
    DEFINIRCOLOR    shift and go to state 149
    DERECHO         shift and go to state 144
    REVERSA         shift and go to state 138
    IZQUIERDA       shift and go to state 142
    DERECHA         shift and go to state 134
    VELOCIDAD       shift and go to state 137
    BORRAR          shift and go to state 147
    MOSTRAR         shift and go to state 141
    OCULTAR         shift and go to state 139
    CIRCULO         shift and go to state 136
    DEFINIRX        shift and go to state 146
    DEFINIRY        shift and go to state 145
    ARCO            shift and go to state 135
    GROSOR          shift and go to state 148

    DIBUJA                         shift and go to state 143

state 103

    (35) ASIGNACIONP -> EQUAL . EXPRE
    (63) EXPRE -> . EXP EXPREZ
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    EXPRE                          shift and go to state 150
    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 74
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48
    FINAL                          shift and go to state 41

state 104

    (34) ASIGNACION -> ID ASIGNACIONP .

    ID              reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    IF              reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    DRAW            reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    PRINT           reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    WHILE           reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    FOR             reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    INT             reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    BOOLEAN         reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    CHAR            reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    STRING          reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    FLOAT           reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    RETURN          reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    END             reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)
    ELSE            reduce using rule 34 (ASIGNACION -> ID ASIGNACIONP .)


state 105

    (52) CONDICION -> IF LPAR . EXPRE RPAR BLOQUE CONDICIONP END
    (63) EXPRE -> . EXP EXPREZ
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    FINAL                          shift and go to state 41
    EXPRE                          shift and go to state 151
    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 74
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48

state 106

    (47) PRINCIPAL -> DEFINE VOID MAIN LPAR RPAR . BLOQUE END
    (22) BLOQUE -> . ESTATUTO BLOQUEP
    (15) ESTATUTO -> . ASIGNACION
    (16) ESTATUTO -> . CONDICION
    (17) ESTATUTO -> . CICLO
    (18) ESTATUTO -> . ACCION
    (19) ESTATUTO -> . VART
    (20) ESTATUTO -> . LLAMADA_FUNCION
    (21) ESTATUTO -> . IMPRIMIR
    (34) ASIGNACION -> . ID ASIGNACIONP
    (52) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (48) CICLO -> . WHILEF
    (49) CICLO -> . FORZ
    (88) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (10) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (11) VART -> . DATA_TIPOS ID VARZ
    (12) VART -> . ARR ID
    (42) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (75) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (50) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (51) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (25) DATA_TIPOS -> . INT
    (26) DATA_TIPOS -> . BOOLEAN
    (27) DATA_TIPOS -> . CHAR
    (28) DATA_TIPOS -> . STRING
    (29) DATA_TIPOS -> . FLOAT
    (39) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    ID              shift and go to state 66
    IF              shift and go to state 67
    DRAW            shift and go to state 12
    PRINT           shift and go to state 57
    WHILE           shift and go to state 56
    FOR             shift and go to state 60
    INT             shift and go to state 16
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    FLOAT           shift and go to state 13

    VART                           shift and go to state 53
    CICLO                          shift and go to state 55
    LLAMADA_FUNCION                shift and go to state 58
    ASIGNACION                     shift and go to state 59
    ESTATUTO                       shift and go to state 54
    WHILEF                         shift and go to state 61
    DATA_TIPOS                     shift and go to state 15
    FORZ                           shift and go to state 62
    IMPRIMIR                       shift and go to state 64
    BLOQUE                         shift and go to state 152
    ARR                            shift and go to state 18
    ACCION                         shift and go to state 68
    CONDICION                      shift and go to state 63

state 107

    (10) VART -> DRAW ID EQUAL NEW DRAWI LPAR . RPAR

    RPAR            shift and go to state 153


state 108

    (78) FAC -> LPAR EXPRE RPAR .

    MULT            reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    DIVI            reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    PLUS            reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    MINUS           reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    END             reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    LESSTH          reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    GREATERTH       reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    SEQUAL          reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    NOTEQ           reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    LESSEQTH        reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    GREATEREQTH     reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    COMMA           reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    RPAR            reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    DEFINE          reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    ID              reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    IF              reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    DRAW            reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    PRINT           reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    WHILE           reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    FOR             reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    INT             reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    BOOLEAN         reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    CHAR            reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    STRING          reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    FLOAT           reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    RETURN          reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    ELSE            reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)
    RBRA            reduce using rule 78 (FAC -> LPAR EXPRE RPAR .)


state 109

    (61) RELOP -> LESSEQTH .

    LPAR            reduce using rule 61 (RELOP -> LESSEQTH .)
    ID              reduce using rule 61 (RELOP -> LESSEQTH .)
    PLUS            reduce using rule 61 (RELOP -> LESSEQTH .)
    MINUS           reduce using rule 61 (RELOP -> LESSEQTH .)
    ICTE            reduce using rule 61 (RELOP -> LESSEQTH .)
    FCTE            reduce using rule 61 (RELOP -> LESSEQTH .)


state 110

    (64) EXPREZ -> RELOP . EXP
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 154
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48
    FINAL                          shift and go to state 41

state 111

    (59) RELOP -> SEQUAL .

    LPAR            reduce using rule 59 (RELOP -> SEQUAL .)
    ID              reduce using rule 59 (RELOP -> SEQUAL .)
    PLUS            reduce using rule 59 (RELOP -> SEQUAL .)
    MINUS           reduce using rule 59 (RELOP -> SEQUAL .)
    ICTE            reduce using rule 59 (RELOP -> SEQUAL .)
    FCTE            reduce using rule 59 (RELOP -> SEQUAL .)


state 112

    (60) RELOP -> NOTEQ .

    LPAR            reduce using rule 60 (RELOP -> NOTEQ .)
    ID              reduce using rule 60 (RELOP -> NOTEQ .)
    PLUS            reduce using rule 60 (RELOP -> NOTEQ .)
    MINUS           reduce using rule 60 (RELOP -> NOTEQ .)
    ICTE            reduce using rule 60 (RELOP -> NOTEQ .)
    FCTE            reduce using rule 60 (RELOP -> NOTEQ .)


state 113

    (62) RELOP -> GREATEREQTH .

    LPAR            reduce using rule 62 (RELOP -> GREATEREQTH .)
    ID              reduce using rule 62 (RELOP -> GREATEREQTH .)
    PLUS            reduce using rule 62 (RELOP -> GREATEREQTH .)
    MINUS           reduce using rule 62 (RELOP -> GREATEREQTH .)
    ICTE            reduce using rule 62 (RELOP -> GREATEREQTH .)
    FCTE            reduce using rule 62 (RELOP -> GREATEREQTH .)


state 114

    (58) RELOP -> GREATERTH .

    LPAR            reduce using rule 58 (RELOP -> GREATERTH .)
    ID              reduce using rule 58 (RELOP -> GREATERTH .)
    PLUS            reduce using rule 58 (RELOP -> GREATERTH .)
    MINUS           reduce using rule 58 (RELOP -> GREATERTH .)
    ICTE            reduce using rule 58 (RELOP -> GREATERTH .)
    FCTE            reduce using rule 58 (RELOP -> GREATERTH .)


state 115

    (57) RELOP -> LESSTH .

    LPAR            reduce using rule 57 (RELOP -> LESSTH .)
    ID              reduce using rule 57 (RELOP -> LESSTH .)
    PLUS            reduce using rule 57 (RELOP -> LESSTH .)
    MINUS           reduce using rule 57 (RELOP -> LESSTH .)
    ICTE            reduce using rule 57 (RELOP -> LESSTH .)
    FCTE            reduce using rule 57 (RELOP -> LESSTH .)


state 116

    (63) EXPRE -> EXP EXPREZ .

    COMMA           reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    RPAR            reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    ID              reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    IF              reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    DRAW            reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    PRINT           reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    WHILE           reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    FOR             reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    INT             reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    BOOLEAN         reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    CHAR            reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    STRING          reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    FLOAT           reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    RETURN          reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    END             reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    ELSE            reduce using rule 63 (EXPRE -> EXP EXPREZ .)
    RBRA            reduce using rule 63 (EXPRE -> EXP EXPREZ .)


state 117

    (65) EXPREZ -> FINAL .

    RPAR            reduce using rule 65 (EXPREZ -> FINAL .)
    RBRA            reduce using rule 65 (EXPREZ -> FINAL .)
    COMMA           reduce using rule 65 (EXPREZ -> FINAL .)
    ID              reduce using rule 65 (EXPREZ -> FINAL .)
    IF              reduce using rule 65 (EXPREZ -> FINAL .)
    DRAW            reduce using rule 65 (EXPREZ -> FINAL .)
    PRINT           reduce using rule 65 (EXPREZ -> FINAL .)
    WHILE           reduce using rule 65 (EXPREZ -> FINAL .)
    FOR             reduce using rule 65 (EXPREZ -> FINAL .)
    INT             reduce using rule 65 (EXPREZ -> FINAL .)
    BOOLEAN         reduce using rule 65 (EXPREZ -> FINAL .)
    CHAR            reduce using rule 65 (EXPREZ -> FINAL .)
    STRING          reduce using rule 65 (EXPREZ -> FINAL .)
    FLOAT           reduce using rule 65 (EXPREZ -> FINAL .)
    RETURN          reduce using rule 65 (EXPREZ -> FINAL .)
    END             reduce using rule 65 (EXPREZ -> FINAL .)
    ELSE            reduce using rule 65 (EXPREZ -> FINAL .)


state 118

    (67) EXP_W_SIGN -> ASOP EXP .

    DEFINE          reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    ID              reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    IF              reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    DRAW            reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    PRINT           reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    WHILE           reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    FOR             reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    INT             reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    BOOLEAN         reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    CHAR            reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    STRING          reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    FLOAT           reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    RETURN          reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    END             reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    ELSE            reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    LESSTH          reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    GREATERTH       reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    SEQUAL          reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    NOTEQ           reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    LESSEQTH        reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    GREATEREQTH     reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    RPAR            reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    COMMA           reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)
    RBRA            reduce using rule 67 (EXP_W_SIGN -> ASOP EXP .)


state 119

    (70) TERMINO_W_SIGN -> MDOP TERMINO .

    PLUS            reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    MINUS           reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    DEFINE          reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    ID              reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    IF              reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    DRAW            reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    PRINT           reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    WHILE           reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    FOR             reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    INT             reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    BOOLEAN         reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    CHAR            reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    STRING          reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    FLOAT           reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    RETURN          reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    END             reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    ELSE            reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    LESSTH          reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    GREATERTH       reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    SEQUAL          reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    NOTEQ           reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    LESSEQTH        reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    GREATEREQTH     reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    RPAR            reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    COMMA           reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)
    RBRA            reduce using rule 70 (TERMINO_W_SIGN -> MDOP TERMINO .)


state 120

    (81) FACT -> LBRA EXP . FACZ RBRA
    (85) FACZ -> . COMMA EXP
    (86) FACZ -> . FINAL
    (1) FINAL -> .

    COMMA           shift and go to state 156
    RBRA            reduce using rule 1 (FINAL -> .)

    FACZ                           shift and go to state 155
    FINAL                          shift and go to state 157

state 121

    (90) VAR_FUNP -> DATA_TIPOS ID VAR_FUNZ .

    RPAR            reduce using rule 90 (VAR_FUNP -> DATA_TIPOS ID VAR_FUNZ .)


state 122

    (91) VAR_FUNZ -> COMMA . VAR_FUNP
    (90) VAR_FUNP -> . DATA_TIPOS ID VAR_FUNZ
    (25) DATA_TIPOS -> . INT
    (26) DATA_TIPOS -> . BOOLEAN
    (27) DATA_TIPOS -> . CHAR
    (28) DATA_TIPOS -> . STRING
    (29) DATA_TIPOS -> . FLOAT

    INT             shift and go to state 16
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    FLOAT           shift and go to state 13

    DATA_TIPOS                     shift and go to state 51
    VAR_FUNP                       shift and go to state 158

state 123

    (92) VAR_FUNZ -> FINAL .

    RPAR            reduce using rule 92 (VAR_FUNZ -> FINAL .)


state 124

    (50) WHILEF -> WHILE LPAR EXPRE . RPAR BLOQUE END

    RPAR            shift and go to state 159


state 125

    (76) IMPRIMIRZ -> EXPRE .

    RBRA            reduce using rule 76 (IMPRIMIRZ -> EXPRE .)


state 126

    (75) IMPRIMIR -> PRINT LBRA IMPRIMIRZ . RBRA

    RBRA            shift and go to state 160


state 127

    (77) IMPRIMIRZ -> SCTE .

    RBRA            reduce using rule 77 (IMPRIMIRZ -> SCTE .)


state 128

    (51) FORZ -> FOR LPAR ICTE . COMMA ICTE COMMA ICTE RPAR BLOQUE END

    COMMA           shift and go to state 161


state 129

    (87) FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN BLOQUE RETURN EXP . END

    END             shift and go to state 162


state 130

    (44) LLAMADA_FUNCIONP -> FINAL .
    (84) FACS -> FINAL .

    RPAR            reduce using rule 44 (LLAMADA_FUNCIONP -> FINAL .)
    ICTE            reduce using rule 84 (FACS -> FINAL .)
    FCTE            reduce using rule 84 (FACS -> FINAL .)
    ID              reduce using rule 84 (FACS -> FINAL .)


state 131

    (43) LLAMADA_FUNCIONP -> EXPRE . LLAMADA_FUNCIONZ
    (45) LLAMADA_FUNCIONZ -> . COMMA LLAMADA_FUNCIONP
    (46) LLAMADA_FUNCIONZ -> . FINAL
    (1) FINAL -> .

    COMMA           shift and go to state 165
    RPAR            reduce using rule 1 (FINAL -> .)

    FINAL                          shift and go to state 163
    LLAMADA_FUNCIONZ               shift and go to state 164

state 132

    (42) LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP . RPAR

    RPAR            shift and go to state 166


state 133

    (36) ASIGNACIONP -> LBRA ICTE . ASIGNACIONZ RBRA
    (37) ASIGNACIONZ -> . COMMA ICTE
    (38) ASIGNACIONZ -> . FINAL
    (1) FINAL -> .

    COMMA           shift and go to state 167
    RBRA            reduce using rule 1 (FINAL -> .)

    ASIGNACIONZ                    shift and go to state 168
    FINAL                          shift and go to state 169

state 134

    (98) DIBUJA -> DERECHA .

    LPAR            reduce using rule 98 (DIBUJA -> DERECHA .)


state 135

    (106) DIBUJA -> ARCO .

    LPAR            reduce using rule 106 (DIBUJA -> ARCO .)


state 136

    (103) DIBUJA -> CIRCULO .

    LPAR            reduce using rule 103 (DIBUJA -> CIRCULO .)


state 137

    (99) DIBUJA -> VELOCIDAD .

    LPAR            reduce using rule 99 (DIBUJA -> VELOCIDAD .)


state 138

    (96) DIBUJA -> REVERSA .

    LPAR            reduce using rule 96 (DIBUJA -> REVERSA .)


state 139

    (102) DIBUJA -> OCULTAR .

    LPAR            reduce using rule 102 (DIBUJA -> OCULTAR .)


state 140

    (93) DIBUJA -> DEFINIRPOSICION .

    LPAR            reduce using rule 93 (DIBUJA -> DEFINIRPOSICION .)


state 141

    (101) DIBUJA -> MOSTRAR .

    LPAR            reduce using rule 101 (DIBUJA -> MOSTRAR .)


state 142

    (97) DIBUJA -> IZQUIERDA .

    LPAR            reduce using rule 97 (DIBUJA -> IZQUIERDA .)


state 143

    (88) ACCION -> ID POINT DIBUJA . LPAR VAR_CTE RPAR

    LPAR            shift and go to state 170


state 144

    (95) DIBUJA -> DERECHO .

    LPAR            reduce using rule 95 (DIBUJA -> DERECHO .)


state 145

    (105) DIBUJA -> DEFINIRY .

    LPAR            reduce using rule 105 (DIBUJA -> DEFINIRY .)


state 146

    (104) DIBUJA -> DEFINIRX .

    LPAR            reduce using rule 104 (DIBUJA -> DEFINIRX .)


state 147

    (100) DIBUJA -> BORRAR .

    LPAR            reduce using rule 100 (DIBUJA -> BORRAR .)


state 148

    (107) DIBUJA -> GROSOR .

    LPAR            reduce using rule 107 (DIBUJA -> GROSOR .)


state 149

    (94) DIBUJA -> DEFINIRCOLOR .

    LPAR            reduce using rule 94 (DIBUJA -> DEFINIRCOLOR .)


state 150

    (35) ASIGNACIONP -> EQUAL EXPRE .

    ID              reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    IF              reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    DRAW            reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    PRINT           reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    WHILE           reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    FOR             reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    INT             reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    BOOLEAN         reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    CHAR            reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    STRING          reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    FLOAT           reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    RETURN          reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    END             reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)
    ELSE            reduce using rule 35 (ASIGNACIONP -> EQUAL EXPRE .)


state 151

    (52) CONDICION -> IF LPAR EXPRE . RPAR BLOQUE CONDICIONP END

    RPAR            shift and go to state 171


state 152

    (47) PRINCIPAL -> DEFINE VOID MAIN LPAR RPAR BLOQUE . END

    END             shift and go to state 172


state 153

    (10) VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .

    ID              reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    IF              reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    DRAW            reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    PRINT           reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    WHILE           reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    FOR             reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    INT             reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    BOOLEAN         reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    CHAR            reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    STRING          reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    FLOAT           reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    RETURN          reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    END             reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    ELSE            reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    DEFINE          reduce using rule 10 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)


state 154

    (64) EXPREZ -> RELOP EXP .

    RPAR            reduce using rule 64 (EXPREZ -> RELOP EXP .)
    RBRA            reduce using rule 64 (EXPREZ -> RELOP EXP .)
    COMMA           reduce using rule 64 (EXPREZ -> RELOP EXP .)
    ID              reduce using rule 64 (EXPREZ -> RELOP EXP .)
    IF              reduce using rule 64 (EXPREZ -> RELOP EXP .)
    DRAW            reduce using rule 64 (EXPREZ -> RELOP EXP .)
    PRINT           reduce using rule 64 (EXPREZ -> RELOP EXP .)
    WHILE           reduce using rule 64 (EXPREZ -> RELOP EXP .)
    FOR             reduce using rule 64 (EXPREZ -> RELOP EXP .)
    INT             reduce using rule 64 (EXPREZ -> RELOP EXP .)
    BOOLEAN         reduce using rule 64 (EXPREZ -> RELOP EXP .)
    CHAR            reduce using rule 64 (EXPREZ -> RELOP EXP .)
    STRING          reduce using rule 64 (EXPREZ -> RELOP EXP .)
    FLOAT           reduce using rule 64 (EXPREZ -> RELOP EXP .)
    RETURN          reduce using rule 64 (EXPREZ -> RELOP EXP .)
    END             reduce using rule 64 (EXPREZ -> RELOP EXP .)
    ELSE            reduce using rule 64 (EXPREZ -> RELOP EXP .)


state 155

    (81) FACT -> LBRA EXP FACZ . RBRA

    RBRA            shift and go to state 173


state 156

    (85) FACZ -> COMMA . EXP
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 174
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48
    FINAL                          shift and go to state 41

state 157

    (86) FACZ -> FINAL .

    RBRA            reduce using rule 86 (FACZ -> FINAL .)


state 158

    (91) VAR_FUNZ -> COMMA VAR_FUNP .

    RPAR            reduce using rule 91 (VAR_FUNZ -> COMMA VAR_FUNP .)


state 159

    (50) WHILEF -> WHILE LPAR EXPRE RPAR . BLOQUE END
    (22) BLOQUE -> . ESTATUTO BLOQUEP
    (15) ESTATUTO -> . ASIGNACION
    (16) ESTATUTO -> . CONDICION
    (17) ESTATUTO -> . CICLO
    (18) ESTATUTO -> . ACCION
    (19) ESTATUTO -> . VART
    (20) ESTATUTO -> . LLAMADA_FUNCION
    (21) ESTATUTO -> . IMPRIMIR
    (34) ASIGNACION -> . ID ASIGNACIONP
    (52) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (48) CICLO -> . WHILEF
    (49) CICLO -> . FORZ
    (88) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (10) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (11) VART -> . DATA_TIPOS ID VARZ
    (12) VART -> . ARR ID
    (42) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (75) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (50) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (51) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (25) DATA_TIPOS -> . INT
    (26) DATA_TIPOS -> . BOOLEAN
    (27) DATA_TIPOS -> . CHAR
    (28) DATA_TIPOS -> . STRING
    (29) DATA_TIPOS -> . FLOAT
    (39) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    ID              shift and go to state 66
    IF              shift and go to state 67
    DRAW            shift and go to state 12
    PRINT           shift and go to state 57
    WHILE           shift and go to state 56
    FOR             shift and go to state 60
    INT             shift and go to state 16
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    FLOAT           shift and go to state 13

    VART                           shift and go to state 53
    CICLO                          shift and go to state 55
    LLAMADA_FUNCION                shift and go to state 58
    ASIGNACION                     shift and go to state 59
    ESTATUTO                       shift and go to state 54
    WHILEF                         shift and go to state 61
    DATA_TIPOS                     shift and go to state 15
    FORZ                           shift and go to state 62
    IMPRIMIR                       shift and go to state 64
    BLOQUE                         shift and go to state 175
    ARR                            shift and go to state 18
    ACCION                         shift and go to state 68
    CONDICION                      shift and go to state 63

state 160

    (75) IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .

    ID              reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    IF              reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    DRAW            reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    PRINT           reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    WHILE           reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    FOR             reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    INT             reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    BOOLEAN         reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    CHAR            reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    STRING          reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    FLOAT           reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    RETURN          reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    END             reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    ELSE            reduce using rule 75 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)


state 161

    (51) FORZ -> FOR LPAR ICTE COMMA . ICTE COMMA ICTE RPAR BLOQUE END

    ICTE            shift and go to state 176


state 162

    (87) FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN BLOQUE RETURN EXP END .

    DEFINE          reduce using rule 87 (FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN BLOQUE RETURN EXP END .)


state 163

    (46) LLAMADA_FUNCIONZ -> FINAL .

    RPAR            reduce using rule 46 (LLAMADA_FUNCIONZ -> FINAL .)


state 164

    (43) LLAMADA_FUNCIONP -> EXPRE LLAMADA_FUNCIONZ .

    RPAR            reduce using rule 43 (LLAMADA_FUNCIONP -> EXPRE LLAMADA_FUNCIONZ .)


state 165

    (45) LLAMADA_FUNCIONZ -> COMMA . LLAMADA_FUNCIONP
    (43) LLAMADA_FUNCIONP -> . EXPRE LLAMADA_FUNCIONZ
    (44) LLAMADA_FUNCIONP -> . FINAL
    (63) EXPRE -> . EXP EXPREZ
    (1) FINAL -> .
    (66) EXP -> . TERMINO EXP_W_SIGN
    (69) TERMINO -> . FAC TERMINO_W_SIGN
    (78) FAC -> . LPAR EXPRE RPAR
    (79) FAC -> . FACS VAR_CTE
    (80) FAC -> . ID FACT
    (83) FACS -> . ASOP
    (84) FACS -> . FINAL
    (30) ASOP -> . PLUS
    (31) ASOP -> . MINUS

  ! shift/reduce conflict for ID resolved as shift
    RPAR            reduce using rule 1 (FINAL -> .)
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)
    LPAR            shift and go to state 42
    ID              shift and go to state 50
    PLUS            shift and go to state 44
    MINUS           shift and go to state 49

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    EXPRE                          shift and go to state 131
    LLAMADA_FUNCIONP               shift and go to state 177
    ASOP                           shift and go to state 43
    TERMINO                        shift and go to state 45
    EXP                            shift and go to state 74
    FACS                           shift and go to state 47
    FAC                            shift and go to state 48
    FINAL                          shift and go to state 130

state 166

    (42) LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .

    ID              reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    IF              reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    DRAW            reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    PRINT           reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    WHILE           reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    FOR             reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    INT             reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    BOOLEAN         reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    CHAR            reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    STRING          reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    FLOAT           reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    END             reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    ELSE            reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    MULT            reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    DIVI            reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    PLUS            reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    MINUS           reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    DEFINE          reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    RETURN          reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    LESSTH          reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    GREATERTH       reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    SEQUAL          reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    NOTEQ           reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    LESSEQTH        reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    GREATEREQTH     reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    RPAR            reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    COMMA           reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    RBRA            reduce using rule 42 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)


state 167

    (37) ASIGNACIONZ -> COMMA . ICTE

    ICTE            shift and go to state 178


state 168

    (36) ASIGNACIONP -> LBRA ICTE ASIGNACIONZ . RBRA

    RBRA            shift and go to state 179


state 169

    (38) ASIGNACIONZ -> FINAL .

    RBRA            reduce using rule 38 (ASIGNACIONZ -> FINAL .)


state 170

    (88) ACCION -> ID POINT DIBUJA LPAR . VAR_CTE RPAR
    (72) VAR_CTE -> . ICTE
    (73) VAR_CTE -> . FCTE
    (74) VAR_CTE -> . LLAMADA_FUNCION
    (42) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR

    ICTE            shift and go to state 81
    FCTE            shift and go to state 80
    ID              shift and go to state 82

    LLAMADA_FUNCION                shift and go to state 78
    VAR_CTE                        shift and go to state 180

state 171

    (52) CONDICION -> IF LPAR EXPRE RPAR . BLOQUE CONDICIONP END
    (22) BLOQUE -> . ESTATUTO BLOQUEP
    (15) ESTATUTO -> . ASIGNACION
    (16) ESTATUTO -> . CONDICION
    (17) ESTATUTO -> . CICLO
    (18) ESTATUTO -> . ACCION
    (19) ESTATUTO -> . VART
    (20) ESTATUTO -> . LLAMADA_FUNCION
    (21) ESTATUTO -> . IMPRIMIR
    (34) ASIGNACION -> . ID ASIGNACIONP
    (52) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (48) CICLO -> . WHILEF
    (49) CICLO -> . FORZ
    (88) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (10) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (11) VART -> . DATA_TIPOS ID VARZ
    (12) VART -> . ARR ID
    (42) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (75) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (50) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (51) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (25) DATA_TIPOS -> . INT
    (26) DATA_TIPOS -> . BOOLEAN
    (27) DATA_TIPOS -> . CHAR
    (28) DATA_TIPOS -> . STRING
    (29) DATA_TIPOS -> . FLOAT
    (39) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    ID              shift and go to state 66
    IF              shift and go to state 67
    DRAW            shift and go to state 12
    PRINT           shift and go to state 57
    WHILE           shift and go to state 56
    FOR             shift and go to state 60
    INT             shift and go to state 16
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    FLOAT           shift and go to state 13

    VART                           shift and go to state 53
    CICLO                          shift and go to state 55
    LLAMADA_FUNCION                shift and go to state 58
    ASIGNACION                     shift and go to state 59
    ESTATUTO                       shift and go to state 54
    WHILEF                         shift and go to state 61
    DATA_TIPOS                     shift and go to state 15
    FORZ                           shift and go to state 62
    IMPRIMIR                       shift and go to state 64
    BLOQUE                         shift and go to state 181
    ARR                            shift and go to state 18
    ACCION                         shift and go to state 68
    CONDICION                      shift and go to state 63

state 172

    (47) PRINCIPAL -> DEFINE VOID MAIN LPAR RPAR BLOQUE END .

    $end            reduce using rule 47 (PRINCIPAL -> DEFINE VOID MAIN LPAR RPAR BLOQUE END .)


state 173

    (81) FACT -> LBRA EXP FACZ RBRA .

    MULT            reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    DIVI            reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    PLUS            reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    MINUS           reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    DEFINE          reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    ID              reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    IF              reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    DRAW            reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    PRINT           reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    WHILE           reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    FOR             reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    INT             reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    BOOLEAN         reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    CHAR            reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    STRING          reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    FLOAT           reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    RETURN          reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    END             reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    ELSE            reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    LESSTH          reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    GREATERTH       reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    SEQUAL          reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    NOTEQ           reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    LESSEQTH        reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    GREATEREQTH     reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    RPAR            reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    COMMA           reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)
    RBRA            reduce using rule 81 (FACT -> LBRA EXP FACZ RBRA .)


state 174

    (85) FACZ -> COMMA EXP .

    RBRA            reduce using rule 85 (FACZ -> COMMA EXP .)


state 175

    (50) WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE . END

    END             shift and go to state 182


state 176

    (51) FORZ -> FOR LPAR ICTE COMMA ICTE . COMMA ICTE RPAR BLOQUE END

    COMMA           shift and go to state 183


state 177

    (45) LLAMADA_FUNCIONZ -> COMMA LLAMADA_FUNCIONP .

    RPAR            reduce using rule 45 (LLAMADA_FUNCIONZ -> COMMA LLAMADA_FUNCIONP .)


state 178

    (37) ASIGNACIONZ -> COMMA ICTE .

    RBRA            reduce using rule 37 (ASIGNACIONZ -> COMMA ICTE .)


state 179

    (36) ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .

    ID              reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    IF              reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    DRAW            reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    PRINT           reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    WHILE           reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    FOR             reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    INT             reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    BOOLEAN         reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    CHAR            reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    STRING          reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    FLOAT           reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    RETURN          reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    END             reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    ELSE            reduce using rule 36 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)


state 180

    (88) ACCION -> ID POINT DIBUJA LPAR VAR_CTE . RPAR

    RPAR            shift and go to state 184


state 181

    (52) CONDICION -> IF LPAR EXPRE RPAR BLOQUE . CONDICIONP END
    (53) CONDICIONP -> . ELSE CONDICIONZ
    (54) CONDICIONP -> . FINAL
    (1) FINAL -> .

    ELSE            shift and go to state 186
    END             reduce using rule 1 (FINAL -> .)

    CONDICIONP                     shift and go to state 185
    FINAL                          shift and go to state 187

state 182

    (50) WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .

    ID              reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    IF              reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    DRAW            reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    PRINT           reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    WHILE           reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    FOR             reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    INT             reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    BOOLEAN         reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    CHAR            reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    STRING          reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    FLOAT           reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    END             reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    RETURN          reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    ELSE            reduce using rule 50 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)


state 183

    (51) FORZ -> FOR LPAR ICTE COMMA ICTE COMMA . ICTE RPAR BLOQUE END

    ICTE            shift and go to state 188


state 184

    (88) ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .

    ID              reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    IF              reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    DRAW            reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    PRINT           reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    WHILE           reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    FOR             reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    INT             reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    BOOLEAN         reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    CHAR            reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    STRING          reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    FLOAT           reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    RETURN          reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    END             reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    ELSE            reduce using rule 88 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)


state 185

    (52) CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP . END

    END             shift and go to state 189


state 186

    (53) CONDICIONP -> ELSE . CONDICIONZ
    (55) CONDICIONZ -> . BLOQUE FINAL
    (56) CONDICIONZ -> . CONDICION
    (22) BLOQUE -> . ESTATUTO BLOQUEP
    (52) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (15) ESTATUTO -> . ASIGNACION
    (16) ESTATUTO -> . CONDICION
    (17) ESTATUTO -> . CICLO
    (18) ESTATUTO -> . ACCION
    (19) ESTATUTO -> . VART
    (20) ESTATUTO -> . LLAMADA_FUNCION
    (21) ESTATUTO -> . IMPRIMIR
    (34) ASIGNACION -> . ID ASIGNACIONP
    (48) CICLO -> . WHILEF
    (49) CICLO -> . FORZ
    (88) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (10) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (11) VART -> . DATA_TIPOS ID VARZ
    (12) VART -> . ARR ID
    (42) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (75) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (50) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (51) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (25) DATA_TIPOS -> . INT
    (26) DATA_TIPOS -> . BOOLEAN
    (27) DATA_TIPOS -> . CHAR
    (28) DATA_TIPOS -> . STRING
    (29) DATA_TIPOS -> . FLOAT
    (39) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    IF              shift and go to state 67
    ID              shift and go to state 66
    DRAW            shift and go to state 12
    PRINT           shift and go to state 57
    WHILE           shift and go to state 56
    FOR             shift and go to state 60
    INT             shift and go to state 16
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    FLOAT           shift and go to state 13

    VART                           shift and go to state 53
    CICLO                          shift and go to state 55
    LLAMADA_FUNCION                shift and go to state 58
    ASIGNACION                     shift and go to state 59
    ESTATUTO                       shift and go to state 54
    WHILEF                         shift and go to state 61
    DATA_TIPOS                     shift and go to state 15
    FORZ                           shift and go to state 62
    IMPRIMIR                       shift and go to state 64
    BLOQUE                         shift and go to state 191
    CONDICIONZ                     shift and go to state 192
    ARR                            shift and go to state 18
    ACCION                         shift and go to state 68
    CONDICION                      shift and go to state 190

state 187

    (54) CONDICIONP -> FINAL .

    END             reduce using rule 54 (CONDICIONP -> FINAL .)


state 188

    (51) FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE . RPAR BLOQUE END

    RPAR            shift and go to state 193


state 189

    (52) CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .

    ID              reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    IF              reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    DRAW            reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    PRINT           reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    WHILE           reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    FOR             reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    INT             reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    BOOLEAN         reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    CHAR            reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    STRING          reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    FLOAT           reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    END             reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    ELSE            reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    RETURN          reduce using rule 52 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)


state 190

    (56) CONDICIONZ -> CONDICION .
    (16) ESTATUTO -> CONDICION .

  ! reduce/reduce conflict for END resolved using rule 16 (ESTATUTO -> CONDICION .)
    ID              reduce using rule 16 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 16 (ESTATUTO -> CONDICION .)
    DRAW            reduce using rule 16 (ESTATUTO -> CONDICION .)
    PRINT           reduce using rule 16 (ESTATUTO -> CONDICION .)
    WHILE           reduce using rule 16 (ESTATUTO -> CONDICION .)
    FOR             reduce using rule 16 (ESTATUTO -> CONDICION .)
    INT             reduce using rule 16 (ESTATUTO -> CONDICION .)
    BOOLEAN         reduce using rule 16 (ESTATUTO -> CONDICION .)
    CHAR            reduce using rule 16 (ESTATUTO -> CONDICION .)
    STRING          reduce using rule 16 (ESTATUTO -> CONDICION .)
    FLOAT           reduce using rule 16 (ESTATUTO -> CONDICION .)
    END             reduce using rule 16 (ESTATUTO -> CONDICION .)

  ! END             [ reduce using rule 56 (CONDICIONZ -> CONDICION .) ]


state 191

    (55) CONDICIONZ -> BLOQUE . FINAL
    (1) FINAL -> .

    END             reduce using rule 1 (FINAL -> .)

    FINAL                          shift and go to state 194

state 192

    (53) CONDICIONP -> ELSE CONDICIONZ .

    END             reduce using rule 53 (CONDICIONP -> ELSE CONDICIONZ .)


state 193

    (51) FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR . BLOQUE END
    (22) BLOQUE -> . ESTATUTO BLOQUEP
    (15) ESTATUTO -> . ASIGNACION
    (16) ESTATUTO -> . CONDICION
    (17) ESTATUTO -> . CICLO
    (18) ESTATUTO -> . ACCION
    (19) ESTATUTO -> . VART
    (20) ESTATUTO -> . LLAMADA_FUNCION
    (21) ESTATUTO -> . IMPRIMIR
    (34) ASIGNACION -> . ID ASIGNACIONP
    (52) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (48) CICLO -> . WHILEF
    (49) CICLO -> . FORZ
    (88) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (10) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (11) VART -> . DATA_TIPOS ID VARZ
    (12) VART -> . ARR ID
    (42) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (75) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (50) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (51) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (25) DATA_TIPOS -> . INT
    (26) DATA_TIPOS -> . BOOLEAN
    (27) DATA_TIPOS -> . CHAR
    (28) DATA_TIPOS -> . STRING
    (29) DATA_TIPOS -> . FLOAT
    (39) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    ID              shift and go to state 66
    IF              shift and go to state 67
    DRAW            shift and go to state 12
    PRINT           shift and go to state 57
    WHILE           shift and go to state 56
    FOR             shift and go to state 60
    INT             shift and go to state 16
    BOOLEAN         shift and go to state 19
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    FLOAT           shift and go to state 13

    VART                           shift and go to state 53
    CICLO                          shift and go to state 55
    LLAMADA_FUNCION                shift and go to state 58
    ASIGNACION                     shift and go to state 59
    ESTATUTO                       shift and go to state 54
    WHILEF                         shift and go to state 61
    DATA_TIPOS                     shift and go to state 15
    FORZ                           shift and go to state 62
    IMPRIMIR                       shift and go to state 64
    BLOQUE                         shift and go to state 195
    ARR                            shift and go to state 18
    ACCION                         shift and go to state 68
    CONDICION                      shift and go to state 63

state 194

    (55) CONDICIONZ -> BLOQUE FINAL .

    END             reduce using rule 55 (CONDICIONZ -> BLOQUE FINAL .)


state 195

    (51) FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE . END

    END             shift and go to state 196


state 196

    (51) FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .

    ID              reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    IF              reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    DRAW            reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    PRINT           reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    WHILE           reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    FOR             reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    INT             reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    BOOLEAN         reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    CHAR            reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    STRING          reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    FLOAT           reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    END             reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    RETURN          reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    ELSE            reduce using rule 51 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DEFINE in state 1 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 42 resolved as shift
WARNING: shift/reduce conflict for ID in state 75 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 89 resolved as shift
WARNING: shift/reduce conflict for ID in state 96 resolved as shift
WARNING: shift/reduce conflict for ID in state 97 resolved as shift
WARNING: shift/reduce conflict for ID in state 99 resolved as shift
WARNING: shift/reduce conflict for ID in state 100 resolved as shift
WARNING: shift/reduce conflict for ID in state 103 resolved as shift
WARNING: shift/reduce conflict for ID in state 105 resolved as shift
WARNING: shift/reduce conflict for ID in state 110 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 165 resolved as shift
WARNING: reduce/reduce conflict in state 190 resolved using rule (ESTATUTO -> CONDICION)
WARNING: rejected rule (CONDICIONZ -> CONDICION) in state 190
WARNING: Rule (CONDICIONZ -> CONDICION) is never reduced
