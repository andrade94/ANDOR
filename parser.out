Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TRUE
    AND
    FALSE
    NOT
    OR

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     FINAL -> <empty>
Rule 2     PROGRAMA -> PROGRAMAZ FUNCION PRINCIPAL
Rule 3     PROGRAMAZ -> FINAL
Rule 4     PROGRAMAZ -> GLOBALES
Rule 5     GLOBALES -> GLOBAL VART
Rule 6     VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR
Rule 7     VART -> DATA_TIPOS ID VARZ
Rule 8     VART -> ARR ID
Rule 9     VARZ -> FINAL
Rule 10    VARZ -> EQUAL EXP
Rule 11    ESTATUTO -> ASIGNACION
Rule 12    ESTATUTO -> CONDICION
Rule 13    ESTATUTO -> CICLO
Rule 14    ESTATUTO -> ACCION
Rule 15    ESTATUTO -> VART
Rule 16    ESTATUTO -> LLAMADA_FUNCION
Rule 17    ESTATUTO -> IMPRIMIR
Rule 18    BLOQUE -> ESTATUTO BLOQUEP
Rule 19    BLOQUEP -> BLOQUE
Rule 20    BLOQUEP -> FINAL
Rule 21    DATA_TIPOS -> INT
Rule 22    DATA_TIPOS -> BOOLEAN
Rule 23    DATA_TIPOS -> CHAR
Rule 24    DATA_TIPOS -> STRING
Rule 25    DATA_TIPOS -> FLOAT
Rule 26    ASOP -> PLUS
Rule 27    ASOP -> MINUS
Rule 28    MDOP -> MULT
Rule 29    MDOP -> DIVI
Rule 30    ASIGNACION -> ID ASIGNACIONP
Rule 31    ASIGNACIONP -> EQUAL EXPRE
Rule 32    ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA
Rule 33    ASIGNACIONZ -> COMMA ICTE
Rule 34    ASIGNACIONZ -> FINAL
Rule 35    ARR -> DATA_TIPOS LBRA ICTE ARRZ RBRA
Rule 36    ARRZ -> COMMA ICTE
Rule 37    ARRZ -> FINAL
Rule 38    LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR
Rule 39    LLAMADA_FUNCIONP -> EXPRE LLAMADA_FUNCIONZ
Rule 40    LLAMADA_FUNCIONP -> FINAL
Rule 41    LLAMADA_FUNCIONZ -> COMMA LLAMADA_FUNCIONP
Rule 42    LLAMADA_FUNCIONZ -> FINAL
Rule 43    PRINCIPAL -> DEFINE VOID MAIN LPAR RPAR BLOQUE END
Rule 44    CICLO -> WHILEF
Rule 45    CICLO -> FORZ
Rule 46    WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END
Rule 47    FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
Rule 48    CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
Rule 49    CONDICIONP -> ELSE CONDICIONZ
Rule 50    CONDICIONP -> FINAL
Rule 51    CONDICIONZ -> BLOQUE
Rule 52    CONDICIONZ -> CONDICION
Rule 53    RELOP -> LESSTH
Rule 54    RELOP -> GREATERTH
Rule 55    RELOP -> SEQUAL
Rule 56    RELOP -> NOTEQ
Rule 57    RELOP -> LESSEQTH
Rule 58    RELOP -> GREATEREQTH
Rule 59    EXPRE -> EXP EXPREZ
Rule 60    EXPREZ -> RELOP EXP
Rule 61    EXPREZ -> FINAL
Rule 62    EXP -> TERMINO EXP_W_SIGN
Rule 63    EXP_W_SIGN -> ASOP EXP
Rule 64    EXP_W_SIGN -> FINAL
Rule 65    TERMINO -> FAC TERMINO_W_SIGN
Rule 66    TERMINO_W_SIGN -> MDOP TERMINO
Rule 67    TERMINO_W_SIGN -> FINAL
Rule 68    VAR_CTE -> ICTE
Rule 69    VAR_CTE -> FCTE
Rule 70    VAR_CTE -> LLAMADA_FUNCION
Rule 71    IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA
Rule 72    IMPRIMIRZ -> EXPRE
Rule 73    IMPRIMIRZ -> SCTE
Rule 74    FAC -> LPAR EXPRE RPAR
Rule 75    FAC -> FACS VAR_CTE
Rule 76    FAC -> ID FACT
Rule 77    FACT -> LBRA EXP FACZ RBRA
Rule 78    FACT -> FINAL
Rule 79    FACS -> ASOP
Rule 80    FACS -> FINAL
Rule 81    FACZ -> COMMA EXP
Rule 82    FACZ -> FINAL
Rule 83    FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN BLOQUE RETURN EXP END
Rule 84    ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR
Rule 85    VAR_FUN -> LPAR VAR_FUNP RPAR
Rule 86    VAR_FUNP -> DATA_TIPOS ID VAR_FUNZ
Rule 87    VAR_FUNZ -> COMMA VAR_FUNP
Rule 88    VAR_FUNZ -> FINAL
Rule 89    DIBUJA -> DEFINIRPOSICION
Rule 90    DIBUJA -> DEFINIRCOLOR
Rule 91    DIBUJA -> DERECHO
Rule 92    DIBUJA -> REVERSA
Rule 93    DIBUJA -> IZQUIERDA
Rule 94    DIBUJA -> DERECHA
Rule 95    DIBUJA -> VELOCIDAD
Rule 96    DIBUJA -> BORRAR
Rule 97    DIBUJA -> MOSTRAR
Rule 98    DIBUJA -> OCULTAR
Rule 99    DIBUJA -> CIRCULO
Rule 100   DIBUJA -> DEFINIRX
Rule 101   DIBUJA -> DEFINIRY
Rule 102   DIBUJA -> ARCO
Rule 103   DIBUJA -> GROSOR

Terminals, with rules where they appear

AND                  : 
ARCO                 : 102
BOOLEAN              : 22
BORRAR               : 96
CHAR                 : 23
CIRCULO              : 99
COMMA                : 33 36 41 47 47 81 87
DEFINE               : 43 83
DEFINIRCOLOR         : 90
DEFINIRPOSICION      : 89
DEFINIRX             : 100
DEFINIRY             : 101
DERECHA              : 94
DERECHO              : 91
DIVI                 : 29
DRAW                 : 6
DRAWI                : 6
ELSE                 : 49
END                  : 43 46 47 48 83
EQUAL                : 6 10 31
FALSE                : 
FCTE                 : 69
FLOAT                : 25
FOR                  : 47
GLOBAL               : 5
GREATEREQTH          : 58
GREATERTH            : 54
GROSOR               : 103
ICTE                 : 32 33 35 36 47 47 47 68
ID                   : 6 7 8 30 38 76 83 84 86
IF                   : 48
INT                  : 21
IZQUIERDA            : 93
LBRA                 : 32 35 71 77
LESSEQTH             : 57
LESSTH               : 53
LPAR                 : 6 38 43 46 47 48 74 84 85
MAIN                 : 43
MINUS                : 27
MOSTRAR              : 97
MULT                 : 28
NEW                  : 6
NOT                  : 
NOTEQ                : 56
OCULTAR              : 98
OR                   : 
PLUS                 : 26
POINT                : 84
PRINT                : 71
RBRA                 : 32 35 71 77
RETURN               : 83
REVERSA              : 92
RPAR                 : 6 38 43 46 47 48 74 84 85
SCTE                 : 73
SEQUAL               : 55
STRING               : 24
TRUE                 : 
VELOCIDAD            : 95
VOID                 : 43
WHILE                : 46
error                : 

Nonterminals, with rules where they appear

ACCION               : 14
ARR                  : 8
ARRZ                 : 35
ASIGNACION           : 11
ASIGNACIONP          : 30
ASIGNACIONZ          : 32
ASOP                 : 63 79
BLOQUE               : 19 43 46 47 48 51 83
BLOQUEP              : 18
CICLO                : 13
CONDICION            : 12 52
CONDICIONP           : 48
CONDICIONZ           : 49
DATA_TIPOS           : 7 35 83 86
DIBUJA               : 84
ESTATUTO             : 18
EXP                  : 10 59 60 63 77 81 83
EXPRE                : 31 39 46 48 72 74
EXPREZ               : 59
EXP_W_SIGN           : 62
FAC                  : 65
FACS                 : 75
FACT                 : 76
FACZ                 : 77
FINAL                : 3 9 20 34 37 40 42 50 61 64 67 78 80 82 88
FORZ                 : 45
FUNCION              : 2
GLOBALES             : 4
IMPRIMIR             : 17
IMPRIMIRZ            : 71
LLAMADA_FUNCION      : 16 70
LLAMADA_FUNCIONP     : 38 41
LLAMADA_FUNCIONZ     : 39
MDOP                 : 66
PRINCIPAL            : 2
PROGRAMA             : 0
PROGRAMAZ            : 2
RELOP                : 60
TERMINO              : 62 66
TERMINO_W_SIGN       : 65
VART                 : 5 15
VARZ                 : 7
VAR_CTE              : 75 84
VAR_FUN              : 83
VAR_FUNP             : 85 87
VAR_FUNZ             : 86
WHILEF               : 44

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (2) PROGRAMA -> . PROGRAMAZ FUNCION PRINCIPAL
    (3) PROGRAMAZ -> . FINAL
    (4) PROGRAMAZ -> . GLOBALES
    (1) FINAL -> .
    (5) GLOBALES -> . GLOBAL VART

    DEFINE          reduce using rule 1 (FINAL -> .)
    GLOBAL          shift and go to state 2

    PROGRAMAZ                      shift and go to state 1
    GLOBALES                       shift and go to state 3
    PROGRAMA                       shift and go to state 4
    FINAL                          shift and go to state 5

state 1

    (2) PROGRAMA -> PROGRAMAZ . FUNCION PRINCIPAL
    (83) FUNCION -> . DEFINE DATA_TIPOS ID VAR_FUN BLOQUE RETURN EXP END

    DEFINE          shift and go to state 7

    FUNCION                        shift and go to state 6

state 2

    (5) GLOBALES -> GLOBAL . VART
    (6) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (7) VART -> . DATA_TIPOS ID VARZ
    (8) VART -> . ARR ID
    (21) DATA_TIPOS -> . INT
    (22) DATA_TIPOS -> . BOOLEAN
    (23) DATA_TIPOS -> . CHAR
    (24) DATA_TIPOS -> . STRING
    (25) DATA_TIPOS -> . FLOAT
    (35) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    DRAW            shift and go to state 9
    INT             shift and go to state 13
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 14
    STRING          shift and go to state 11
    FLOAT           shift and go to state 10

    VART                           shift and go to state 8
    ARR                            shift and go to state 15
    DATA_TIPOS                     shift and go to state 12

state 3

    (4) PROGRAMAZ -> GLOBALES .

    DEFINE          reduce using rule 4 (PROGRAMAZ -> GLOBALES .)


state 4

    (0) S' -> PROGRAMA .



state 5

    (3) PROGRAMAZ -> FINAL .

    DEFINE          reduce using rule 3 (PROGRAMAZ -> FINAL .)


state 6

    (2) PROGRAMA -> PROGRAMAZ FUNCION . PRINCIPAL
    (43) PRINCIPAL -> . DEFINE VOID MAIN LPAR RPAR BLOQUE END

    DEFINE          shift and go to state 18

    PRINCIPAL                      shift and go to state 17

state 7

    (83) FUNCION -> DEFINE . DATA_TIPOS ID VAR_FUN BLOQUE RETURN EXP END
    (21) DATA_TIPOS -> . INT
    (22) DATA_TIPOS -> . BOOLEAN
    (23) DATA_TIPOS -> . CHAR
    (24) DATA_TIPOS -> . STRING
    (25) DATA_TIPOS -> . FLOAT

    INT             shift and go to state 13
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 14
    STRING          shift and go to state 11
    FLOAT           shift and go to state 10

    DATA_TIPOS                     shift and go to state 19

state 8

    (5) GLOBALES -> GLOBAL VART .

    DEFINE          reduce using rule 5 (GLOBALES -> GLOBAL VART .)


state 9

    (6) VART -> DRAW . ID EQUAL NEW DRAWI LPAR RPAR

    ID              shift and go to state 20


state 10

    (25) DATA_TIPOS -> FLOAT .

    ID              reduce using rule 25 (DATA_TIPOS -> FLOAT .)
    LBRA            reduce using rule 25 (DATA_TIPOS -> FLOAT .)


state 11

    (24) DATA_TIPOS -> STRING .

    ID              reduce using rule 24 (DATA_TIPOS -> STRING .)
    LBRA            reduce using rule 24 (DATA_TIPOS -> STRING .)


state 12

    (7) VART -> DATA_TIPOS . ID VARZ
    (35) ARR -> DATA_TIPOS . LBRA ICTE ARRZ RBRA

    ID              shift and go to state 22
    LBRA            shift and go to state 21


state 13

    (21) DATA_TIPOS -> INT .

    ID              reduce using rule 21 (DATA_TIPOS -> INT .)
    LBRA            reduce using rule 21 (DATA_TIPOS -> INT .)


state 14

    (23) DATA_TIPOS -> CHAR .

    ID              reduce using rule 23 (DATA_TIPOS -> CHAR .)
    LBRA            reduce using rule 23 (DATA_TIPOS -> CHAR .)


state 15

    (8) VART -> ARR . ID

    ID              shift and go to state 23


state 16

    (22) DATA_TIPOS -> BOOLEAN .

    ID              reduce using rule 22 (DATA_TIPOS -> BOOLEAN .)
    LBRA            reduce using rule 22 (DATA_TIPOS -> BOOLEAN .)


state 17

    (2) PROGRAMA -> PROGRAMAZ FUNCION PRINCIPAL .

    $end            reduce using rule 2 (PROGRAMA -> PROGRAMAZ FUNCION PRINCIPAL .)


state 18

    (43) PRINCIPAL -> DEFINE . VOID MAIN LPAR RPAR BLOQUE END

    VOID            shift and go to state 24


state 19

    (83) FUNCION -> DEFINE DATA_TIPOS . ID VAR_FUN BLOQUE RETURN EXP END

    ID              shift and go to state 25


state 20

    (6) VART -> DRAW ID . EQUAL NEW DRAWI LPAR RPAR

    EQUAL           shift and go to state 26


state 21

    (35) ARR -> DATA_TIPOS LBRA . ICTE ARRZ RBRA

    ICTE            shift and go to state 27


state 22

    (7) VART -> DATA_TIPOS ID . VARZ
    (9) VARZ -> . FINAL
    (10) VARZ -> . EQUAL EXP
    (1) FINAL -> .

    EQUAL           shift and go to state 28
    DEFINE          reduce using rule 1 (FINAL -> .)
    ID              reduce using rule 1 (FINAL -> .)
    IF              reduce using rule 1 (FINAL -> .)
    DRAW            reduce using rule 1 (FINAL -> .)
    PRINT           reduce using rule 1 (FINAL -> .)
    WHILE           reduce using rule 1 (FINAL -> .)
    FOR             reduce using rule 1 (FINAL -> .)
    INT             reduce using rule 1 (FINAL -> .)
    BOOLEAN         reduce using rule 1 (FINAL -> .)
    CHAR            reduce using rule 1 (FINAL -> .)
    STRING          reduce using rule 1 (FINAL -> .)
    FLOAT           reduce using rule 1 (FINAL -> .)
    RETURN          reduce using rule 1 (FINAL -> .)
    END             reduce using rule 1 (FINAL -> .)
    ELSE            reduce using rule 1 (FINAL -> .)

    FINAL                          shift and go to state 30
    VARZ                           shift and go to state 29

state 23

    (8) VART -> ARR ID .

    ID              reduce using rule 8 (VART -> ARR ID .)
    IF              reduce using rule 8 (VART -> ARR ID .)
    DRAW            reduce using rule 8 (VART -> ARR ID .)
    PRINT           reduce using rule 8 (VART -> ARR ID .)
    WHILE           reduce using rule 8 (VART -> ARR ID .)
    FOR             reduce using rule 8 (VART -> ARR ID .)
    INT             reduce using rule 8 (VART -> ARR ID .)
    BOOLEAN         reduce using rule 8 (VART -> ARR ID .)
    CHAR            reduce using rule 8 (VART -> ARR ID .)
    STRING          reduce using rule 8 (VART -> ARR ID .)
    FLOAT           reduce using rule 8 (VART -> ARR ID .)
    END             reduce using rule 8 (VART -> ARR ID .)
    RETURN          reduce using rule 8 (VART -> ARR ID .)
    ELSE            reduce using rule 8 (VART -> ARR ID .)
    DEFINE          reduce using rule 8 (VART -> ARR ID .)


state 24

    (43) PRINCIPAL -> DEFINE VOID . MAIN LPAR RPAR BLOQUE END

    MAIN            shift and go to state 31


state 25

    (83) FUNCION -> DEFINE DATA_TIPOS ID . VAR_FUN BLOQUE RETURN EXP END
    (85) VAR_FUN -> . LPAR VAR_FUNP RPAR

    LPAR            shift and go to state 32

    VAR_FUN                        shift and go to state 33

state 26

    (6) VART -> DRAW ID EQUAL . NEW DRAWI LPAR RPAR

    NEW             shift and go to state 34


state 27

    (35) ARR -> DATA_TIPOS LBRA ICTE . ARRZ RBRA
    (36) ARRZ -> . COMMA ICTE
    (37) ARRZ -> . FINAL
    (1) FINAL -> .

    COMMA           shift and go to state 36
    RBRA            reduce using rule 1 (FINAL -> .)

    ARRZ                           shift and go to state 37
    FINAL                          shift and go to state 35

state 28

    (10) VARZ -> EQUAL . EXP
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 43
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45
    FINAL                          shift and go to state 38

state 29

    (7) VART -> DATA_TIPOS ID VARZ .

    ID              reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    IF              reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    DRAW            reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    PRINT           reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    WHILE           reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    FOR             reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    INT             reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    BOOLEAN         reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    CHAR            reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    STRING          reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    FLOAT           reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    END             reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    RETURN          reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    ELSE            reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)
    DEFINE          reduce using rule 7 (VART -> DATA_TIPOS ID VARZ .)


state 30

    (9) VARZ -> FINAL .

    DEFINE          reduce using rule 9 (VARZ -> FINAL .)
    ID              reduce using rule 9 (VARZ -> FINAL .)
    IF              reduce using rule 9 (VARZ -> FINAL .)
    DRAW            reduce using rule 9 (VARZ -> FINAL .)
    PRINT           reduce using rule 9 (VARZ -> FINAL .)
    WHILE           reduce using rule 9 (VARZ -> FINAL .)
    FOR             reduce using rule 9 (VARZ -> FINAL .)
    INT             reduce using rule 9 (VARZ -> FINAL .)
    BOOLEAN         reduce using rule 9 (VARZ -> FINAL .)
    CHAR            reduce using rule 9 (VARZ -> FINAL .)
    STRING          reduce using rule 9 (VARZ -> FINAL .)
    FLOAT           reduce using rule 9 (VARZ -> FINAL .)
    RETURN          reduce using rule 9 (VARZ -> FINAL .)
    END             reduce using rule 9 (VARZ -> FINAL .)
    ELSE            reduce using rule 9 (VARZ -> FINAL .)


state 31

    (43) PRINCIPAL -> DEFINE VOID MAIN . LPAR RPAR BLOQUE END

    LPAR            shift and go to state 48


state 32

    (85) VAR_FUN -> LPAR . VAR_FUNP RPAR
    (86) VAR_FUNP -> . DATA_TIPOS ID VAR_FUNZ
    (21) DATA_TIPOS -> . INT
    (22) DATA_TIPOS -> . BOOLEAN
    (23) DATA_TIPOS -> . CHAR
    (24) DATA_TIPOS -> . STRING
    (25) DATA_TIPOS -> . FLOAT

    INT             shift and go to state 13
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 14
    STRING          shift and go to state 11
    FLOAT           shift and go to state 10

    DATA_TIPOS                     shift and go to state 49
    VAR_FUNP                       shift and go to state 50

state 33

    (83) FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN . BLOQUE RETURN EXP END
    (18) BLOQUE -> . ESTATUTO BLOQUEP
    (11) ESTATUTO -> . ASIGNACION
    (12) ESTATUTO -> . CONDICION
    (13) ESTATUTO -> . CICLO
    (14) ESTATUTO -> . ACCION
    (15) ESTATUTO -> . VART
    (16) ESTATUTO -> . LLAMADA_FUNCION
    (17) ESTATUTO -> . IMPRIMIR
    (30) ASIGNACION -> . ID ASIGNACIONP
    (48) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (44) CICLO -> . WHILEF
    (45) CICLO -> . FORZ
    (84) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (6) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (7) VART -> . DATA_TIPOS ID VARZ
    (8) VART -> . ARR ID
    (38) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (71) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (46) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (47) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (21) DATA_TIPOS -> . INT
    (22) DATA_TIPOS -> . BOOLEAN
    (23) DATA_TIPOS -> . CHAR
    (24) DATA_TIPOS -> . STRING
    (25) DATA_TIPOS -> . FLOAT
    (35) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    ID              shift and go to state 64
    IF              shift and go to state 65
    DRAW            shift and go to state 9
    PRINT           shift and go to state 55
    WHILE           shift and go to state 54
    FOR             shift and go to state 58
    INT             shift and go to state 13
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 14
    STRING          shift and go to state 11
    FLOAT           shift and go to state 10

    VART                           shift and go to state 51
    CICLO                          shift and go to state 53
    LLAMADA_FUNCION                shift and go to state 56
    ASIGNACION                     shift and go to state 57
    ESTATUTO                       shift and go to state 52
    WHILEF                         shift and go to state 59
    DATA_TIPOS                     shift and go to state 12
    FORZ                           shift and go to state 60
    IMPRIMIR                       shift and go to state 62
    BLOQUE                         shift and go to state 63
    ARR                            shift and go to state 15
    ACCION                         shift and go to state 66
    CONDICION                      shift and go to state 61

state 34

    (6) VART -> DRAW ID EQUAL NEW . DRAWI LPAR RPAR

    DRAWI           shift and go to state 67


state 35

    (37) ARRZ -> FINAL .

    RBRA            reduce using rule 37 (ARRZ -> FINAL .)


state 36

    (36) ARRZ -> COMMA . ICTE

    ICTE            shift and go to state 68


state 37

    (35) ARR -> DATA_TIPOS LBRA ICTE ARRZ . RBRA

    RBRA            shift and go to state 69


state 38

    (80) FACS -> FINAL .

    ICTE            reduce using rule 80 (FACS -> FINAL .)
    FCTE            reduce using rule 80 (FACS -> FINAL .)
    ID              reduce using rule 80 (FACS -> FINAL .)


state 39

    (74) FAC -> LPAR . EXPRE RPAR
    (59) EXPRE -> . EXP EXPREZ
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    EXPRE                          shift and go to state 70
    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 71
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45
    FINAL                          shift and go to state 38

state 40

    (79) FACS -> ASOP .

    ICTE            reduce using rule 79 (FACS -> ASOP .)
    FCTE            reduce using rule 79 (FACS -> ASOP .)
    ID              reduce using rule 79 (FACS -> ASOP .)


state 41

    (26) ASOP -> PLUS .

    ICTE            reduce using rule 26 (ASOP -> PLUS .)
    FCTE            reduce using rule 26 (ASOP -> PLUS .)
    ID              reduce using rule 26 (ASOP -> PLUS .)
    LPAR            reduce using rule 26 (ASOP -> PLUS .)
    PLUS            reduce using rule 26 (ASOP -> PLUS .)
    MINUS           reduce using rule 26 (ASOP -> PLUS .)


state 42

    (62) EXP -> TERMINO . EXP_W_SIGN
    (63) EXP_W_SIGN -> . ASOP EXP
    (64) EXP_W_SIGN -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    DEFINE          reduce using rule 1 (FINAL -> .)
    ID              reduce using rule 1 (FINAL -> .)
    IF              reduce using rule 1 (FINAL -> .)
    DRAW            reduce using rule 1 (FINAL -> .)
    PRINT           reduce using rule 1 (FINAL -> .)
    WHILE           reduce using rule 1 (FINAL -> .)
    FOR             reduce using rule 1 (FINAL -> .)
    INT             reduce using rule 1 (FINAL -> .)
    BOOLEAN         reduce using rule 1 (FINAL -> .)
    CHAR            reduce using rule 1 (FINAL -> .)
    STRING          reduce using rule 1 (FINAL -> .)
    FLOAT           reduce using rule 1 (FINAL -> .)
    RETURN          reduce using rule 1 (FINAL -> .)
    END             reduce using rule 1 (FINAL -> .)
    ELSE            reduce using rule 1 (FINAL -> .)
    LESSTH          reduce using rule 1 (FINAL -> .)
    GREATERTH       reduce using rule 1 (FINAL -> .)
    SEQUAL          reduce using rule 1 (FINAL -> .)
    NOTEQ           reduce using rule 1 (FINAL -> .)
    LESSEQTH        reduce using rule 1 (FINAL -> .)
    GREATEREQTH     reduce using rule 1 (FINAL -> .)
    RPAR            reduce using rule 1 (FINAL -> .)
    COMMA           reduce using rule 1 (FINAL -> .)
    RBRA            reduce using rule 1 (FINAL -> .)

    ASOP                           shift and go to state 72
    EXP_W_SIGN                     shift and go to state 73
    FINAL                          shift and go to state 74

state 43

    (10) VARZ -> EQUAL EXP .

    DEFINE          reduce using rule 10 (VARZ -> EQUAL EXP .)
    ID              reduce using rule 10 (VARZ -> EQUAL EXP .)
    IF              reduce using rule 10 (VARZ -> EQUAL EXP .)
    DRAW            reduce using rule 10 (VARZ -> EQUAL EXP .)
    PRINT           reduce using rule 10 (VARZ -> EQUAL EXP .)
    WHILE           reduce using rule 10 (VARZ -> EQUAL EXP .)
    FOR             reduce using rule 10 (VARZ -> EQUAL EXP .)
    INT             reduce using rule 10 (VARZ -> EQUAL EXP .)
    BOOLEAN         reduce using rule 10 (VARZ -> EQUAL EXP .)
    CHAR            reduce using rule 10 (VARZ -> EQUAL EXP .)
    STRING          reduce using rule 10 (VARZ -> EQUAL EXP .)
    FLOAT           reduce using rule 10 (VARZ -> EQUAL EXP .)
    RETURN          reduce using rule 10 (VARZ -> EQUAL EXP .)
    END             reduce using rule 10 (VARZ -> EQUAL EXP .)
    ELSE            reduce using rule 10 (VARZ -> EQUAL EXP .)


state 44

    (75) FAC -> FACS . VAR_CTE
    (68) VAR_CTE -> . ICTE
    (69) VAR_CTE -> . FCTE
    (70) VAR_CTE -> . LLAMADA_FUNCION
    (38) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR

    ICTE            shift and go to state 78
    FCTE            shift and go to state 77
    ID              shift and go to state 79

    LLAMADA_FUNCION                shift and go to state 75
    VAR_CTE                        shift and go to state 76

state 45

    (65) TERMINO -> FAC . TERMINO_W_SIGN
    (66) TERMINO_W_SIGN -> . MDOP TERMINO
    (67) TERMINO_W_SIGN -> . FINAL
    (28) MDOP -> . MULT
    (29) MDOP -> . DIVI
    (1) FINAL -> .

    MULT            shift and go to state 84
    DIVI            shift and go to state 80
    PLUS            reduce using rule 1 (FINAL -> .)
    MINUS           reduce using rule 1 (FINAL -> .)
    DEFINE          reduce using rule 1 (FINAL -> .)
    ID              reduce using rule 1 (FINAL -> .)
    IF              reduce using rule 1 (FINAL -> .)
    DRAW            reduce using rule 1 (FINAL -> .)
    PRINT           reduce using rule 1 (FINAL -> .)
    WHILE           reduce using rule 1 (FINAL -> .)
    FOR             reduce using rule 1 (FINAL -> .)
    INT             reduce using rule 1 (FINAL -> .)
    BOOLEAN         reduce using rule 1 (FINAL -> .)
    CHAR            reduce using rule 1 (FINAL -> .)
    STRING          reduce using rule 1 (FINAL -> .)
    FLOAT           reduce using rule 1 (FINAL -> .)
    RETURN          reduce using rule 1 (FINAL -> .)
    END             reduce using rule 1 (FINAL -> .)
    ELSE            reduce using rule 1 (FINAL -> .)
    LESSTH          reduce using rule 1 (FINAL -> .)
    GREATERTH       reduce using rule 1 (FINAL -> .)
    SEQUAL          reduce using rule 1 (FINAL -> .)
    NOTEQ           reduce using rule 1 (FINAL -> .)
    LESSEQTH        reduce using rule 1 (FINAL -> .)
    GREATEREQTH     reduce using rule 1 (FINAL -> .)
    RPAR            reduce using rule 1 (FINAL -> .)
    COMMA           reduce using rule 1 (FINAL -> .)
    RBRA            reduce using rule 1 (FINAL -> .)

    FINAL                          shift and go to state 83
    MDOP                           shift and go to state 81
    TERMINO_W_SIGN                 shift and go to state 82

state 46

    (27) ASOP -> MINUS .

    ICTE            reduce using rule 27 (ASOP -> MINUS .)
    FCTE            reduce using rule 27 (ASOP -> MINUS .)
    ID              reduce using rule 27 (ASOP -> MINUS .)
    LPAR            reduce using rule 27 (ASOP -> MINUS .)
    PLUS            reduce using rule 27 (ASOP -> MINUS .)
    MINUS           reduce using rule 27 (ASOP -> MINUS .)


state 47

    (76) FAC -> ID . FACT
    (77) FACT -> . LBRA EXP FACZ RBRA
    (78) FACT -> . FINAL
    (1) FINAL -> .

    LBRA            shift and go to state 86
    MULT            reduce using rule 1 (FINAL -> .)
    DIVI            reduce using rule 1 (FINAL -> .)
    PLUS            reduce using rule 1 (FINAL -> .)
    MINUS           reduce using rule 1 (FINAL -> .)
    DEFINE          reduce using rule 1 (FINAL -> .)
    ID              reduce using rule 1 (FINAL -> .)
    IF              reduce using rule 1 (FINAL -> .)
    DRAW            reduce using rule 1 (FINAL -> .)
    PRINT           reduce using rule 1 (FINAL -> .)
    WHILE           reduce using rule 1 (FINAL -> .)
    FOR             reduce using rule 1 (FINAL -> .)
    INT             reduce using rule 1 (FINAL -> .)
    BOOLEAN         reduce using rule 1 (FINAL -> .)
    CHAR            reduce using rule 1 (FINAL -> .)
    STRING          reduce using rule 1 (FINAL -> .)
    FLOAT           reduce using rule 1 (FINAL -> .)
    RETURN          reduce using rule 1 (FINAL -> .)
    END             reduce using rule 1 (FINAL -> .)
    ELSE            reduce using rule 1 (FINAL -> .)
    LESSTH          reduce using rule 1 (FINAL -> .)
    GREATERTH       reduce using rule 1 (FINAL -> .)
    SEQUAL          reduce using rule 1 (FINAL -> .)
    NOTEQ           reduce using rule 1 (FINAL -> .)
    LESSEQTH        reduce using rule 1 (FINAL -> .)
    GREATEREQTH     reduce using rule 1 (FINAL -> .)
    RPAR            reduce using rule 1 (FINAL -> .)
    COMMA           reduce using rule 1 (FINAL -> .)
    RBRA            reduce using rule 1 (FINAL -> .)

    FACT                           shift and go to state 87
    FINAL                          shift and go to state 85

state 48

    (43) PRINCIPAL -> DEFINE VOID MAIN LPAR . RPAR BLOQUE END

    RPAR            shift and go to state 88


state 49

    (86) VAR_FUNP -> DATA_TIPOS . ID VAR_FUNZ

    ID              shift and go to state 89


state 50

    (85) VAR_FUN -> LPAR VAR_FUNP . RPAR

    RPAR            shift and go to state 90


state 51

    (15) ESTATUTO -> VART .

    ID              reduce using rule 15 (ESTATUTO -> VART .)
    IF              reduce using rule 15 (ESTATUTO -> VART .)
    DRAW            reduce using rule 15 (ESTATUTO -> VART .)
    PRINT           reduce using rule 15 (ESTATUTO -> VART .)
    WHILE           reduce using rule 15 (ESTATUTO -> VART .)
    FOR             reduce using rule 15 (ESTATUTO -> VART .)
    INT             reduce using rule 15 (ESTATUTO -> VART .)
    BOOLEAN         reduce using rule 15 (ESTATUTO -> VART .)
    CHAR            reduce using rule 15 (ESTATUTO -> VART .)
    STRING          reduce using rule 15 (ESTATUTO -> VART .)
    FLOAT           reduce using rule 15 (ESTATUTO -> VART .)
    RETURN          reduce using rule 15 (ESTATUTO -> VART .)
    END             reduce using rule 15 (ESTATUTO -> VART .)
    ELSE            reduce using rule 15 (ESTATUTO -> VART .)


state 52

    (18) BLOQUE -> ESTATUTO . BLOQUEP
    (19) BLOQUEP -> . BLOQUE
    (20) BLOQUEP -> . FINAL
    (18) BLOQUE -> . ESTATUTO BLOQUEP
    (1) FINAL -> .
    (11) ESTATUTO -> . ASIGNACION
    (12) ESTATUTO -> . CONDICION
    (13) ESTATUTO -> . CICLO
    (14) ESTATUTO -> . ACCION
    (15) ESTATUTO -> . VART
    (16) ESTATUTO -> . LLAMADA_FUNCION
    (17) ESTATUTO -> . IMPRIMIR
    (30) ASIGNACION -> . ID ASIGNACIONP
    (48) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (44) CICLO -> . WHILEF
    (45) CICLO -> . FORZ
    (84) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (6) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (7) VART -> . DATA_TIPOS ID VARZ
    (8) VART -> . ARR ID
    (38) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (71) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (46) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (47) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (21) DATA_TIPOS -> . INT
    (22) DATA_TIPOS -> . BOOLEAN
    (23) DATA_TIPOS -> . CHAR
    (24) DATA_TIPOS -> . STRING
    (25) DATA_TIPOS -> . FLOAT
    (35) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    RETURN          reduce using rule 1 (FINAL -> .)
    END             reduce using rule 1 (FINAL -> .)
    ELSE            reduce using rule 1 (FINAL -> .)
    ID              shift and go to state 64
    IF              shift and go to state 65
    DRAW            shift and go to state 9
    PRINT           shift and go to state 55
    WHILE           shift and go to state 54
    FOR             shift and go to state 58
    INT             shift and go to state 13
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 14
    STRING          shift and go to state 11
    FLOAT           shift and go to state 10

    VART                           shift and go to state 51
    CICLO                          shift and go to state 53
    FINAL                          shift and go to state 91
    LLAMADA_FUNCION                shift and go to state 56
    ASIGNACION                     shift and go to state 57
    ESTATUTO                       shift and go to state 52
    BLOQUEP                        shift and go to state 92
    WHILEF                         shift and go to state 59
    DATA_TIPOS                     shift and go to state 12
    FORZ                           shift and go to state 60
    IMPRIMIR                       shift and go to state 62
    BLOQUE                         shift and go to state 93
    ARR                            shift and go to state 15
    ACCION                         shift and go to state 66
    CONDICION                      shift and go to state 61

state 53

    (13) ESTATUTO -> CICLO .

    ID              reduce using rule 13 (ESTATUTO -> CICLO .)
    IF              reduce using rule 13 (ESTATUTO -> CICLO .)
    DRAW            reduce using rule 13 (ESTATUTO -> CICLO .)
    PRINT           reduce using rule 13 (ESTATUTO -> CICLO .)
    WHILE           reduce using rule 13 (ESTATUTO -> CICLO .)
    FOR             reduce using rule 13 (ESTATUTO -> CICLO .)
    INT             reduce using rule 13 (ESTATUTO -> CICLO .)
    BOOLEAN         reduce using rule 13 (ESTATUTO -> CICLO .)
    CHAR            reduce using rule 13 (ESTATUTO -> CICLO .)
    STRING          reduce using rule 13 (ESTATUTO -> CICLO .)
    FLOAT           reduce using rule 13 (ESTATUTO -> CICLO .)
    RETURN          reduce using rule 13 (ESTATUTO -> CICLO .)
    END             reduce using rule 13 (ESTATUTO -> CICLO .)
    ELSE            reduce using rule 13 (ESTATUTO -> CICLO .)


state 54

    (46) WHILEF -> WHILE . LPAR EXPRE RPAR BLOQUE END

    LPAR            shift and go to state 94


state 55

    (71) IMPRIMIR -> PRINT . LBRA IMPRIMIRZ RBRA

    LBRA            shift and go to state 95


state 56

    (16) ESTATUTO -> LLAMADA_FUNCION .

    ID              reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    IF              reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    DRAW            reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    PRINT           reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    WHILE           reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    FOR             reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    INT             reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    BOOLEAN         reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    CHAR            reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    STRING          reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    FLOAT           reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    RETURN          reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    END             reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)
    ELSE            reduce using rule 16 (ESTATUTO -> LLAMADA_FUNCION .)


state 57

    (11) ESTATUTO -> ASIGNACION .

    ID              reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    IF              reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    DRAW            reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    PRINT           reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    WHILE           reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    FOR             reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    INT             reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    BOOLEAN         reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    CHAR            reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    STRING          reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    FLOAT           reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    RETURN          reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    END             reduce using rule 11 (ESTATUTO -> ASIGNACION .)
    ELSE            reduce using rule 11 (ESTATUTO -> ASIGNACION .)


state 58

    (47) FORZ -> FOR . LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END

    LPAR            shift and go to state 96


state 59

    (44) CICLO -> WHILEF .

    ID              reduce using rule 44 (CICLO -> WHILEF .)
    IF              reduce using rule 44 (CICLO -> WHILEF .)
    DRAW            reduce using rule 44 (CICLO -> WHILEF .)
    PRINT           reduce using rule 44 (CICLO -> WHILEF .)
    WHILE           reduce using rule 44 (CICLO -> WHILEF .)
    FOR             reduce using rule 44 (CICLO -> WHILEF .)
    INT             reduce using rule 44 (CICLO -> WHILEF .)
    BOOLEAN         reduce using rule 44 (CICLO -> WHILEF .)
    CHAR            reduce using rule 44 (CICLO -> WHILEF .)
    STRING          reduce using rule 44 (CICLO -> WHILEF .)
    FLOAT           reduce using rule 44 (CICLO -> WHILEF .)
    ELSE            reduce using rule 44 (CICLO -> WHILEF .)
    END             reduce using rule 44 (CICLO -> WHILEF .)
    RETURN          reduce using rule 44 (CICLO -> WHILEF .)


state 60

    (45) CICLO -> FORZ .

    ID              reduce using rule 45 (CICLO -> FORZ .)
    IF              reduce using rule 45 (CICLO -> FORZ .)
    DRAW            reduce using rule 45 (CICLO -> FORZ .)
    PRINT           reduce using rule 45 (CICLO -> FORZ .)
    WHILE           reduce using rule 45 (CICLO -> FORZ .)
    FOR             reduce using rule 45 (CICLO -> FORZ .)
    INT             reduce using rule 45 (CICLO -> FORZ .)
    BOOLEAN         reduce using rule 45 (CICLO -> FORZ .)
    CHAR            reduce using rule 45 (CICLO -> FORZ .)
    STRING          reduce using rule 45 (CICLO -> FORZ .)
    FLOAT           reduce using rule 45 (CICLO -> FORZ .)
    ELSE            reduce using rule 45 (CICLO -> FORZ .)
    END             reduce using rule 45 (CICLO -> FORZ .)
    RETURN          reduce using rule 45 (CICLO -> FORZ .)


state 61

    (12) ESTATUTO -> CONDICION .

    ID              reduce using rule 12 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 12 (ESTATUTO -> CONDICION .)
    DRAW            reduce using rule 12 (ESTATUTO -> CONDICION .)
    PRINT           reduce using rule 12 (ESTATUTO -> CONDICION .)
    WHILE           reduce using rule 12 (ESTATUTO -> CONDICION .)
    FOR             reduce using rule 12 (ESTATUTO -> CONDICION .)
    INT             reduce using rule 12 (ESTATUTO -> CONDICION .)
    BOOLEAN         reduce using rule 12 (ESTATUTO -> CONDICION .)
    CHAR            reduce using rule 12 (ESTATUTO -> CONDICION .)
    STRING          reduce using rule 12 (ESTATUTO -> CONDICION .)
    FLOAT           reduce using rule 12 (ESTATUTO -> CONDICION .)
    RETURN          reduce using rule 12 (ESTATUTO -> CONDICION .)
    ELSE            reduce using rule 12 (ESTATUTO -> CONDICION .)
    END             reduce using rule 12 (ESTATUTO -> CONDICION .)


state 62

    (17) ESTATUTO -> IMPRIMIR .

    ID              reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    IF              reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    DRAW            reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    PRINT           reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    WHILE           reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    FOR             reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    INT             reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    BOOLEAN         reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    CHAR            reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    STRING          reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    FLOAT           reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    RETURN          reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    END             reduce using rule 17 (ESTATUTO -> IMPRIMIR .)
    ELSE            reduce using rule 17 (ESTATUTO -> IMPRIMIR .)


state 63

    (83) FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN BLOQUE . RETURN EXP END

    RETURN          shift and go to state 97


state 64

    (30) ASIGNACION -> ID . ASIGNACIONP
    (84) ACCION -> ID . POINT DIBUJA LPAR VAR_CTE RPAR
    (38) LLAMADA_FUNCION -> ID . LPAR LLAMADA_FUNCIONP RPAR
    (31) ASIGNACIONP -> . EQUAL EXPRE
    (32) ASIGNACIONP -> . LBRA ICTE ASIGNACIONZ RBRA

    POINT           shift and go to state 100
    LPAR            shift and go to state 98
    EQUAL           shift and go to state 101
    LBRA            shift and go to state 99

    ASIGNACIONP                    shift and go to state 102

state 65

    (48) CONDICION -> IF . LPAR EXPRE RPAR BLOQUE CONDICIONP END

    LPAR            shift and go to state 103


state 66

    (14) ESTATUTO -> ACCION .

    ID              reduce using rule 14 (ESTATUTO -> ACCION .)
    IF              reduce using rule 14 (ESTATUTO -> ACCION .)
    DRAW            reduce using rule 14 (ESTATUTO -> ACCION .)
    PRINT           reduce using rule 14 (ESTATUTO -> ACCION .)
    WHILE           reduce using rule 14 (ESTATUTO -> ACCION .)
    FOR             reduce using rule 14 (ESTATUTO -> ACCION .)
    INT             reduce using rule 14 (ESTATUTO -> ACCION .)
    BOOLEAN         reduce using rule 14 (ESTATUTO -> ACCION .)
    CHAR            reduce using rule 14 (ESTATUTO -> ACCION .)
    STRING          reduce using rule 14 (ESTATUTO -> ACCION .)
    FLOAT           reduce using rule 14 (ESTATUTO -> ACCION .)
    RETURN          reduce using rule 14 (ESTATUTO -> ACCION .)
    END             reduce using rule 14 (ESTATUTO -> ACCION .)
    ELSE            reduce using rule 14 (ESTATUTO -> ACCION .)


state 67

    (6) VART -> DRAW ID EQUAL NEW DRAWI . LPAR RPAR

    LPAR            shift and go to state 104


state 68

    (36) ARRZ -> COMMA ICTE .

    RBRA            reduce using rule 36 (ARRZ -> COMMA ICTE .)


state 69

    (35) ARR -> DATA_TIPOS LBRA ICTE ARRZ RBRA .

    ID              reduce using rule 35 (ARR -> DATA_TIPOS LBRA ICTE ARRZ RBRA .)


state 70

    (74) FAC -> LPAR EXPRE . RPAR

    RPAR            shift and go to state 105


state 71

    (59) EXPRE -> EXP . EXPREZ
    (60) EXPREZ -> . RELOP EXP
    (61) EXPREZ -> . FINAL
    (53) RELOP -> . LESSTH
    (54) RELOP -> . GREATERTH
    (55) RELOP -> . SEQUAL
    (56) RELOP -> . NOTEQ
    (57) RELOP -> . LESSEQTH
    (58) RELOP -> . GREATEREQTH
    (1) FINAL -> .

    LESSTH          shift and go to state 112
    GREATERTH       shift and go to state 111
    SEQUAL          shift and go to state 108
    NOTEQ           shift and go to state 109
    LESSEQTH        shift and go to state 106
    GREATEREQTH     shift and go to state 110
    RPAR            reduce using rule 1 (FINAL -> .)
    RBRA            reduce using rule 1 (FINAL -> .)
    COMMA           reduce using rule 1 (FINAL -> .)
    ID              reduce using rule 1 (FINAL -> .)
    IF              reduce using rule 1 (FINAL -> .)
    DRAW            reduce using rule 1 (FINAL -> .)
    PRINT           reduce using rule 1 (FINAL -> .)
    WHILE           reduce using rule 1 (FINAL -> .)
    FOR             reduce using rule 1 (FINAL -> .)
    INT             reduce using rule 1 (FINAL -> .)
    BOOLEAN         reduce using rule 1 (FINAL -> .)
    CHAR            reduce using rule 1 (FINAL -> .)
    STRING          reduce using rule 1 (FINAL -> .)
    FLOAT           reduce using rule 1 (FINAL -> .)
    RETURN          reduce using rule 1 (FINAL -> .)
    END             reduce using rule 1 (FINAL -> .)
    ELSE            reduce using rule 1 (FINAL -> .)

    EXPREZ                         shift and go to state 113
    RELOP                          shift and go to state 107
    FINAL                          shift and go to state 114

state 72

    (63) EXP_W_SIGN -> ASOP . EXP
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 115
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45
    FINAL                          shift and go to state 38

state 73

    (62) EXP -> TERMINO EXP_W_SIGN .

    COMMA           reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    RBRA            reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    LESSTH          reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    GREATERTH       reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    SEQUAL          reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    NOTEQ           reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    LESSEQTH        reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    GREATEREQTH     reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    RPAR            reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    DEFINE          reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    ID              reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    IF              reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    DRAW            reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    PRINT           reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    WHILE           reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    FOR             reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    INT             reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    BOOLEAN         reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    CHAR            reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    STRING          reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    FLOAT           reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    RETURN          reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    END             reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)
    ELSE            reduce using rule 62 (EXP -> TERMINO EXP_W_SIGN .)


state 74

    (64) EXP_W_SIGN -> FINAL .

    DEFINE          reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    ID              reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    IF              reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    DRAW            reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    PRINT           reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    WHILE           reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    FOR             reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    INT             reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    BOOLEAN         reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    CHAR            reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    STRING          reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    FLOAT           reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    RETURN          reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    END             reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    ELSE            reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    LESSTH          reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    GREATERTH       reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    SEQUAL          reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    NOTEQ           reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    LESSEQTH        reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    GREATEREQTH     reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    RPAR            reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    COMMA           reduce using rule 64 (EXP_W_SIGN -> FINAL .)
    RBRA            reduce using rule 64 (EXP_W_SIGN -> FINAL .)


state 75

    (70) VAR_CTE -> LLAMADA_FUNCION .

    MULT            reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    DIVI            reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    PLUS            reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    MINUS           reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    DEFINE          reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    ID              reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    IF              reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    DRAW            reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    PRINT           reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    WHILE           reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    FOR             reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    INT             reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    BOOLEAN         reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    CHAR            reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    STRING          reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    FLOAT           reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    RETURN          reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    END             reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    ELSE            reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    LESSTH          reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    GREATERTH       reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    SEQUAL          reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    NOTEQ           reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    LESSEQTH        reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    GREATEREQTH     reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    RPAR            reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    COMMA           reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)
    RBRA            reduce using rule 70 (VAR_CTE -> LLAMADA_FUNCION .)


state 76

    (75) FAC -> FACS VAR_CTE .

    MULT            reduce using rule 75 (FAC -> FACS VAR_CTE .)
    DIVI            reduce using rule 75 (FAC -> FACS VAR_CTE .)
    PLUS            reduce using rule 75 (FAC -> FACS VAR_CTE .)
    MINUS           reduce using rule 75 (FAC -> FACS VAR_CTE .)
    END             reduce using rule 75 (FAC -> FACS VAR_CTE .)
    LESSTH          reduce using rule 75 (FAC -> FACS VAR_CTE .)
    GREATERTH       reduce using rule 75 (FAC -> FACS VAR_CTE .)
    SEQUAL          reduce using rule 75 (FAC -> FACS VAR_CTE .)
    NOTEQ           reduce using rule 75 (FAC -> FACS VAR_CTE .)
    LESSEQTH        reduce using rule 75 (FAC -> FACS VAR_CTE .)
    GREATEREQTH     reduce using rule 75 (FAC -> FACS VAR_CTE .)
    RPAR            reduce using rule 75 (FAC -> FACS VAR_CTE .)
    RBRA            reduce using rule 75 (FAC -> FACS VAR_CTE .)
    DEFINE          reduce using rule 75 (FAC -> FACS VAR_CTE .)
    ID              reduce using rule 75 (FAC -> FACS VAR_CTE .)
    IF              reduce using rule 75 (FAC -> FACS VAR_CTE .)
    DRAW            reduce using rule 75 (FAC -> FACS VAR_CTE .)
    PRINT           reduce using rule 75 (FAC -> FACS VAR_CTE .)
    WHILE           reduce using rule 75 (FAC -> FACS VAR_CTE .)
    FOR             reduce using rule 75 (FAC -> FACS VAR_CTE .)
    INT             reduce using rule 75 (FAC -> FACS VAR_CTE .)
    BOOLEAN         reduce using rule 75 (FAC -> FACS VAR_CTE .)
    CHAR            reduce using rule 75 (FAC -> FACS VAR_CTE .)
    STRING          reduce using rule 75 (FAC -> FACS VAR_CTE .)
    FLOAT           reduce using rule 75 (FAC -> FACS VAR_CTE .)
    RETURN          reduce using rule 75 (FAC -> FACS VAR_CTE .)
    ELSE            reduce using rule 75 (FAC -> FACS VAR_CTE .)
    COMMA           reduce using rule 75 (FAC -> FACS VAR_CTE .)


state 77

    (69) VAR_CTE -> FCTE .

    MULT            reduce using rule 69 (VAR_CTE -> FCTE .)
    DIVI            reduce using rule 69 (VAR_CTE -> FCTE .)
    PLUS            reduce using rule 69 (VAR_CTE -> FCTE .)
    MINUS           reduce using rule 69 (VAR_CTE -> FCTE .)
    DEFINE          reduce using rule 69 (VAR_CTE -> FCTE .)
    ID              reduce using rule 69 (VAR_CTE -> FCTE .)
    IF              reduce using rule 69 (VAR_CTE -> FCTE .)
    DRAW            reduce using rule 69 (VAR_CTE -> FCTE .)
    PRINT           reduce using rule 69 (VAR_CTE -> FCTE .)
    WHILE           reduce using rule 69 (VAR_CTE -> FCTE .)
    FOR             reduce using rule 69 (VAR_CTE -> FCTE .)
    INT             reduce using rule 69 (VAR_CTE -> FCTE .)
    BOOLEAN         reduce using rule 69 (VAR_CTE -> FCTE .)
    CHAR            reduce using rule 69 (VAR_CTE -> FCTE .)
    STRING          reduce using rule 69 (VAR_CTE -> FCTE .)
    FLOAT           reduce using rule 69 (VAR_CTE -> FCTE .)
    RETURN          reduce using rule 69 (VAR_CTE -> FCTE .)
    END             reduce using rule 69 (VAR_CTE -> FCTE .)
    ELSE            reduce using rule 69 (VAR_CTE -> FCTE .)
    LESSTH          reduce using rule 69 (VAR_CTE -> FCTE .)
    GREATERTH       reduce using rule 69 (VAR_CTE -> FCTE .)
    SEQUAL          reduce using rule 69 (VAR_CTE -> FCTE .)
    NOTEQ           reduce using rule 69 (VAR_CTE -> FCTE .)
    LESSEQTH        reduce using rule 69 (VAR_CTE -> FCTE .)
    GREATEREQTH     reduce using rule 69 (VAR_CTE -> FCTE .)
    RPAR            reduce using rule 69 (VAR_CTE -> FCTE .)
    COMMA           reduce using rule 69 (VAR_CTE -> FCTE .)
    RBRA            reduce using rule 69 (VAR_CTE -> FCTE .)


state 78

    (68) VAR_CTE -> ICTE .

    MULT            reduce using rule 68 (VAR_CTE -> ICTE .)
    DIVI            reduce using rule 68 (VAR_CTE -> ICTE .)
    PLUS            reduce using rule 68 (VAR_CTE -> ICTE .)
    MINUS           reduce using rule 68 (VAR_CTE -> ICTE .)
    DEFINE          reduce using rule 68 (VAR_CTE -> ICTE .)
    ID              reduce using rule 68 (VAR_CTE -> ICTE .)
    IF              reduce using rule 68 (VAR_CTE -> ICTE .)
    DRAW            reduce using rule 68 (VAR_CTE -> ICTE .)
    PRINT           reduce using rule 68 (VAR_CTE -> ICTE .)
    WHILE           reduce using rule 68 (VAR_CTE -> ICTE .)
    FOR             reduce using rule 68 (VAR_CTE -> ICTE .)
    INT             reduce using rule 68 (VAR_CTE -> ICTE .)
    BOOLEAN         reduce using rule 68 (VAR_CTE -> ICTE .)
    CHAR            reduce using rule 68 (VAR_CTE -> ICTE .)
    STRING          reduce using rule 68 (VAR_CTE -> ICTE .)
    FLOAT           reduce using rule 68 (VAR_CTE -> ICTE .)
    RETURN          reduce using rule 68 (VAR_CTE -> ICTE .)
    END             reduce using rule 68 (VAR_CTE -> ICTE .)
    ELSE            reduce using rule 68 (VAR_CTE -> ICTE .)
    LESSTH          reduce using rule 68 (VAR_CTE -> ICTE .)
    GREATERTH       reduce using rule 68 (VAR_CTE -> ICTE .)
    SEQUAL          reduce using rule 68 (VAR_CTE -> ICTE .)
    NOTEQ           reduce using rule 68 (VAR_CTE -> ICTE .)
    LESSEQTH        reduce using rule 68 (VAR_CTE -> ICTE .)
    GREATEREQTH     reduce using rule 68 (VAR_CTE -> ICTE .)
    RPAR            reduce using rule 68 (VAR_CTE -> ICTE .)
    COMMA           reduce using rule 68 (VAR_CTE -> ICTE .)
    RBRA            reduce using rule 68 (VAR_CTE -> ICTE .)


state 79

    (38) LLAMADA_FUNCION -> ID . LPAR LLAMADA_FUNCIONP RPAR

    LPAR            shift and go to state 98


state 80

    (29) MDOP -> DIVI .

    LPAR            reduce using rule 29 (MDOP -> DIVI .)
    ID              reduce using rule 29 (MDOP -> DIVI .)
    PLUS            reduce using rule 29 (MDOP -> DIVI .)
    MINUS           reduce using rule 29 (MDOP -> DIVI .)
    ICTE            reduce using rule 29 (MDOP -> DIVI .)
    FCTE            reduce using rule 29 (MDOP -> DIVI .)


state 81

    (66) TERMINO_W_SIGN -> MDOP . TERMINO
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 116
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45
    FINAL                          shift and go to state 38

state 82

    (65) TERMINO -> FAC TERMINO_W_SIGN .

    PLUS            reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    MINUS           reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    LESSTH          reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    GREATERTH       reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    SEQUAL          reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    NOTEQ           reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    LESSEQTH        reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    GREATEREQTH     reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    RPAR            reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    END             reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    RBRA            reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    COMMA           reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    ID              reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    IF              reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    DRAW            reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    PRINT           reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    WHILE           reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    FOR             reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    INT             reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    BOOLEAN         reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    CHAR            reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    STRING          reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    FLOAT           reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    RETURN          reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    ELSE            reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)
    DEFINE          reduce using rule 65 (TERMINO -> FAC TERMINO_W_SIGN .)


state 83

    (67) TERMINO_W_SIGN -> FINAL .

    PLUS            reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    MINUS           reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    DEFINE          reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    ID              reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    IF              reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    DRAW            reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    PRINT           reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    WHILE           reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    FOR             reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    INT             reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    BOOLEAN         reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    CHAR            reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    STRING          reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    FLOAT           reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    RETURN          reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    END             reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    ELSE            reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    LESSTH          reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    GREATERTH       reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    SEQUAL          reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    NOTEQ           reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    LESSEQTH        reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    GREATEREQTH     reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    RPAR            reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    COMMA           reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)
    RBRA            reduce using rule 67 (TERMINO_W_SIGN -> FINAL .)


state 84

    (28) MDOP -> MULT .

    LPAR            reduce using rule 28 (MDOP -> MULT .)
    ID              reduce using rule 28 (MDOP -> MULT .)
    PLUS            reduce using rule 28 (MDOP -> MULT .)
    MINUS           reduce using rule 28 (MDOP -> MULT .)
    ICTE            reduce using rule 28 (MDOP -> MULT .)
    FCTE            reduce using rule 28 (MDOP -> MULT .)


state 85

    (78) FACT -> FINAL .

    MULT            reduce using rule 78 (FACT -> FINAL .)
    DIVI            reduce using rule 78 (FACT -> FINAL .)
    PLUS            reduce using rule 78 (FACT -> FINAL .)
    MINUS           reduce using rule 78 (FACT -> FINAL .)
    DEFINE          reduce using rule 78 (FACT -> FINAL .)
    ID              reduce using rule 78 (FACT -> FINAL .)
    IF              reduce using rule 78 (FACT -> FINAL .)
    DRAW            reduce using rule 78 (FACT -> FINAL .)
    PRINT           reduce using rule 78 (FACT -> FINAL .)
    WHILE           reduce using rule 78 (FACT -> FINAL .)
    FOR             reduce using rule 78 (FACT -> FINAL .)
    INT             reduce using rule 78 (FACT -> FINAL .)
    BOOLEAN         reduce using rule 78 (FACT -> FINAL .)
    CHAR            reduce using rule 78 (FACT -> FINAL .)
    STRING          reduce using rule 78 (FACT -> FINAL .)
    FLOAT           reduce using rule 78 (FACT -> FINAL .)
    RETURN          reduce using rule 78 (FACT -> FINAL .)
    END             reduce using rule 78 (FACT -> FINAL .)
    ELSE            reduce using rule 78 (FACT -> FINAL .)
    LESSTH          reduce using rule 78 (FACT -> FINAL .)
    GREATERTH       reduce using rule 78 (FACT -> FINAL .)
    SEQUAL          reduce using rule 78 (FACT -> FINAL .)
    NOTEQ           reduce using rule 78 (FACT -> FINAL .)
    LESSEQTH        reduce using rule 78 (FACT -> FINAL .)
    GREATEREQTH     reduce using rule 78 (FACT -> FINAL .)
    RPAR            reduce using rule 78 (FACT -> FINAL .)
    COMMA           reduce using rule 78 (FACT -> FINAL .)
    RBRA            reduce using rule 78 (FACT -> FINAL .)


state 86

    (77) FACT -> LBRA . EXP FACZ RBRA
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 117
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45
    FINAL                          shift and go to state 38

state 87

    (76) FAC -> ID FACT .

    MULT            reduce using rule 76 (FAC -> ID FACT .)
    DIVI            reduce using rule 76 (FAC -> ID FACT .)
    PLUS            reduce using rule 76 (FAC -> ID FACT .)
    MINUS           reduce using rule 76 (FAC -> ID FACT .)
    END             reduce using rule 76 (FAC -> ID FACT .)
    LESSTH          reduce using rule 76 (FAC -> ID FACT .)
    GREATERTH       reduce using rule 76 (FAC -> ID FACT .)
    SEQUAL          reduce using rule 76 (FAC -> ID FACT .)
    NOTEQ           reduce using rule 76 (FAC -> ID FACT .)
    LESSEQTH        reduce using rule 76 (FAC -> ID FACT .)
    GREATEREQTH     reduce using rule 76 (FAC -> ID FACT .)
    RPAR            reduce using rule 76 (FAC -> ID FACT .)
    RBRA            reduce using rule 76 (FAC -> ID FACT .)
    DEFINE          reduce using rule 76 (FAC -> ID FACT .)
    ID              reduce using rule 76 (FAC -> ID FACT .)
    IF              reduce using rule 76 (FAC -> ID FACT .)
    DRAW            reduce using rule 76 (FAC -> ID FACT .)
    PRINT           reduce using rule 76 (FAC -> ID FACT .)
    WHILE           reduce using rule 76 (FAC -> ID FACT .)
    FOR             reduce using rule 76 (FAC -> ID FACT .)
    INT             reduce using rule 76 (FAC -> ID FACT .)
    BOOLEAN         reduce using rule 76 (FAC -> ID FACT .)
    CHAR            reduce using rule 76 (FAC -> ID FACT .)
    STRING          reduce using rule 76 (FAC -> ID FACT .)
    FLOAT           reduce using rule 76 (FAC -> ID FACT .)
    RETURN          reduce using rule 76 (FAC -> ID FACT .)
    ELSE            reduce using rule 76 (FAC -> ID FACT .)
    COMMA           reduce using rule 76 (FAC -> ID FACT .)


state 88

    (43) PRINCIPAL -> DEFINE VOID MAIN LPAR RPAR . BLOQUE END
    (18) BLOQUE -> . ESTATUTO BLOQUEP
    (11) ESTATUTO -> . ASIGNACION
    (12) ESTATUTO -> . CONDICION
    (13) ESTATUTO -> . CICLO
    (14) ESTATUTO -> . ACCION
    (15) ESTATUTO -> . VART
    (16) ESTATUTO -> . LLAMADA_FUNCION
    (17) ESTATUTO -> . IMPRIMIR
    (30) ASIGNACION -> . ID ASIGNACIONP
    (48) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (44) CICLO -> . WHILEF
    (45) CICLO -> . FORZ
    (84) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (6) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (7) VART -> . DATA_TIPOS ID VARZ
    (8) VART -> . ARR ID
    (38) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (71) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (46) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (47) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (21) DATA_TIPOS -> . INT
    (22) DATA_TIPOS -> . BOOLEAN
    (23) DATA_TIPOS -> . CHAR
    (24) DATA_TIPOS -> . STRING
    (25) DATA_TIPOS -> . FLOAT
    (35) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    ID              shift and go to state 64
    IF              shift and go to state 65
    DRAW            shift and go to state 9
    PRINT           shift and go to state 55
    WHILE           shift and go to state 54
    FOR             shift and go to state 58
    INT             shift and go to state 13
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 14
    STRING          shift and go to state 11
    FLOAT           shift and go to state 10

    VART                           shift and go to state 51
    CICLO                          shift and go to state 53
    LLAMADA_FUNCION                shift and go to state 56
    ASIGNACION                     shift and go to state 57
    ESTATUTO                       shift and go to state 52
    WHILEF                         shift and go to state 59
    DATA_TIPOS                     shift and go to state 12
    FORZ                           shift and go to state 60
    IMPRIMIR                       shift and go to state 62
    BLOQUE                         shift and go to state 118
    ARR                            shift and go to state 15
    ACCION                         shift and go to state 66
    CONDICION                      shift and go to state 61

state 89

    (86) VAR_FUNP -> DATA_TIPOS ID . VAR_FUNZ
    (87) VAR_FUNZ -> . COMMA VAR_FUNP
    (88) VAR_FUNZ -> . FINAL
    (1) FINAL -> .

    COMMA           shift and go to state 120
    RPAR            reduce using rule 1 (FINAL -> .)

    FINAL                          shift and go to state 121
    VAR_FUNZ                       shift and go to state 119

state 90

    (85) VAR_FUN -> LPAR VAR_FUNP RPAR .

    ID              reduce using rule 85 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    IF              reduce using rule 85 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    DRAW            reduce using rule 85 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    PRINT           reduce using rule 85 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    WHILE           reduce using rule 85 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    FOR             reduce using rule 85 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    INT             reduce using rule 85 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    BOOLEAN         reduce using rule 85 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    CHAR            reduce using rule 85 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    STRING          reduce using rule 85 (VAR_FUN -> LPAR VAR_FUNP RPAR .)
    FLOAT           reduce using rule 85 (VAR_FUN -> LPAR VAR_FUNP RPAR .)


state 91

    (20) BLOQUEP -> FINAL .

    RETURN          reduce using rule 20 (BLOQUEP -> FINAL .)
    END             reduce using rule 20 (BLOQUEP -> FINAL .)
    ELSE            reduce using rule 20 (BLOQUEP -> FINAL .)


state 92

    (18) BLOQUE -> ESTATUTO BLOQUEP .

    END             reduce using rule 18 (BLOQUE -> ESTATUTO BLOQUEP .)
    ELSE            reduce using rule 18 (BLOQUE -> ESTATUTO BLOQUEP .)
    RETURN          reduce using rule 18 (BLOQUE -> ESTATUTO BLOQUEP .)


state 93

    (19) BLOQUEP -> BLOQUE .

    RETURN          reduce using rule 19 (BLOQUEP -> BLOQUE .)
    END             reduce using rule 19 (BLOQUEP -> BLOQUE .)
    ELSE            reduce using rule 19 (BLOQUEP -> BLOQUE .)


state 94

    (46) WHILEF -> WHILE LPAR . EXPRE RPAR BLOQUE END
    (59) EXPRE -> . EXP EXPREZ
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    FINAL                          shift and go to state 38
    EXPRE                          shift and go to state 122
    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 71
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45

state 95

    (71) IMPRIMIR -> PRINT LBRA . IMPRIMIRZ RBRA
    (72) IMPRIMIRZ -> . EXPRE
    (73) IMPRIMIRZ -> . SCTE
    (59) EXPRE -> . EXP EXPREZ
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    SCTE            shift and go to state 125
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    EXPRE                          shift and go to state 123
    ASOP                           shift and go to state 40
    IMPRIMIRZ                      shift and go to state 124
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 71
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45
    FINAL                          shift and go to state 38

state 96

    (47) FORZ -> FOR LPAR . ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END

    ICTE            shift and go to state 126


state 97

    (83) FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN BLOQUE RETURN . EXP END
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    FINAL                          shift and go to state 38
    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 127
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45

state 98

    (38) LLAMADA_FUNCION -> ID LPAR . LLAMADA_FUNCIONP RPAR
    (39) LLAMADA_FUNCIONP -> . EXPRE LLAMADA_FUNCIONZ
    (40) LLAMADA_FUNCIONP -> . FINAL
    (59) EXPRE -> . EXP EXPREZ
    (1) FINAL -> .
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS

  ! shift/reduce conflict for ID resolved as shift
    RPAR            reduce using rule 1 (FINAL -> .)
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    EXPRE                          shift and go to state 129
    LLAMADA_FUNCIONP               shift and go to state 130
    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 71
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45
    FINAL                          shift and go to state 128

state 99

    (32) ASIGNACIONP -> LBRA . ICTE ASIGNACIONZ RBRA

    ICTE            shift and go to state 131


state 100

    (84) ACCION -> ID POINT . DIBUJA LPAR VAR_CTE RPAR
    (89) DIBUJA -> . DEFINIRPOSICION
    (90) DIBUJA -> . DEFINIRCOLOR
    (91) DIBUJA -> . DERECHO
    (92) DIBUJA -> . REVERSA
    (93) DIBUJA -> . IZQUIERDA
    (94) DIBUJA -> . DERECHA
    (95) DIBUJA -> . VELOCIDAD
    (96) DIBUJA -> . BORRAR
    (97) DIBUJA -> . MOSTRAR
    (98) DIBUJA -> . OCULTAR
    (99) DIBUJA -> . CIRCULO
    (100) DIBUJA -> . DEFINIRX
    (101) DIBUJA -> . DEFINIRY
    (102) DIBUJA -> . ARCO
    (103) DIBUJA -> . GROSOR

    DEFINIRPOSICION shift and go to state 138
    DEFINIRCOLOR    shift and go to state 147
    DERECHO         shift and go to state 142
    REVERSA         shift and go to state 136
    IZQUIERDA       shift and go to state 140
    DERECHA         shift and go to state 132
    VELOCIDAD       shift and go to state 135
    BORRAR          shift and go to state 145
    MOSTRAR         shift and go to state 139
    OCULTAR         shift and go to state 137
    CIRCULO         shift and go to state 134
    DEFINIRX        shift and go to state 144
    DEFINIRY        shift and go to state 143
    ARCO            shift and go to state 133
    GROSOR          shift and go to state 146

    DIBUJA                         shift and go to state 141

state 101

    (31) ASIGNACIONP -> EQUAL . EXPRE
    (59) EXPRE -> . EXP EXPREZ
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    EXPRE                          shift and go to state 148
    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 71
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45
    FINAL                          shift and go to state 38

state 102

    (30) ASIGNACION -> ID ASIGNACIONP .

    ID              reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    IF              reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    DRAW            reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    PRINT           reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    WHILE           reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    FOR             reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    INT             reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    BOOLEAN         reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    CHAR            reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    STRING          reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    FLOAT           reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    END             reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    RETURN          reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)
    ELSE            reduce using rule 30 (ASIGNACION -> ID ASIGNACIONP .)


state 103

    (48) CONDICION -> IF LPAR . EXPRE RPAR BLOQUE CONDICIONP END
    (59) EXPRE -> . EXP EXPREZ
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    FINAL                          shift and go to state 38
    EXPRE                          shift and go to state 149
    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 71
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45

state 104

    (6) VART -> DRAW ID EQUAL NEW DRAWI LPAR . RPAR

    RPAR            shift and go to state 150


state 105

    (74) FAC -> LPAR EXPRE RPAR .

    MULT            reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    DIVI            reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    PLUS            reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    MINUS           reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    END             reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    LESSTH          reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    GREATERTH       reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    SEQUAL          reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    NOTEQ           reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    LESSEQTH        reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    GREATEREQTH     reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    RPAR            reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    RBRA            reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    DEFINE          reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    ID              reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    IF              reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    DRAW            reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    PRINT           reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    WHILE           reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    FOR             reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    INT             reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    BOOLEAN         reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    CHAR            reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    STRING          reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    FLOAT           reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    RETURN          reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    ELSE            reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)
    COMMA           reduce using rule 74 (FAC -> LPAR EXPRE RPAR .)


state 106

    (57) RELOP -> LESSEQTH .

    LPAR            reduce using rule 57 (RELOP -> LESSEQTH .)
    ID              reduce using rule 57 (RELOP -> LESSEQTH .)
    PLUS            reduce using rule 57 (RELOP -> LESSEQTH .)
    MINUS           reduce using rule 57 (RELOP -> LESSEQTH .)
    ICTE            reduce using rule 57 (RELOP -> LESSEQTH .)
    FCTE            reduce using rule 57 (RELOP -> LESSEQTH .)


state 107

    (60) EXPREZ -> RELOP . EXP
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 151
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45
    FINAL                          shift and go to state 38

state 108

    (55) RELOP -> SEQUAL .

    LPAR            reduce using rule 55 (RELOP -> SEQUAL .)
    ID              reduce using rule 55 (RELOP -> SEQUAL .)
    PLUS            reduce using rule 55 (RELOP -> SEQUAL .)
    MINUS           reduce using rule 55 (RELOP -> SEQUAL .)
    ICTE            reduce using rule 55 (RELOP -> SEQUAL .)
    FCTE            reduce using rule 55 (RELOP -> SEQUAL .)


state 109

    (56) RELOP -> NOTEQ .

    LPAR            reduce using rule 56 (RELOP -> NOTEQ .)
    ID              reduce using rule 56 (RELOP -> NOTEQ .)
    PLUS            reduce using rule 56 (RELOP -> NOTEQ .)
    MINUS           reduce using rule 56 (RELOP -> NOTEQ .)
    ICTE            reduce using rule 56 (RELOP -> NOTEQ .)
    FCTE            reduce using rule 56 (RELOP -> NOTEQ .)


state 110

    (58) RELOP -> GREATEREQTH .

    LPAR            reduce using rule 58 (RELOP -> GREATEREQTH .)
    ID              reduce using rule 58 (RELOP -> GREATEREQTH .)
    PLUS            reduce using rule 58 (RELOP -> GREATEREQTH .)
    MINUS           reduce using rule 58 (RELOP -> GREATEREQTH .)
    ICTE            reduce using rule 58 (RELOP -> GREATEREQTH .)
    FCTE            reduce using rule 58 (RELOP -> GREATEREQTH .)


state 111

    (54) RELOP -> GREATERTH .

    LPAR            reduce using rule 54 (RELOP -> GREATERTH .)
    ID              reduce using rule 54 (RELOP -> GREATERTH .)
    PLUS            reduce using rule 54 (RELOP -> GREATERTH .)
    MINUS           reduce using rule 54 (RELOP -> GREATERTH .)
    ICTE            reduce using rule 54 (RELOP -> GREATERTH .)
    FCTE            reduce using rule 54 (RELOP -> GREATERTH .)


state 112

    (53) RELOP -> LESSTH .

    LPAR            reduce using rule 53 (RELOP -> LESSTH .)
    ID              reduce using rule 53 (RELOP -> LESSTH .)
    PLUS            reduce using rule 53 (RELOP -> LESSTH .)
    MINUS           reduce using rule 53 (RELOP -> LESSTH .)
    ICTE            reduce using rule 53 (RELOP -> LESSTH .)
    FCTE            reduce using rule 53 (RELOP -> LESSTH .)


state 113

    (59) EXPRE -> EXP EXPREZ .

    RBRA            reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    RPAR            reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    COMMA           reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    ID              reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    IF              reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    DRAW            reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    PRINT           reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    WHILE           reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    FOR             reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    INT             reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    BOOLEAN         reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    CHAR            reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    STRING          reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    FLOAT           reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    RETURN          reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    END             reduce using rule 59 (EXPRE -> EXP EXPREZ .)
    ELSE            reduce using rule 59 (EXPRE -> EXP EXPREZ .)


state 114

    (61) EXPREZ -> FINAL .

    RPAR            reduce using rule 61 (EXPREZ -> FINAL .)
    RBRA            reduce using rule 61 (EXPREZ -> FINAL .)
    COMMA           reduce using rule 61 (EXPREZ -> FINAL .)
    ID              reduce using rule 61 (EXPREZ -> FINAL .)
    IF              reduce using rule 61 (EXPREZ -> FINAL .)
    DRAW            reduce using rule 61 (EXPREZ -> FINAL .)
    PRINT           reduce using rule 61 (EXPREZ -> FINAL .)
    WHILE           reduce using rule 61 (EXPREZ -> FINAL .)
    FOR             reduce using rule 61 (EXPREZ -> FINAL .)
    INT             reduce using rule 61 (EXPREZ -> FINAL .)
    BOOLEAN         reduce using rule 61 (EXPREZ -> FINAL .)
    CHAR            reduce using rule 61 (EXPREZ -> FINAL .)
    STRING          reduce using rule 61 (EXPREZ -> FINAL .)
    FLOAT           reduce using rule 61 (EXPREZ -> FINAL .)
    RETURN          reduce using rule 61 (EXPREZ -> FINAL .)
    END             reduce using rule 61 (EXPREZ -> FINAL .)
    ELSE            reduce using rule 61 (EXPREZ -> FINAL .)


state 115

    (63) EXP_W_SIGN -> ASOP EXP .

    DEFINE          reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    ID              reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    IF              reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    DRAW            reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    PRINT           reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    WHILE           reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    FOR             reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    INT             reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    BOOLEAN         reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    CHAR            reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    STRING          reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    FLOAT           reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    RETURN          reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    END             reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    ELSE            reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    LESSTH          reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    GREATERTH       reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    SEQUAL          reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    NOTEQ           reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    LESSEQTH        reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    GREATEREQTH     reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    RPAR            reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    COMMA           reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)
    RBRA            reduce using rule 63 (EXP_W_SIGN -> ASOP EXP .)


state 116

    (66) TERMINO_W_SIGN -> MDOP TERMINO .

    PLUS            reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    MINUS           reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    DEFINE          reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    ID              reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    IF              reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    DRAW            reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    PRINT           reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    WHILE           reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    FOR             reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    INT             reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    BOOLEAN         reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    CHAR            reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    STRING          reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    FLOAT           reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    RETURN          reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    END             reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    ELSE            reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    LESSTH          reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    GREATERTH       reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    SEQUAL          reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    NOTEQ           reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    LESSEQTH        reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    GREATEREQTH     reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    RPAR            reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    COMMA           reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)
    RBRA            reduce using rule 66 (TERMINO_W_SIGN -> MDOP TERMINO .)


state 117

    (77) FACT -> LBRA EXP . FACZ RBRA
    (81) FACZ -> . COMMA EXP
    (82) FACZ -> . FINAL
    (1) FINAL -> .

    COMMA           shift and go to state 153
    RBRA            reduce using rule 1 (FINAL -> .)

    FACZ                           shift and go to state 152
    FINAL                          shift and go to state 154

state 118

    (43) PRINCIPAL -> DEFINE VOID MAIN LPAR RPAR BLOQUE . END

    END             shift and go to state 155


state 119

    (86) VAR_FUNP -> DATA_TIPOS ID VAR_FUNZ .

    RPAR            reduce using rule 86 (VAR_FUNP -> DATA_TIPOS ID VAR_FUNZ .)


state 120

    (87) VAR_FUNZ -> COMMA . VAR_FUNP
    (86) VAR_FUNP -> . DATA_TIPOS ID VAR_FUNZ
    (21) DATA_TIPOS -> . INT
    (22) DATA_TIPOS -> . BOOLEAN
    (23) DATA_TIPOS -> . CHAR
    (24) DATA_TIPOS -> . STRING
    (25) DATA_TIPOS -> . FLOAT

    INT             shift and go to state 13
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 14
    STRING          shift and go to state 11
    FLOAT           shift and go to state 10

    DATA_TIPOS                     shift and go to state 49
    VAR_FUNP                       shift and go to state 156

state 121

    (88) VAR_FUNZ -> FINAL .

    RPAR            reduce using rule 88 (VAR_FUNZ -> FINAL .)


state 122

    (46) WHILEF -> WHILE LPAR EXPRE . RPAR BLOQUE END

    RPAR            shift and go to state 157


state 123

    (72) IMPRIMIRZ -> EXPRE .

    RBRA            reduce using rule 72 (IMPRIMIRZ -> EXPRE .)


state 124

    (71) IMPRIMIR -> PRINT LBRA IMPRIMIRZ . RBRA

    RBRA            shift and go to state 158


state 125

    (73) IMPRIMIRZ -> SCTE .

    RBRA            reduce using rule 73 (IMPRIMIRZ -> SCTE .)


state 126

    (47) FORZ -> FOR LPAR ICTE . COMMA ICTE COMMA ICTE RPAR BLOQUE END

    COMMA           shift and go to state 159


state 127

    (83) FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN BLOQUE RETURN EXP . END

    END             shift and go to state 160


state 128

    (40) LLAMADA_FUNCIONP -> FINAL .
    (80) FACS -> FINAL .

    RPAR            reduce using rule 40 (LLAMADA_FUNCIONP -> FINAL .)
    ICTE            reduce using rule 80 (FACS -> FINAL .)
    FCTE            reduce using rule 80 (FACS -> FINAL .)
    ID              reduce using rule 80 (FACS -> FINAL .)


state 129

    (39) LLAMADA_FUNCIONP -> EXPRE . LLAMADA_FUNCIONZ
    (41) LLAMADA_FUNCIONZ -> . COMMA LLAMADA_FUNCIONP
    (42) LLAMADA_FUNCIONZ -> . FINAL
    (1) FINAL -> .

    COMMA           shift and go to state 163
    RPAR            reduce using rule 1 (FINAL -> .)

    FINAL                          shift and go to state 161
    LLAMADA_FUNCIONZ               shift and go to state 162

state 130

    (38) LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP . RPAR

    RPAR            shift and go to state 164


state 131

    (32) ASIGNACIONP -> LBRA ICTE . ASIGNACIONZ RBRA
    (33) ASIGNACIONZ -> . COMMA ICTE
    (34) ASIGNACIONZ -> . FINAL
    (1) FINAL -> .

    COMMA           shift and go to state 165
    RBRA            reduce using rule 1 (FINAL -> .)

    ASIGNACIONZ                    shift and go to state 166
    FINAL                          shift and go to state 167

state 132

    (94) DIBUJA -> DERECHA .

    LPAR            reduce using rule 94 (DIBUJA -> DERECHA .)


state 133

    (102) DIBUJA -> ARCO .

    LPAR            reduce using rule 102 (DIBUJA -> ARCO .)


state 134

    (99) DIBUJA -> CIRCULO .

    LPAR            reduce using rule 99 (DIBUJA -> CIRCULO .)


state 135

    (95) DIBUJA -> VELOCIDAD .

    LPAR            reduce using rule 95 (DIBUJA -> VELOCIDAD .)


state 136

    (92) DIBUJA -> REVERSA .

    LPAR            reduce using rule 92 (DIBUJA -> REVERSA .)


state 137

    (98) DIBUJA -> OCULTAR .

    LPAR            reduce using rule 98 (DIBUJA -> OCULTAR .)


state 138

    (89) DIBUJA -> DEFINIRPOSICION .

    LPAR            reduce using rule 89 (DIBUJA -> DEFINIRPOSICION .)


state 139

    (97) DIBUJA -> MOSTRAR .

    LPAR            reduce using rule 97 (DIBUJA -> MOSTRAR .)


state 140

    (93) DIBUJA -> IZQUIERDA .

    LPAR            reduce using rule 93 (DIBUJA -> IZQUIERDA .)


state 141

    (84) ACCION -> ID POINT DIBUJA . LPAR VAR_CTE RPAR

    LPAR            shift and go to state 168


state 142

    (91) DIBUJA -> DERECHO .

    LPAR            reduce using rule 91 (DIBUJA -> DERECHO .)


state 143

    (101) DIBUJA -> DEFINIRY .

    LPAR            reduce using rule 101 (DIBUJA -> DEFINIRY .)


state 144

    (100) DIBUJA -> DEFINIRX .

    LPAR            reduce using rule 100 (DIBUJA -> DEFINIRX .)


state 145

    (96) DIBUJA -> BORRAR .

    LPAR            reduce using rule 96 (DIBUJA -> BORRAR .)


state 146

    (103) DIBUJA -> GROSOR .

    LPAR            reduce using rule 103 (DIBUJA -> GROSOR .)


state 147

    (90) DIBUJA -> DEFINIRCOLOR .

    LPAR            reduce using rule 90 (DIBUJA -> DEFINIRCOLOR .)


state 148

    (31) ASIGNACIONP -> EQUAL EXPRE .

    ID              reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    IF              reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    DRAW            reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    PRINT           reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    WHILE           reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    FOR             reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    INT             reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    BOOLEAN         reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    CHAR            reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    STRING          reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    FLOAT           reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    RETURN          reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    END             reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)
    ELSE            reduce using rule 31 (ASIGNACIONP -> EQUAL EXPRE .)


state 149

    (48) CONDICION -> IF LPAR EXPRE . RPAR BLOQUE CONDICIONP END

    RPAR            shift and go to state 169


state 150

    (6) VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .

    ID              reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    IF              reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    DRAW            reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    PRINT           reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    WHILE           reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    FOR             reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    INT             reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    BOOLEAN         reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    CHAR            reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    STRING          reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    FLOAT           reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    END             reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    RETURN          reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    ELSE            reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)
    DEFINE          reduce using rule 6 (VART -> DRAW ID EQUAL NEW DRAWI LPAR RPAR .)


state 151

    (60) EXPREZ -> RELOP EXP .

    RPAR            reduce using rule 60 (EXPREZ -> RELOP EXP .)
    RBRA            reduce using rule 60 (EXPREZ -> RELOP EXP .)
    COMMA           reduce using rule 60 (EXPREZ -> RELOP EXP .)
    ID              reduce using rule 60 (EXPREZ -> RELOP EXP .)
    IF              reduce using rule 60 (EXPREZ -> RELOP EXP .)
    DRAW            reduce using rule 60 (EXPREZ -> RELOP EXP .)
    PRINT           reduce using rule 60 (EXPREZ -> RELOP EXP .)
    WHILE           reduce using rule 60 (EXPREZ -> RELOP EXP .)
    FOR             reduce using rule 60 (EXPREZ -> RELOP EXP .)
    INT             reduce using rule 60 (EXPREZ -> RELOP EXP .)
    BOOLEAN         reduce using rule 60 (EXPREZ -> RELOP EXP .)
    CHAR            reduce using rule 60 (EXPREZ -> RELOP EXP .)
    STRING          reduce using rule 60 (EXPREZ -> RELOP EXP .)
    FLOAT           reduce using rule 60 (EXPREZ -> RELOP EXP .)
    RETURN          reduce using rule 60 (EXPREZ -> RELOP EXP .)
    END             reduce using rule 60 (EXPREZ -> RELOP EXP .)
    ELSE            reduce using rule 60 (EXPREZ -> RELOP EXP .)


state 152

    (77) FACT -> LBRA EXP FACZ . RBRA

    RBRA            shift and go to state 170


state 153

    (81) FACZ -> COMMA . EXP
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS
    (1) FINAL -> .

  ! shift/reduce conflict for ID resolved as shift
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 171
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45
    FINAL                          shift and go to state 38

state 154

    (82) FACZ -> FINAL .

    RBRA            reduce using rule 82 (FACZ -> FINAL .)


state 155

    (43) PRINCIPAL -> DEFINE VOID MAIN LPAR RPAR BLOQUE END .

    $end            reduce using rule 43 (PRINCIPAL -> DEFINE VOID MAIN LPAR RPAR BLOQUE END .)


state 156

    (87) VAR_FUNZ -> COMMA VAR_FUNP .

    RPAR            reduce using rule 87 (VAR_FUNZ -> COMMA VAR_FUNP .)


state 157

    (46) WHILEF -> WHILE LPAR EXPRE RPAR . BLOQUE END
    (18) BLOQUE -> . ESTATUTO BLOQUEP
    (11) ESTATUTO -> . ASIGNACION
    (12) ESTATUTO -> . CONDICION
    (13) ESTATUTO -> . CICLO
    (14) ESTATUTO -> . ACCION
    (15) ESTATUTO -> . VART
    (16) ESTATUTO -> . LLAMADA_FUNCION
    (17) ESTATUTO -> . IMPRIMIR
    (30) ASIGNACION -> . ID ASIGNACIONP
    (48) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (44) CICLO -> . WHILEF
    (45) CICLO -> . FORZ
    (84) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (6) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (7) VART -> . DATA_TIPOS ID VARZ
    (8) VART -> . ARR ID
    (38) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (71) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (46) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (47) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (21) DATA_TIPOS -> . INT
    (22) DATA_TIPOS -> . BOOLEAN
    (23) DATA_TIPOS -> . CHAR
    (24) DATA_TIPOS -> . STRING
    (25) DATA_TIPOS -> . FLOAT
    (35) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    ID              shift and go to state 64
    IF              shift and go to state 65
    DRAW            shift and go to state 9
    PRINT           shift and go to state 55
    WHILE           shift and go to state 54
    FOR             shift and go to state 58
    INT             shift and go to state 13
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 14
    STRING          shift and go to state 11
    FLOAT           shift and go to state 10

    VART                           shift and go to state 51
    CICLO                          shift and go to state 53
    LLAMADA_FUNCION                shift and go to state 56
    ASIGNACION                     shift and go to state 57
    ESTATUTO                       shift and go to state 52
    WHILEF                         shift and go to state 59
    DATA_TIPOS                     shift and go to state 12
    FORZ                           shift and go to state 60
    IMPRIMIR                       shift and go to state 62
    BLOQUE                         shift and go to state 172
    ARR                            shift and go to state 15
    ACCION                         shift and go to state 66
    CONDICION                      shift and go to state 61

state 158

    (71) IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .

    ID              reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    IF              reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    DRAW            reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    PRINT           reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    WHILE           reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    FOR             reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    INT             reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    BOOLEAN         reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    CHAR            reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    STRING          reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    FLOAT           reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    RETURN          reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    END             reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)
    ELSE            reduce using rule 71 (IMPRIMIR -> PRINT LBRA IMPRIMIRZ RBRA .)


state 159

    (47) FORZ -> FOR LPAR ICTE COMMA . ICTE COMMA ICTE RPAR BLOQUE END

    ICTE            shift and go to state 173


state 160

    (83) FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN BLOQUE RETURN EXP END .

    DEFINE          reduce using rule 83 (FUNCION -> DEFINE DATA_TIPOS ID VAR_FUN BLOQUE RETURN EXP END .)


state 161

    (42) LLAMADA_FUNCIONZ -> FINAL .

    RPAR            reduce using rule 42 (LLAMADA_FUNCIONZ -> FINAL .)


state 162

    (39) LLAMADA_FUNCIONP -> EXPRE LLAMADA_FUNCIONZ .

    RPAR            reduce using rule 39 (LLAMADA_FUNCIONP -> EXPRE LLAMADA_FUNCIONZ .)


state 163

    (41) LLAMADA_FUNCIONZ -> COMMA . LLAMADA_FUNCIONP
    (39) LLAMADA_FUNCIONP -> . EXPRE LLAMADA_FUNCIONZ
    (40) LLAMADA_FUNCIONP -> . FINAL
    (59) EXPRE -> . EXP EXPREZ
    (1) FINAL -> .
    (62) EXP -> . TERMINO EXP_W_SIGN
    (65) TERMINO -> . FAC TERMINO_W_SIGN
    (74) FAC -> . LPAR EXPRE RPAR
    (75) FAC -> . FACS VAR_CTE
    (76) FAC -> . ID FACT
    (79) FACS -> . ASOP
    (80) FACS -> . FINAL
    (26) ASOP -> . PLUS
    (27) ASOP -> . MINUS

  ! shift/reduce conflict for ID resolved as shift
    RPAR            reduce using rule 1 (FINAL -> .)
    ICTE            reduce using rule 1 (FINAL -> .)
    FCTE            reduce using rule 1 (FINAL -> .)
    LPAR            shift and go to state 39
    ID              shift and go to state 47
    PLUS            shift and go to state 41
    MINUS           shift and go to state 46

  ! ID              [ reduce using rule 1 (FINAL -> .) ]

    EXPRE                          shift and go to state 129
    LLAMADA_FUNCIONP               shift and go to state 174
    ASOP                           shift and go to state 40
    TERMINO                        shift and go to state 42
    EXP                            shift and go to state 71
    FACS                           shift and go to state 44
    FAC                            shift and go to state 45
    FINAL                          shift and go to state 128

state 164

    (38) LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .

    RPAR            reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    ID              reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    IF              reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    DRAW            reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    PRINT           reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    WHILE           reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    FOR             reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    INT             reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    BOOLEAN         reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    CHAR            reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    STRING          reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    FLOAT           reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    ELSE            reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    END             reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    RETURN          reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    MULT            reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    DIVI            reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    PLUS            reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    MINUS           reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    DEFINE          reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    LESSTH          reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    GREATERTH       reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    SEQUAL          reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    NOTEQ           reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    LESSEQTH        reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    GREATEREQTH     reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    COMMA           reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)
    RBRA            reduce using rule 38 (LLAMADA_FUNCION -> ID LPAR LLAMADA_FUNCIONP RPAR .)


state 165

    (33) ASIGNACIONZ -> COMMA . ICTE

    ICTE            shift and go to state 175


state 166

    (32) ASIGNACIONP -> LBRA ICTE ASIGNACIONZ . RBRA

    RBRA            shift and go to state 176


state 167

    (34) ASIGNACIONZ -> FINAL .

    RBRA            reduce using rule 34 (ASIGNACIONZ -> FINAL .)


state 168

    (84) ACCION -> ID POINT DIBUJA LPAR . VAR_CTE RPAR
    (68) VAR_CTE -> . ICTE
    (69) VAR_CTE -> . FCTE
    (70) VAR_CTE -> . LLAMADA_FUNCION
    (38) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR

    ICTE            shift and go to state 78
    FCTE            shift and go to state 77
    ID              shift and go to state 79

    LLAMADA_FUNCION                shift and go to state 75
    VAR_CTE                        shift and go to state 177

state 169

    (48) CONDICION -> IF LPAR EXPRE RPAR . BLOQUE CONDICIONP END
    (18) BLOQUE -> . ESTATUTO BLOQUEP
    (11) ESTATUTO -> . ASIGNACION
    (12) ESTATUTO -> . CONDICION
    (13) ESTATUTO -> . CICLO
    (14) ESTATUTO -> . ACCION
    (15) ESTATUTO -> . VART
    (16) ESTATUTO -> . LLAMADA_FUNCION
    (17) ESTATUTO -> . IMPRIMIR
    (30) ASIGNACION -> . ID ASIGNACIONP
    (48) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (44) CICLO -> . WHILEF
    (45) CICLO -> . FORZ
    (84) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (6) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (7) VART -> . DATA_TIPOS ID VARZ
    (8) VART -> . ARR ID
    (38) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (71) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (46) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (47) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (21) DATA_TIPOS -> . INT
    (22) DATA_TIPOS -> . BOOLEAN
    (23) DATA_TIPOS -> . CHAR
    (24) DATA_TIPOS -> . STRING
    (25) DATA_TIPOS -> . FLOAT
    (35) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    ID              shift and go to state 64
    IF              shift and go to state 65
    DRAW            shift and go to state 9
    PRINT           shift and go to state 55
    WHILE           shift and go to state 54
    FOR             shift and go to state 58
    INT             shift and go to state 13
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 14
    STRING          shift and go to state 11
    FLOAT           shift and go to state 10

    VART                           shift and go to state 51
    CICLO                          shift and go to state 53
    LLAMADA_FUNCION                shift and go to state 56
    ASIGNACION                     shift and go to state 57
    ESTATUTO                       shift and go to state 52
    WHILEF                         shift and go to state 59
    DATA_TIPOS                     shift and go to state 12
    FORZ                           shift and go to state 60
    IMPRIMIR                       shift and go to state 62
    BLOQUE                         shift and go to state 178
    ARR                            shift and go to state 15
    ACCION                         shift and go to state 66
    CONDICION                      shift and go to state 61

state 170

    (77) FACT -> LBRA EXP FACZ RBRA .

    MULT            reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    DIVI            reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    PLUS            reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    MINUS           reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    DEFINE          reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    ID              reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    IF              reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    DRAW            reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    PRINT           reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    WHILE           reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    FOR             reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    INT             reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    BOOLEAN         reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    CHAR            reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    STRING          reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    FLOAT           reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    RETURN          reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    END             reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    ELSE            reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    LESSTH          reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    GREATERTH       reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    SEQUAL          reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    NOTEQ           reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    LESSEQTH        reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    GREATEREQTH     reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    RPAR            reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    COMMA           reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)
    RBRA            reduce using rule 77 (FACT -> LBRA EXP FACZ RBRA .)


state 171

    (81) FACZ -> COMMA EXP .

    RBRA            reduce using rule 81 (FACZ -> COMMA EXP .)


state 172

    (46) WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE . END

    END             shift and go to state 179


state 173

    (47) FORZ -> FOR LPAR ICTE COMMA ICTE . COMMA ICTE RPAR BLOQUE END

    COMMA           shift and go to state 180


state 174

    (41) LLAMADA_FUNCIONZ -> COMMA LLAMADA_FUNCIONP .

    RPAR            reduce using rule 41 (LLAMADA_FUNCIONZ -> COMMA LLAMADA_FUNCIONP .)


state 175

    (33) ASIGNACIONZ -> COMMA ICTE .

    RBRA            reduce using rule 33 (ASIGNACIONZ -> COMMA ICTE .)


state 176

    (32) ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .

    ID              reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    IF              reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    DRAW            reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    PRINT           reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    WHILE           reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    FOR             reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    INT             reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    BOOLEAN         reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    CHAR            reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    STRING          reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    FLOAT           reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    RETURN          reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    END             reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)
    ELSE            reduce using rule 32 (ASIGNACIONP -> LBRA ICTE ASIGNACIONZ RBRA .)


state 177

    (84) ACCION -> ID POINT DIBUJA LPAR VAR_CTE . RPAR

    RPAR            shift and go to state 181


state 178

    (48) CONDICION -> IF LPAR EXPRE RPAR BLOQUE . CONDICIONP END
    (49) CONDICIONP -> . ELSE CONDICIONZ
    (50) CONDICIONP -> . FINAL
    (1) FINAL -> .

    ELSE            shift and go to state 183
    END             reduce using rule 1 (FINAL -> .)

    CONDICIONP                     shift and go to state 182
    FINAL                          shift and go to state 184

state 179

    (46) WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .

    ID              reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    IF              reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    DRAW            reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    PRINT           reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    WHILE           reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    FOR             reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    INT             reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    BOOLEAN         reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    CHAR            reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    STRING          reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    FLOAT           reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    END             reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    ELSE            reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)
    RETURN          reduce using rule 46 (WHILEF -> WHILE LPAR EXPRE RPAR BLOQUE END .)


state 180

    (47) FORZ -> FOR LPAR ICTE COMMA ICTE COMMA . ICTE RPAR BLOQUE END

    ICTE            shift and go to state 185


state 181

    (84) ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .

    ID              reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    IF              reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    DRAW            reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    PRINT           reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    WHILE           reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    FOR             reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    INT             reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    BOOLEAN         reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    CHAR            reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    STRING          reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    FLOAT           reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    END             reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    RETURN          reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)
    ELSE            reduce using rule 84 (ACCION -> ID POINT DIBUJA LPAR VAR_CTE RPAR .)


state 182

    (48) CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP . END

    END             shift and go to state 186


state 183

    (49) CONDICIONP -> ELSE . CONDICIONZ
    (51) CONDICIONZ -> . BLOQUE
    (52) CONDICIONZ -> . CONDICION
    (18) BLOQUE -> . ESTATUTO BLOQUEP
    (48) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (11) ESTATUTO -> . ASIGNACION
    (12) ESTATUTO -> . CONDICION
    (13) ESTATUTO -> . CICLO
    (14) ESTATUTO -> . ACCION
    (15) ESTATUTO -> . VART
    (16) ESTATUTO -> . LLAMADA_FUNCION
    (17) ESTATUTO -> . IMPRIMIR
    (30) ASIGNACION -> . ID ASIGNACIONP
    (44) CICLO -> . WHILEF
    (45) CICLO -> . FORZ
    (84) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (6) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (7) VART -> . DATA_TIPOS ID VARZ
    (8) VART -> . ARR ID
    (38) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (71) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (46) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (47) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (21) DATA_TIPOS -> . INT
    (22) DATA_TIPOS -> . BOOLEAN
    (23) DATA_TIPOS -> . CHAR
    (24) DATA_TIPOS -> . STRING
    (25) DATA_TIPOS -> . FLOAT
    (35) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    IF              shift and go to state 65
    ID              shift and go to state 64
    DRAW            shift and go to state 9
    PRINT           shift and go to state 55
    WHILE           shift and go to state 54
    FOR             shift and go to state 58
    INT             shift and go to state 13
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 14
    STRING          shift and go to state 11
    FLOAT           shift and go to state 10

    VART                           shift and go to state 51
    CICLO                          shift and go to state 53
    LLAMADA_FUNCION                shift and go to state 56
    ASIGNACION                     shift and go to state 57
    ESTATUTO                       shift and go to state 52
    WHILEF                         shift and go to state 59
    DATA_TIPOS                     shift and go to state 12
    FORZ                           shift and go to state 60
    IMPRIMIR                       shift and go to state 62
    BLOQUE                         shift and go to state 188
    CONDICIONZ                     shift and go to state 189
    ARR                            shift and go to state 15
    ACCION                         shift and go to state 66
    CONDICION                      shift and go to state 187

state 184

    (50) CONDICIONP -> FINAL .

    END             reduce using rule 50 (CONDICIONP -> FINAL .)


state 185

    (47) FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE . RPAR BLOQUE END

    RPAR            shift and go to state 190


state 186

    (48) CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .

    ID              reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    IF              reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    DRAW            reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    PRINT           reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    WHILE           reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    FOR             reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    INT             reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    BOOLEAN         reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    CHAR            reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    STRING          reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    FLOAT           reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    RETURN          reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    END             reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)
    ELSE            reduce using rule 48 (CONDICION -> IF LPAR EXPRE RPAR BLOQUE CONDICIONP END .)


state 187

    (52) CONDICIONZ -> CONDICION .
    (12) ESTATUTO -> CONDICION .

  ! reduce/reduce conflict for END resolved using rule 12 (ESTATUTO -> CONDICION .)
    ID              reduce using rule 12 (ESTATUTO -> CONDICION .)
    IF              reduce using rule 12 (ESTATUTO -> CONDICION .)
    DRAW            reduce using rule 12 (ESTATUTO -> CONDICION .)
    PRINT           reduce using rule 12 (ESTATUTO -> CONDICION .)
    WHILE           reduce using rule 12 (ESTATUTO -> CONDICION .)
    FOR             reduce using rule 12 (ESTATUTO -> CONDICION .)
    INT             reduce using rule 12 (ESTATUTO -> CONDICION .)
    BOOLEAN         reduce using rule 12 (ESTATUTO -> CONDICION .)
    CHAR            reduce using rule 12 (ESTATUTO -> CONDICION .)
    STRING          reduce using rule 12 (ESTATUTO -> CONDICION .)
    FLOAT           reduce using rule 12 (ESTATUTO -> CONDICION .)
    END             reduce using rule 12 (ESTATUTO -> CONDICION .)

  ! END             [ reduce using rule 52 (CONDICIONZ -> CONDICION .) ]


state 188

    (51) CONDICIONZ -> BLOQUE .

    END             reduce using rule 51 (CONDICIONZ -> BLOQUE .)


state 189

    (49) CONDICIONP -> ELSE CONDICIONZ .

    END             reduce using rule 49 (CONDICIONP -> ELSE CONDICIONZ .)


state 190

    (47) FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR . BLOQUE END
    (18) BLOQUE -> . ESTATUTO BLOQUEP
    (11) ESTATUTO -> . ASIGNACION
    (12) ESTATUTO -> . CONDICION
    (13) ESTATUTO -> . CICLO
    (14) ESTATUTO -> . ACCION
    (15) ESTATUTO -> . VART
    (16) ESTATUTO -> . LLAMADA_FUNCION
    (17) ESTATUTO -> . IMPRIMIR
    (30) ASIGNACION -> . ID ASIGNACIONP
    (48) CONDICION -> . IF LPAR EXPRE RPAR BLOQUE CONDICIONP END
    (44) CICLO -> . WHILEF
    (45) CICLO -> . FORZ
    (84) ACCION -> . ID POINT DIBUJA LPAR VAR_CTE RPAR
    (6) VART -> . DRAW ID EQUAL NEW DRAWI LPAR RPAR
    (7) VART -> . DATA_TIPOS ID VARZ
    (8) VART -> . ARR ID
    (38) LLAMADA_FUNCION -> . ID LPAR LLAMADA_FUNCIONP RPAR
    (71) IMPRIMIR -> . PRINT LBRA IMPRIMIRZ RBRA
    (46) WHILEF -> . WHILE LPAR EXPRE RPAR BLOQUE END
    (47) FORZ -> . FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END
    (21) DATA_TIPOS -> . INT
    (22) DATA_TIPOS -> . BOOLEAN
    (23) DATA_TIPOS -> . CHAR
    (24) DATA_TIPOS -> . STRING
    (25) DATA_TIPOS -> . FLOAT
    (35) ARR -> . DATA_TIPOS LBRA ICTE ARRZ RBRA

    ID              shift and go to state 64
    IF              shift and go to state 65
    DRAW            shift and go to state 9
    PRINT           shift and go to state 55
    WHILE           shift and go to state 54
    FOR             shift and go to state 58
    INT             shift and go to state 13
    BOOLEAN         shift and go to state 16
    CHAR            shift and go to state 14
    STRING          shift and go to state 11
    FLOAT           shift and go to state 10

    VART                           shift and go to state 51
    CICLO                          shift and go to state 53
    LLAMADA_FUNCION                shift and go to state 56
    ASIGNACION                     shift and go to state 57
    ESTATUTO                       shift and go to state 52
    WHILEF                         shift and go to state 59
    DATA_TIPOS                     shift and go to state 12
    FORZ                           shift and go to state 60
    IMPRIMIR                       shift and go to state 62
    BLOQUE                         shift and go to state 191
    ARR                            shift and go to state 15
    ACCION                         shift and go to state 66
    CONDICION                      shift and go to state 61

state 191

    (47) FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE . END

    END             shift and go to state 192


state 192

    (47) FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .

    ID              reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    IF              reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    DRAW            reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    PRINT           reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    WHILE           reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    FOR             reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    INT             reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    BOOLEAN         reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    CHAR            reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    STRING          reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    FLOAT           reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    END             reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    ELSE            reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)
    RETURN          reduce using rule 47 (FORZ -> FOR LPAR ICTE COMMA ICTE COMMA ICTE RPAR BLOQUE END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 28 resolved as shift
WARNING: shift/reduce conflict for ID in state 39 resolved as shift
WARNING: shift/reduce conflict for ID in state 72 resolved as shift
WARNING: shift/reduce conflict for ID in state 81 resolved as shift
WARNING: shift/reduce conflict for ID in state 86 resolved as shift
WARNING: shift/reduce conflict for ID in state 94 resolved as shift
WARNING: shift/reduce conflict for ID in state 95 resolved as shift
WARNING: shift/reduce conflict for ID in state 97 resolved as shift
WARNING: shift/reduce conflict for ID in state 98 resolved as shift
WARNING: shift/reduce conflict for ID in state 101 resolved as shift
WARNING: shift/reduce conflict for ID in state 103 resolved as shift
WARNING: shift/reduce conflict for ID in state 107 resolved as shift
WARNING: shift/reduce conflict for ID in state 153 resolved as shift
WARNING: shift/reduce conflict for ID in state 163 resolved as shift
WARNING: reduce/reduce conflict in state 187 resolved using rule (ESTATUTO -> CONDICION)
WARNING: rejected rule (CONDICIONZ -> CONDICION) in state 187
WARNING: Rule (CONDICIONZ -> CONDICION) is never reduced
